

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Apr 22 17:08:52 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           ; Version 2.05
    22                           ; Generated 20/12/2018 GMT
    23                           ; 
    24                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F25K22 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	nvCOMRAM
    57  000007                     __pnvCOMRAM:
    58                           	opt callstack 0
    59  000007                     _timer0ReloadVal:
    60                           	opt callstack 0
    61  000007                     	ds	1
    62  0000                     _ANSELA	set	3896
    63  0000                     _ANSELB	set	3897
    64  0000                     _ANSELC	set	3898
    65  0000                     _PORTAbits	set	3968
    66  0000                     _LATAbits	set	3977
    67  0000                     _T0CON	set	4053
    68  0000                     _TMR0L	set	4054
    69  0000                     _TMR0H	set	4055
    70  0000                     _RCONbits	set	4048
    71  0000                     _INTCONbits	set	4082
    72  0000                     _INTCON2bits	set	4081
    73  0000                     _WPUB	set	3937
    74  0000                     _TRISC	set	3988
    75  0000                     _TRISB	set	3987
    76  0000                     _TRISA	set	3986
    77  0000                     _LATC	set	3979
    78  0000                     _LATB	set	3978
    79  0000                     _LATA	set	3977
    80  0000                     _OSCTUNE	set	3995
    81  0000                     _OSCCON2	set	4050
    82  0000                     _OSCCON	set	4051
    83                           
    84                           ; #config settings
    85  0000                     
    86                           	psect	cinit
    87  0000B4                     __pcinit:
    88                           	opt callstack 0
    89  0000B4                     start_initialization:
    90                           	opt callstack 0
    91  0000B4                     __initialization:
    92                           	opt callstack 0
    93                           
    94                           ; Clear objects allocated to COMRAM (2 bytes)
    95  0000B4  6A06               	clrf	(__pbssCOMRAM+1)& (0+255),c
    96  0000B6  6A05               	clrf	__pbssCOMRAM& (0+255),c
    97  0000B8                     end_of_initialization:
    98                           	opt callstack 0
    99  0000B8                     __end_of__initialization:
   100                           	opt callstack 0
   101  0000B8  9008               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   102  0000BA  9208               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   103  0000BC  0100               	movlb	0
   104  0000BE  EF0E  F000         	goto	_main	;jump to C main() function
   105                           
   106                           	psect	bssCOMRAM
   107  000005                     __pbssCOMRAM:
   108                           	opt callstack 0
   109  000005                     _timecount:
   110                           	opt callstack 0
   111  000005                     	ds	2
   112                           
   113                           	psect	cstackCOMRAM
   114  000001                     __pcstackCOMRAM:
   115                           	opt callstack 0
   116  000001                     ??_main:
   117                           
   118                           ; 1 bytes @ 0x0
   119  000001                     	ds	2
   120  000003                     main@old_timecount:
   121                           	opt callstack 0
   122                           
   123                           ; 2 bytes @ 0x2
   124  000003                     	ds	2
   125                           
   126 ;;
   127 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   128 ;;
   129 ;; *************** function _main *****************
   130 ;; Defined at:
   131 ;;		line 52 in file "main.c"
   132 ;; Parameters:    Size  Location     Type
   133 ;;		None
   134 ;; Auto vars:     Size  Location     Type
   135 ;;  old_timecoun    2    2[COMRAM] int 
   136 ;; Return value:  Size  Location     Type
   137 ;;                  1    wreg      void 
   138 ;; Registers used:
   139 ;;		wreg, status,2, status,0, cstack
   140 ;; Tracked objects:
   141 ;;		On entry : 0/0
   142 ;;		On exit  : 0/0
   143 ;;		Unchanged: 0/0
   144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   145 ;;      Params:         0       0       0       0       0       0       0
   146 ;;      Locals:         2       0       0       0       0       0       0
   147 ;;      Temps:          2       0       0       0       0       0       0
   148 ;;      Totals:         4       0       0       0       0       0       0
   149 ;;Total ram usage:        4 bytes
   150 ;; Hardware stack levels required when called:    4
   151 ;; This function calls:
   152 ;;		_SYSTEM_Initialize
   153 ;;		_TMR0_Initialize
   154 ;; This function is called by:
   155 ;;		Startup code after reset
   156 ;; This function uses a non-reentrant model
   157 ;;
   158                           
   159                           	psect	text0
   160  00001C                     __ptext0:
   161                           	opt callstack 0
   162  00001C                     _main:
   163                           	opt callstack 27
   164                           
   165                           ;main.c: 55: int old_timecount;;main.c: 56: extern int timecount;;main.c: 57: SYSTEM_Ini
      +                          tialize();
   166                           
   167                           ;incstack = 0
   168  00001C  EC51  F000         	call	_SYSTEM_Initialize	;wreg free
   169                           
   170                           ;main.c: 64: (INTCONbits.GIE = 1);
   171  000020  8EF2               	bsf	4082,7,c	;volatile
   172                           
   173                           ;main.c: 74: TMR0_Initialize();
   174  000022  EC46  F000         	call	_TMR0_Initialize	;wreg free
   175                           
   176                           ;main.c: 75: old_timecount=timecount;
   177  000026  C005  F003         	movff	_timecount,main@old_timecount
   178  00002A  C006  F004         	movff	_timecount+1,main@old_timecount+1
   179                           
   180                           ;main.c: 76: LATAbits.LATA0=0;
   181  00002E  9089               	bcf	3977,0,c	;volatile
   182  000030                     l897:
   183                           
   184                           ;main.c: 78: {;main.c: 79: if(timecount-old_timecount>=10000)
   185  000030  5003               	movf	main@old_timecount,w,c
   186  000032  5C05               	subwf	_timecount,w,c
   187  000034  6E01               	movwf	??_main& (0+255),c
   188  000036  5004               	movf	main@old_timecount+1,w,c
   189  000038  5806               	subwfb	_timecount+1,w,c
   190  00003A  6E02               	movwf	(??_main+1)& (0+255),c
   191  00003C  BE02               	btfsc	??_main+1,7,c
   192  00003E  D00B               	goto	l903
   193  000040  0E10               	movlw	16
   194  000042  5C01               	subwf	??_main,w,c
   195  000044  0E27               	movlw	39
   196  000046  5802               	subwfb	??_main+1,w,c
   197  000048  A0D8               	btfss	status,0,c
   198  00004A  D005               	goto	l903
   199                           
   200                           ;main.c: 80: {;main.c: 81: LATAbits.LATA0^=1;
   201  00004C  7089               	btg	3977,0,c	;volatile
   202                           
   203                           ;main.c: 82: old_timecount=timecount;
   204  00004E  C005  F003         	movff	_timecount,main@old_timecount
   205  000052  C006  F004         	movff	_timecount+1,main@old_timecount+1
   206  000056                     l903:
   207                           
   208                           ;main.c: 83: };main.c: 84: LATAbits.LATA1=PORTAbits.RA2;
   209  000056  A480               	btfss	3968,2,c	;volatile
   210  000058  D002               	bra	u45
   211  00005A  8289               	bsf	3977,1,c	;volatile
   212  00005C  D001               	bra	u47
   213  00005E                     u45:
   214  00005E  9289               	bcf	3977,1,c	;volatile
   215  000060                     u47:
   216  000060  D7E7               	goto	l897
   217  000062                     __end_of_main:
   218                           	opt callstack 0
   219                           
   220 ;; *************** function _SYSTEM_Initialize *****************
   221 ;; Defined at:
   222 ;;		line 51 in file "mcc_generated_files/mcc.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;		None
   225 ;; Auto vars:     Size  Location     Type
   226 ;;		None
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg, status,2, cstack
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   236 ;;      Params:         0       0       0       0       0       0       0
   237 ;;      Locals:         0       0       0       0       0       0       0
   238 ;;      Temps:          0       0       0       0       0       0       0
   239 ;;      Totals:         0       0       0       0       0       0       0
   240 ;;Total ram usage:        0 bytes
   241 ;; Hardware stack levels used:    1
   242 ;; Hardware stack levels required when called:    3
   243 ;; This function calls:
   244 ;;		_INTERRUPT_Initialize
   245 ;;		_OSCILLATOR_Initialize
   246 ;;		_PIN_MANAGER_Initialize
   247 ;;		_TMR0_Initialize
   248 ;; This function is called by:
   249 ;;		_main
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           	psect	text1
   254  0000A2                     __ptext1:
   255                           	opt callstack 0
   256  0000A2                     _SYSTEM_Initialize:
   257                           	opt callstack 27
   258                           
   259                           ;mcc.c: 54: INTERRUPT_Initialize();
   260                           
   261                           ;incstack = 0
   262  0000A2  EC6E  F000         	call	_INTERRUPT_Initialize	;wreg free
   263                           
   264                           ;mcc.c: 55: PIN_MANAGER_Initialize();
   265  0000A6  EC31  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   266                           
   267                           ; BSR set to: 15
   268                           ;mcc.c: 56: OSCILLATOR_Initialize();
   269  0000AA  EC61  F000         	call	_OSCILLATOR_Initialize	;wreg free
   270                           
   271                           ; BSR set to: 15
   272                           ;mcc.c: 57: TMR0_Initialize();
   273  0000AE  EC46  F000         	call	_TMR0_Initialize	;wreg free
   274  0000B2  0012               	return		;funcret
   275  0000B4                     __end_of_SYSTEM_Initialize:
   276                           	opt callstack 0
   277                           
   278 ;; *************** function _TMR0_Initialize *****************
   279 ;; Defined at:
   280 ;;		line 69 in file "mcc_generated_files/tmr0.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;		None
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, status,2
   289 ;; Tracked objects:
   290 ;;		On entry : 0/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   294 ;;      Params:         0       0       0       0       0       0       0
   295 ;;      Locals:         0       0       0       0       0       0       0
   296 ;;      Temps:          0       0       0       0       0       0       0
   297 ;;      Totals:         0       0       0       0       0       0       0
   298 ;;Total ram usage:        0 bytes
   299 ;; Hardware stack levels used:    1
   300 ;; Hardware stack levels required when called:    2
   301 ;; This function calls:
   302 ;;		Nothing
   303 ;; This function is called by:
   304 ;;		_SYSTEM_Initialize
   305 ;;		_main
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309                           	psect	text2
   310  00008C                     __ptext2:
   311                           	opt callstack 0
   312  00008C                     _TMR0_Initialize:
   313                           	opt callstack 28
   314                           
   315                           ;tmr0.c: 74: TMR0H = 0x00;
   316                           
   317                           ;incstack = 0
   318  00008C  0E00               	movlw	0
   319  00008E  6ED7               	movwf	4055,c	;volatile
   320                           
   321                           ;tmr0.c: 77: TMR0L = 0x9C;
   322  000090  0E9C               	movlw	156
   323  000092  6ED6               	movwf	4054,c	;volatile
   324                           
   325                           ;tmr0.c: 81: timer0ReloadVal = 156;
   326  000094  0E9C               	movlw	156
   327  000096  6E07               	movwf	_timer0ReloadVal,c	;volatile
   328                           
   329                           ;tmr0.c: 84: INTCONbits.TMR0IF = 0;
   330  000098  94F2               	bcf	4082,2,c	;volatile
   331                           
   332                           ;tmr0.c: 87: INTCONbits.TMR0IE = 1;
   333  00009A  8AF2               	bsf	4082,5,c	;volatile
   334                           
   335                           ;tmr0.c: 92: T0CON = 0xD3;
   336  00009C  0ED3               	movlw	211
   337  00009E  6ED5               	movwf	4053,c	;volatile
   338  0000A0  0012               	return		;funcret
   339  0000A2                     __end_of_TMR0_Initialize:
   340                           	opt callstack 0
   341                           
   342 ;; *************** function _PIN_MANAGER_Initialize *****************
   343 ;; Defined at:
   344 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;		None
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, status,2
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 3F/F
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   358 ;;      Params:         0       0       0       0       0       0       0
   359 ;;      Locals:         0       0       0       0       0       0       0
   360 ;;      Temps:          0       0       0       0       0       0       0
   361 ;;      Totals:         0       0       0       0       0       0       0
   362 ;;Total ram usage:        0 bytes
   363 ;; Hardware stack levels used:    1
   364 ;; Hardware stack levels required when called:    2
   365 ;; This function calls:
   366 ;;		Nothing
   367 ;; This function is called by:
   368 ;;		_SYSTEM_Initialize
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           	psect	text3
   373  000062                     __ptext3:
   374                           	opt callstack 0
   375  000062                     _PIN_MANAGER_Initialize:
   376                           	opt callstack 27
   377                           
   378                           ;pin_manager.c: 60: LATA = 0x00;
   379                           
   380                           ;incstack = 0
   381  000062  0E00               	movlw	0
   382  000064  6E89               	movwf	3977,c	;volatile
   383                           
   384                           ;pin_manager.c: 61: LATB = 0x00;
   385  000066  0E00               	movlw	0
   386  000068  6E8A               	movwf	3978,c	;volatile
   387                           
   388                           ;pin_manager.c: 62: LATC = 0x00;
   389  00006A  0E00               	movlw	0
   390  00006C  6E8B               	movwf	3979,c	;volatile
   391                           
   392                           ;pin_manager.c: 67: TRISA = 0xFC;
   393  00006E  0EFC               	movlw	252
   394  000070  6E92               	movwf	3986,c	;volatile
   395                           
   396                           ;pin_manager.c: 68: TRISB = 0xFF;
   397  000072  6893               	setf	3987,c	;volatile
   398                           
   399                           ;pin_manager.c: 69: TRISC = 0xFF;
   400  000074  6894               	setf	3988,c	;volatile
   401                           
   402                           ;pin_manager.c: 74: ANSELC = 0xFC;
   403  000076  0EFC               	movlw	252
   404  000078  010F               	movlb	15	; () banked
   405  00007A  6F3A               	movwf	58,b	;volatile
   406                           
   407                           ;pin_manager.c: 75: ANSELB = 0x3F;
   408  00007C  0E3F               	movlw	63
   409  00007E  6F39               	movwf	57,b	;volatile
   410                           
   411                           ;pin_manager.c: 76: ANSELA = 0x28;
   412  000080  0E28               	movlw	40
   413  000082  6F38               	movwf	56,b	;volatile
   414                           
   415                           ;pin_manager.c: 81: WPUB = 0x00;
   416  000084  0E00               	movlw	0
   417  000086  6E61               	movwf	3937,c	;volatile
   418                           
   419                           ; BSR set to: 15
   420                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 1;
   421  000088  8EF1               	bsf	4081,7,c	;volatile
   422                           
   423                           ; BSR set to: 15
   424  00008A  0012               	return		;funcret
   425  00008C                     __end_of_PIN_MANAGER_Initialize:
   426                           	opt callstack 0
   427                           
   428 ;; *************** function _OSCILLATOR_Initialize *****************
   429 ;; Defined at:
   430 ;;		line 60 in file "mcc_generated_files/mcc.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, status,2
   439 ;; Tracked objects:
   440 ;;		On entry : 3F/F
   441 ;;		On exit  : 3F/F
   442 ;;		Unchanged: 3E/0
   443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   444 ;;      Params:         0       0       0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0       0       0
   447 ;;      Totals:         0       0       0       0       0       0       0
   448 ;;Total ram usage:        0 bytes
   449 ;; Hardware stack levels used:    1
   450 ;; Hardware stack levels required when called:    2
   451 ;; This function calls:
   452 ;;		Nothing
   453 ;; This function is called by:
   454 ;;		_SYSTEM_Initialize
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           	psect	text4
   459  0000C2                     __ptext4:
   460                           	opt callstack 0
   461  0000C2                     _OSCILLATOR_Initialize:
   462                           	opt callstack 27
   463                           
   464                           ; BSR set to: 15
   465                           ;mcc.c: 63: OSCCON = 0x40;
   466                           
   467                           ; BSR set to: 15
   468                           ;incstack = 0
   469  0000C2  0E40               	movlw	64
   470  0000C4  6ED3               	movwf	4051,c	;volatile
   471                           
   472                           ;mcc.c: 65: OSCCON2 = 0x04;
   473  0000C6  0E04               	movlw	4
   474  0000C8  6ED2               	movwf	4050,c	;volatile
   475                           
   476                           ;mcc.c: 67: OSCTUNE = 0x40;
   477  0000CA  0E40               	movlw	64
   478  0000CC  6E9B               	movwf	3995,c	;volatile
   479                           
   480                           ; BSR set to: 15
   481  0000CE  0012               	return		;funcret
   482  0000D0                     __end_of_OSCILLATOR_Initialize:
   483                           	opt callstack 0
   484                           
   485 ;; *************** function _INTERRUPT_Initialize *****************
   486 ;; Defined at:
   487 ;;		line 53 in file "mcc_generated_files/interrupt_manager.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;		None
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		None
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   501 ;;      Params:         0       0       0       0       0       0       0
   502 ;;      Locals:         0       0       0       0       0       0       0
   503 ;;      Temps:          0       0       0       0       0       0       0
   504 ;;      Totals:         0       0       0       0       0       0       0
   505 ;;Total ram usage:        0 bytes
   506 ;; Hardware stack levels used:    1
   507 ;; Hardware stack levels required when called:    2
   508 ;; This function calls:
   509 ;;		Nothing
   510 ;; This function is called by:
   511 ;;		_SYSTEM_Initialize
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           	psect	text5
   516  0000DC                     __ptext5:
   517                           	opt callstack 0
   518  0000DC                     _INTERRUPT_Initialize:
   519                           	opt callstack 27
   520                           
   521                           ;interrupt_manager.c: 56: RCONbits.IPEN = 0;
   522                           
   523                           ; BSR set to: 15
   524                           ;incstack = 0
   525  0000DC  9ED0               	bcf	4048,7,c	;volatile
   526  0000DE  0012               	return		;funcret
   527  0000E0                     __end_of_INTERRUPT_Initialize:
   528                           	opt callstack 0
   529                           
   530 ;; *************** function _INTERRUPT_InterruptManager *****************
   531 ;; Defined at:
   532 ;;		line 59 in file "mcc_generated_files/interrupt_manager.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		status,2, status,0, cstack
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   546 ;;      Params:         0       0       0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0       0       0
   548 ;;      Temps:          0       0       0       0       0       0       0
   549 ;;      Totals:         0       0       0       0       0       0       0
   550 ;;Total ram usage:        0 bytes
   551 ;; Hardware stack levels used:    1
   552 ;; Hardware stack levels required when called:    1
   553 ;; This function calls:
   554 ;;		_TMR0_ISR
   555 ;; This function is called by:
   556 ;;		Interrupt level 2
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	intcode
   561  000008                     __pintcode:
   562                           	opt callstack 0
   563  000008                     _INTERRUPT_InterruptManager:
   564                           	opt callstack 27
   565                           
   566                           ;incstack = 0
   567  000008  8208               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   568                           
   569                           ;interrupt_manager.c: 62: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
   570  00000A  BAF2               	btfsc	4082,5,c	;volatile
   571  00000C  A4F2               	btfss	4082,2,c	;volatile
   572  00000E  D002               	goto	i2l66
   573                           
   574                           ;interrupt_manager.c: 63: {;interrupt_manager.c: 64: TMR0_ISR();
   575  000010  EC68  F000         	call	_TMR0_ISR	;wreg free
   576  000014                     i2l66:
   577  000014  9208               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   578  000016  0011               	retfie		f
   579  000018                     __end_of_INTERRUPT_InterruptManager:
   580                           	opt callstack 0
   581                           
   582 ;; *************** function _TMR0_ISR *****************
   583 ;; Defined at:
   584 ;;		line 95 in file "mcc_generated_files/tmr0.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;		None
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		status,2, status,0
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   598 ;;      Params:         0       0       0       0       0       0       0
   599 ;;      Locals:         0       0       0       0       0       0       0
   600 ;;      Temps:          0       0       0       0       0       0       0
   601 ;;      Totals:         0       0       0       0       0       0       0
   602 ;;Total ram usage:        0 bytes
   603 ;; Hardware stack levels used:    1
   604 ;; This function calls:
   605 ;;		Nothing
   606 ;; This function is called by:
   607 ;;		_INTERRUPT_InterruptManager
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text7
   612  0000D0                     __ptext7:
   613                           	opt callstack 0
   614  0000D0                     _TMR0_ISR:
   615                           	opt callstack 27
   616                           
   617                           ;tmr0.c: 100: INTCONbits.TMR0IF = 0;
   618                           
   619                           ;incstack = 0
   620  0000D0  94F2               	bcf	4082,2,c	;volatile
   621                           
   622                           ;tmr0.c: 103: TMR0L = timer0ReloadVal;
   623  0000D2  C007  FFD6         	movff	_timer0ReloadVal,4054	;volatile
   624                           
   625                           ;tmr0.c: 104: timecount++;
   626  0000D6  4A05               	infsnz	_timecount,f,c
   627  0000D8  2A06               	incf	_timecount+1,f,c
   628  0000DA  0012               	return		;funcret
   629  0000DC                     __end_of_TMR0_ISR:
   630                           	opt callstack 0
   631  0000                     
   632                           	psect	rparam
   633  0000                     
   634                           	psect	temp
   635  000008                     btemp:
   636                           	opt callstack 0
   637  000008                     	ds	1
   638  0000                     int$flags	set	btemp
   639  0000                     wtemp8	set	btemp+1
   640  0000                     ttemp5	set	btemp+1
   641  0000                     ttemp6	set	btemp+4
   642  0000                     ttemp7	set	btemp+8
   643                           tosu	equ	0xFFF
   644                           tosh	equ	0xFFE
   645                           tosl	equ	0xFFD
   646                           stkptr	equ	0xFFC
   647                           pclatu	equ	0xFFB
   648                           pclath	equ	0xFFA
   649                           pcl	equ	0xFF9
   650                           tblptru	equ	0xFF8
   651                           tblptrh	equ	0xFF7
   652                           tblptrl	equ	0xFF6
   653                           tablat	equ	0xFF5
   654                           prodh	equ	0xFF4
   655                           prodl	equ	0xFF3
   656                           indf0	equ	0xFEF
   657                           postinc0	equ	0xFEE
   658                           postdec0	equ	0xFED
   659                           preinc0	equ	0xFEC
   660                           plusw0	equ	0xFEB
   661                           fsr0h	equ	0xFEA
   662                           fsr0l	equ	0xFE9
   663                           wreg	equ	0xFE8
   664                           indf1	equ	0xFE7
   665                           postinc1	equ	0xFE6
   666                           postdec1	equ	0xFE5
   667                           preinc1	equ	0xFE4
   668                           plusw1	equ	0xFE3
   669                           fsr1h	equ	0xFE2
   670                           fsr1l	equ	0xFE1
   671                           bsr	equ	0xFE0
   672                           indf2	equ	0xFDF
   673                           postinc2	equ	0xFDE
   674                           postdec2	equ	0xFDD
   675                           preinc2	equ	0xFDC
   676                           plusw2	equ	0xFDB
   677                           fsr2h	equ	0xFDA
   678                           fsr2l	equ	0xFD9
   679                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      4       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      15
                                              0 COMRAM     4     4      0
                  _SYSTEM_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
   _TMR0_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      4       7       1        7.4%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       7       9        0.0%
DATA                 0      0       7      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Apr 22 17:08:52 2020

                                 u45 005E                                   u47 0060  
                    _timer0ReloadVal 0007                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                          __CFG_LVP$ON 000000  
                                l903 0056                                  l897 0030  
                       __CFG_CPB$OFF 000000                         __CFG_CPD$OFF 000000  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 i2l66 0014  
                               _WPUB 000F61                                 _main 001C  
                               btemp 0008                        __CFG_BORV$190 000000  
                               start 0018                        __CFG_IESO$OFF 000000  
                       ___param_bank 000000              __end_of_TMR0_Initialize 00A2  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 00D0  
                              ?_main 0001                                _T0CON 000FD5  
                     __CFG_DEBUG$OFF 000000                                _TMR0H 000FD7  
                              _TMR0L 000FD6                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                     __end_of_TMR0_ISR 00DC  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                 __CFG_MCLRE$EXTMCLR 000000                                ttemp5 0009  
                              ttemp6 000C                                ttemp7 0010  
                              status 000FD8                                wtemp8 0009  
                     __CFG_HFOFST$ON 000000                       __CFG_PBADEN$ON 000000  
                    __initialization 00B4                         __end_of_main 0062  
        ?_INTERRUPT_InterruptManager 0001                               ??_main 0001  
                      __activetblptr 000000                               _ANSELA 000F38  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                     __CFG_WDTEN$OFF 000000                               _OSCCON 000FD3  
                     __CFG_XINST$OFF 000000                    main@old_timecount 0003  
                     __CFG_STVREN$ON 000000                     ?_TMR0_Initialize 0001  
      __size_of_INTERRUPT_Initialize 0004                    _SYSTEM_Initialize 00A2  
                         __accesstop 0060              __end_of__initialization 00B8  
                 ?_SYSTEM_Initialize 0001                        ___rparam_used 000001  
                     __pcstackCOMRAM 0001                  ??_SYSTEM_Initialize 0001  
                          ?_TMR0_ISR 0001            __end_of_SYSTEM_Initialize 00B4  
                    __CFG_PLLCFG$OFF 000000                           __pnvCOMRAM 0007  
                 __CFG_CCP2MX$PORTC1 000000                           ??_TMR0_ISR 0001  
                 __CFG_CCP3MX$PORTB5 000000                              _OSCCON2 000FD2  
                            _OSCTUNE 000F9B                      __CFG_PWRTEN$OFF 000000  
                            __Hparam 0000                              __Lparam 0000  
                            __pcinit 00B4                              __ramtop 0600  
                            __ptext0 001C                              __ptext1 00A2  
                            __ptext2 008C                              __ptext3 0062  
                            __ptext4 00C2                              __ptext5 00DC  
                            __ptext7 00D0                _OSCILLATOR_Initialize 00C2  
           ??_PIN_MANAGER_Initialize 0001           __size_of_SYSTEM_Initialize 0012  
               end_of_initialization 00B8                            _PORTAbits 000F80  
       __end_of_INTERRUPT_Initialize 00E0                    __size_of_TMR0_ISR 000C  
             ?_OSCILLATOR_Initialize 0001                  start_initialization 00B4  
           __size_of_TMR0_Initialize 0016      __size_of_PIN_MANAGER_Initialize 002A  
                        __pbssCOMRAM 0005               _PIN_MANAGER_Initialize 0062  
                          __pintcode 0008         ??_INTERRUPT_InterruptManager 0001  
                   __CFG_PRICLKEN$ON 000000                 _INTERRUPT_Initialize 00DC  
                  ??_TMR0_Initialize 0001                             _LATAbits 000F89  
__size_of_INTERRUPT_InterruptManager 0010                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                             _TMR0_ISR 00D0  
                          _timecount 0005                          _INTCON2bits 000FF1  
              ?_INTERRUPT_Initialize 0001                             __Hrparam 0000  
                           __Lrparam 0000                   __CFG_BOREN$SBORDIS 000000  
                  __CFG_P2BMX$PORTB5 000000              ??_OSCILLATOR_Initialize 0001  
                      __size_of_main 0046                             int$flags 0008  
 __end_of_INTERRUPT_InterruptManager 0018           _INTERRUPT_InterruptManager 0008  
                         _INTCONbits 000FF2               ??_INTERRUPT_Initialize 0001  
                           intlevel2 0000              ?_PIN_MANAGER_Initialize 0001  
                    _TMR0_Initialize 008C                    __CFG_T3CMX$PORTC0 000000  
     __end_of_PIN_MANAGER_Initialize 008C                    __CFG_FOSC$INTIO67 000000  
