

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 14 14:12:19 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           ; Version 2.05
    35                           ; Generated 20/12/2018 GMT
    36                           ; 
    37                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F23K22 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	nvCOMRAM
    70  0000'                    __pnvCOMRAM:
    71                           	opt callstack 0
    72  0000'                    _EUSART1_RxDefaultInterruptHandler:
    73                           	opt callstack 0
    74  0000'                    	ds	2
    75  0002'                    _EUSART1_TxDefaultInterruptHandler:
    76                           	opt callstack 0
    77  0002'                    	ds	2
    78  0000                     _ANSELA	set	3896
    79  0000                     _ANSELB	set	3897
    80  0000                     _ANSELC	set	3898
    81  0000                     _INTCON2bits	set	4081
    82  0000                     _WPUB	set	3937
    83  0000                     _TRISC	set	3988
    84  0000                     _TRISB	set	3987
    85  0000                     _TRISA	set	3986
    86  0000                     _LATC	set	3979
    87  0000                     _LATB	set	3978
    88  0000                     _LATA	set	3977
    89  0000                     _OSCTUNE	set	3995
    90  0000                     _OSCCON2	set	4050
    91  0000                     _OSCCON	set	4051
    92  0000                     _PIR1bits	set	3998
    93  0000                     _INTCONbits	set	4082
    94  0000                     _RCONbits	set	4048
    95  0000                     _RCREG1	set	4014
    96  0000                     _RCSTA1bits	set	4011
    97  0000                     _TXREG1	set	4013
    98  0000                     _SPBRGH1	set	4016
    99  0000                     _SPBRG1	set	4015
   100  0000                     _TXSTA1	set	4012
   101  0000                     _RCSTA1	set	4011
   102  0000                     _BAUDCON1	set	4024
   103  0000                     _PIE1bits	set	3997
   104                           
   105                           ; #config settings
   106  0000                     
   107                           	psect	cinit
   108  0000'                    __pcinit:
   109                           	opt callstack 0
   110  0000'                    start_initialization:
   111                           	opt callstack 0
   112  0000'                    __initialization:
   113                           	opt callstack 0
   114                           
   115                           ; Clear objects allocated to COMRAM (56 bytes)
   116  0000' EE00' F000'        	lfsr	0,__pbssCOMRAM
   117  0004' 0E38               	movlw	56
   118  0006'                    clear_0:
   119  0006' 6AEE               	clrf	postinc0,c
   120  0008' 06E8               	decf	wreg,f,c
   121  000A' E1FD               	bnz	clear_0
   122  000C'                    end_of_initialization:
   123                           	opt callstack 0
   124  000C'                    __end_of__initialization:
   125                           	opt callstack 0
   126  000C' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   127  000E' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   128  0010' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
   129  0012' 6EF8               	movwf	tblptru,c
   130  0014' 0100               	movlb	0
   131  0016' EF00' F000'        	goto	_main	;jump to C main() function
   132                           
   133                           	psect	bssCOMRAM
   134  0000'                    __pbssCOMRAM:
   135                           	opt callstack 0
   136  0000'                    _RX_CQ:
   137                           	opt callstack 0
   138  0000'                    	ds	16
   139  0010'                    _TX_CQ:
   140                           	opt callstack 0
   141  0010'                    	ds	16
   142  0020'                    _eusart1RxBuffer:
   143                           	opt callstack 0
   144  0020'                    	ds	8
   145  0028'                    _eusart1TxBuffer:
   146                           	opt callstack 0
   147  0028'                    	ds	8
   148  0030'                    _RX_Tail:
   149                           	opt callstack 0
   150  0030'                    	ds	1
   151  0031'                    _RX_Head:
   152                           	opt callstack 0
   153  0031'                    	ds	1
   154  0032'                    _TX_Tail:
   155                           	opt callstack 0
   156  0032'                    	ds	1
   157  0033'                    _TX_Head:
   158                           	opt callstack 0
   159  0033'                    	ds	1
   160  0034'                    _eusart1RxTail:
   161                           	opt callstack 0
   162  0034'                    	ds	1
   163  0035'                    _eusart1RxHead:
   164                           	opt callstack 0
   165  0035'                    	ds	1
   166  0036'                    _eusart1TxTail:
   167                           	opt callstack 0
   168  0036'                    	ds	1
   169  0037'                    _eusart1TxHead:
   170                           	opt callstack 0
   171  0037'                    	ds	1
   172                           
   173                           	psect	cstackCOMRAM
   174  0000'                    __pcstackCOMRAM:
   175                           	opt callstack 0
   176  0000'                    RXenQ@data:
   177                           	opt callstack 0
   178                           
   179                           ; 1 bytes @ 0x0
   180  0000'                    	ds	1
   181  0001'                    EUSART1_Receive_ISR@c:
   182                           	opt callstack 0
   183                           
   184                           ; 1 bytes @ 0x1
   185  0001'                    	ds	1
   186  0002'                    ??_INTERRUPT_InterruptManager:
   187                           
   188                           ; 1 bytes @ 0x2
   189  0002'                    	ds	2
   190  0004'                    TXdeQ@data:
   191                           	opt callstack 0
   192  0004'                    TXenQ@data:
   193                           	opt callstack 0
   194  0004'                    RXdeQ@data:
   195                           	opt callstack 0
   196  0004'                    EUSART1_SetTxInterruptHandler@interruptHandler:
   197                           	opt callstack 0
   198  0004'                    EUSART1_SetRxInterruptHandler@interruptHandler:
   199                           	opt callstack 0
   200                           
   201                           ; 2 bytes @ 0x4
   202  0004'                    	ds	1
   203  0005'                    EUSART1_Write@txData:
   204                           	opt callstack 0
   205                           
   206                           ; 1 bytes @ 0x5
   207  0005'                    	ds	1
   208  0006'                    main@data:
   209                           	opt callstack 0
   210                           
   211                           ; 1 bytes @ 0x6
   212  0006'                    	ds	1
   213                           
   214 ;;
   215 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   216 ;;
   217 ;; *************** function _main *****************
   218 ;; Defined at:
   219 ;;		line 50 in file "main.c"
   220 ;; Parameters:    Size  Location     Type
   221 ;;		None
   222 ;; Auto vars:     Size  Location     Type
   223 ;;  data            1    6[COMRAM] unsigned char 
   224 ;; Return value:  Size  Location     Type
   225 ;;                  1    wreg      void 
   226 ;; Registers used:
   227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   228 ;; Tracked objects:
   229 ;;		On entry : 0/0
   230 ;;		On exit  : 0/0
   231 ;;		Unchanged: 0/0
   232 ;; Data sizes:     COMRAM   BANK0   BANK1
   233 ;;      Params:         0       0       0
   234 ;;      Locals:         1       0       0
   235 ;;      Temps:          0       0       0
   236 ;;      Totals:         1       0       0
   237 ;;Total ram usage:        1 bytes
   238 ;; Hardware stack levels required when called:    6
   239 ;; This function calls:
   240 ;;		_EUSART1_Read
   241 ;;		_EUSART1_Write
   242 ;;		_EUSART1_Write_Task
   243 ;;		_RXisEmpty
   244 ;;		_SYSTEM_Initialize
   245 ;;		_TXisFull
   246 ;; This function is called by:
   247 ;;		Startup code after reset
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251                           	psect	text0
   252  0000'                    __ptext0:
   253                           	opt callstack 0
   254  0000'                    _main:
   255                           	opt callstack 25
   256                           
   257                           ;main.c: 53: SYSTEM_Initialize();
   258                           
   259                           ;incstack = 0
   260  0000' EC00' F000'        	call	_SYSTEM_Initialize	;wreg free
   261                           
   262                           ; BSR set to: 15
   263                           ;main.c: 60: (INTCONbits.GIE = 1);
   264  0004' 8EF2               	bsf	4082,7,c	;volatile
   265                           
   266                           ; BSR set to: 15
   267                           ;main.c: 66: (INTCONbits.PEIE = 1);
   268  0006' 8CF2               	bsf	4082,6,c	;volatile
   269  0008'                    l204:
   270                           
   271                           ;main.c: 72: {;main.c: 73: if(!RXisEmpty()&&!TXisFull())
   272  0008' EC00' F000'        	call	_RXisEmpty	;wreg free
   273  000C' 0900               	iorlw	0
   274  000E' A4D8               	btfss	status,2,c
   275  0010' D00B               	goto	l205
   276  0012' EC00' F000'        	call	_TXisFull	;wreg free
   277  0016' 0900               	iorlw	0
   278  0018' A4D8               	btfss	status,2,c
   279  001A' D006               	goto	l205
   280                           
   281                           ;main.c: 74: {;main.c: 75: data=EUSART1_Read();
   282  001C' EC00' F000'        	call	_EUSART1_Read	;wreg free
   283  0020' 6E06'              	movwf	main@data,c
   284                           
   285                           ;main.c: 76: EUSART1_Write(data);
   286  0022' 5006'              	movf	main@data,w,c
   287  0024' EC00' F000'        	call	_EUSART1_Write
   288  0028'                    l205:
   289                           
   290                           ;main.c: 77: };main.c: 78: EUSART1_Write_Task();
   291  0028' EC00' F000'        	call	_EUSART1_Write_Task	;wreg free
   292  002C' D7ED               	goto	l204
   293  002E'                    __end_of_main:
   294                           	opt callstack 0
   295                           
   296 ;; *************** function _TXisFull *****************
   297 ;; Defined at:
   298 ;;		line 151 in file "mcc_generated_files/eusart1.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      unsigned char 
   305 ;; Registers used:
   306 ;;		wreg, status,2, status,0
   307 ;; Tracked objects:
   308 ;;		On entry : 0/F
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMRAM   BANK0   BANK1
   312 ;;      Params:         0       0       0
   313 ;;      Locals:         0       0       0
   314 ;;      Temps:          0       0       0
   315 ;;      Totals:         0       0       0
   316 ;;Total ram usage:        0 bytes
   317 ;; Hardware stack levels used:    1
   318 ;; Hardware stack levels required when called:    3
   319 ;; This function calls:
   320 ;;		Nothing
   321 ;; This function is called by:
   322 ;;		_main
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           	psect	text1
   327  0000'                    __ptext1:
   328                           	opt callstack 0
   329  0000'                    _TXisFull:
   330                           	opt callstack 27
   331                           
   332                           ;eusart1.c: 154: return ((TX_Head+1)&0x0F) == TX_Tail;
   333                           
   334                           ;incstack = 0
   335  0000' 2833'              	incf	_TX_Head,w,c
   336  0002' 0B0F               	andlw	15
   337  0004' 1832'              	xorwf	_TX_Tail,w,c
   338  0006' A4D8               	btfss	status,2,c
   339  0008' D002               	goto	u50
   340  000A' 0E01               	movlw	1
   341  000C' 0012               	return	
   342  000E'                    u50:
   343  000E' 0E00               	movlw	0
   344  0010' 0012               	return		;funcret
   345  0012'                    __end_of_TXisFull:
   346                           	opt callstack 0
   347                           
   348 ;; *************** function _SYSTEM_Initialize *****************
   349 ;; Defined at:
   350 ;;		line 50 in file "mcc_generated_files/mcc.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, status,2, status,0, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 3F/F
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMRAM   BANK0   BANK1
   364 ;;      Params:         0       0       0
   365 ;;      Locals:         0       0       0
   366 ;;      Temps:          0       0       0
   367 ;;      Totals:         0       0       0
   368 ;;Total ram usage:        0 bytes
   369 ;; Hardware stack levels used:    1
   370 ;; Hardware stack levels required when called:    5
   371 ;; This function calls:
   372 ;;		_EUSART1_Initialize
   373 ;;		_INTERRUPT_Initialize
   374 ;;		_OSCILLATOR_Initialize
   375 ;;		_PIN_MANAGER_Initialize
   376 ;; This function is called by:
   377 ;;		_main
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           	psect	text2
   382  0000'                    __ptext2:
   383                           	opt callstack 0
   384  0000'                    _SYSTEM_Initialize:
   385                           	opt callstack 25
   386                           
   387                           ;mcc.c: 53: INTERRUPT_Initialize();
   388                           
   389                           ;incstack = 0
   390  0000' EC00' F000'        	call	_INTERRUPT_Initialize	;wreg free
   391                           
   392                           ;mcc.c: 54: PIN_MANAGER_Initialize();
   393  0004' EC00' F000'        	call	_PIN_MANAGER_Initialize	;wreg free
   394                           
   395                           ; BSR set to: 15
   396                           ;mcc.c: 55: OSCILLATOR_Initialize();
   397  0008' EC00' F000'        	call	_OSCILLATOR_Initialize	;wreg free
   398                           
   399                           ; BSR set to: 15
   400                           ;mcc.c: 56: EUSART1_Initialize();
   401  000C' EC00' F000'        	call	_EUSART1_Initialize	;wreg free
   402                           
   403                           ; BSR set to: 15
   404  0010' 0012               	return		;funcret
   405  0012'                    __end_of_SYSTEM_Initialize:
   406                           	opt callstack 0
   407                           
   408 ;; *************** function _PIN_MANAGER_Initialize *****************
   409 ;; Defined at:
   410 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;		None
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, status,2
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 3F/F
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1
   424 ;;      Params:         0       0       0
   425 ;;      Locals:         0       0       0
   426 ;;      Temps:          0       0       0
   427 ;;      Totals:         0       0       0
   428 ;;Total ram usage:        0 bytes
   429 ;; Hardware stack levels used:    1
   430 ;; Hardware stack levels required when called:    3
   431 ;; This function calls:
   432 ;;		Nothing
   433 ;; This function is called by:
   434 ;;		_SYSTEM_Initialize
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	text3
   439  0000'                    __ptext3:
   440                           	opt callstack 0
   441  0000'                    _PIN_MANAGER_Initialize:
   442                           	opt callstack 26
   443                           
   444                           ;pin_manager.c: 60: LATA = 0x00;
   445                           
   446                           ; BSR set to: 15
   447                           ;incstack = 0
   448  0000' 0E00               	movlw	0
   449  0002' 6E89               	movwf	3977,c	;volatile
   450                           
   451                           ;pin_manager.c: 61: LATB = 0x00;
   452  0004' 0E00               	movlw	0
   453  0006' 6E8A               	movwf	3978,c	;volatile
   454                           
   455                           ;pin_manager.c: 62: LATC = 0x00;
   456  0008' 0E00               	movlw	0
   457  000A' 6E8B               	movwf	3979,c	;volatile
   458                           
   459                           ;pin_manager.c: 67: TRISA = 0xFF;
   460  000C' 6892               	setf	3986,c	;volatile
   461                           
   462                           ;pin_manager.c: 68: TRISB = 0xFF;
   463  000E' 6893               	setf	3987,c	;volatile
   464                           
   465                           ;pin_manager.c: 69: TRISC = 0xBF;
   466  0010' 0EBF               	movlw	191
   467  0012' 6E94               	movwf	3988,c	;volatile
   468                           
   469                           ;pin_manager.c: 74: ANSELC = 0x3C;
   470  0014' 0E3C               	movlw	60
   471  0016' 010F               	movlb	15	; () banked
   472  0018' 6F3A               	movwf	58,b	;volatile
   473                           
   474                           ;pin_manager.c: 75: ANSELB = 0x3F;
   475  001A' 0E3F               	movlw	63
   476  001C' 6F39               	movwf	57,b	;volatile
   477                           
   478                           ;pin_manager.c: 76: ANSELA = 0x2F;
   479  001E' 0E2F               	movlw	47
   480  0020' 6F38               	movwf	56,b	;volatile
   481                           
   482                           ;pin_manager.c: 81: WPUB = 0x00;
   483  0022' 0E00               	movlw	0
   484  0024' 6E61               	movwf	3937,c	;volatile
   485                           
   486                           ; BSR set to: 15
   487                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 1;
   488  0026' 8EF1               	bsf	4081,7,c	;volatile
   489                           
   490                           ; BSR set to: 15
   491  0028' 0012               	return		;funcret
   492  002A'                    __end_of_PIN_MANAGER_Initialize:
   493                           	opt callstack 0
   494                           
   495 ;; *************** function _OSCILLATOR_Initialize *****************
   496 ;; Defined at:
   497 ;;		line 59 in file "mcc_generated_files/mcc.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;		None
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, status,2
   506 ;; Tracked objects:
   507 ;;		On entry : 3F/F
   508 ;;		On exit  : 3F/F
   509 ;;		Unchanged: 3E/0
   510 ;; Data sizes:     COMRAM   BANK0   BANK1
   511 ;;      Params:         0       0       0
   512 ;;      Locals:         0       0       0
   513 ;;      Temps:          0       0       0
   514 ;;      Totals:         0       0       0
   515 ;;Total ram usage:        0 bytes
   516 ;; Hardware stack levels used:    1
   517 ;; Hardware stack levels required when called:    3
   518 ;; This function calls:
   519 ;;		Nothing
   520 ;; This function is called by:
   521 ;;		_SYSTEM_Initialize
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           	psect	text4
   526  0000'                    __ptext4:
   527                           	opt callstack 0
   528  0000'                    _OSCILLATOR_Initialize:
   529                           	opt callstack 26
   530                           
   531                           ; BSR set to: 15
   532                           ;mcc.c: 62: OSCCON = 0x30;
   533                           
   534                           ; BSR set to: 15
   535                           ;incstack = 0
   536  0000' 0E30               	movlw	48
   537  0002' 6ED3               	movwf	4051,c	;volatile
   538                           
   539                           ;mcc.c: 64: OSCCON2 = 0x04;
   540  0004' 0E04               	movlw	4
   541  0006' 6ED2               	movwf	4050,c	;volatile
   542                           
   543                           ;mcc.c: 66: OSCTUNE = 0x00;
   544  0008' 0E00               	movlw	0
   545  000A' 6E9B               	movwf	3995,c	;volatile
   546                           
   547                           ; BSR set to: 15
   548  000C' 0012               	return		;funcret
   549  000E'                    __end_of_OSCILLATOR_Initialize:
   550                           	opt callstack 0
   551                           
   552 ;; *************** function _INTERRUPT_Initialize *****************
   553 ;; Defined at:
   554 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		None
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1
   568 ;;      Params:         0       0       0
   569 ;;      Locals:         0       0       0
   570 ;;      Temps:          0       0       0
   571 ;;      Totals:         0       0       0
   572 ;;Total ram usage:        0 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; Hardware stack levels required when called:    3
   575 ;; This function calls:
   576 ;;		Nothing
   577 ;; This function is called by:
   578 ;;		_SYSTEM_Initialize
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text5
   583  0000'                    __ptext5:
   584                           	opt callstack 0
   585  0000'                    _INTERRUPT_Initialize:
   586                           	opt callstack 26
   587                           
   588                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
   589                           
   590                           ; BSR set to: 15
   591                           ;incstack = 0
   592  0000' 9ED0               	bcf	4048,7,c	;volatile
   593  0002' 0012               	return		;funcret
   594  0004'                    __end_of_INTERRUPT_Initialize:
   595                           	opt callstack 0
   596                           
   597 ;; *************** function _EUSART1_Initialize *****************
   598 ;; Defined at:
   599 ;;		line 90 in file "mcc_generated_files/eusart1.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, status,2, status,0, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : 3F/F
   610 ;;		On exit  : 3F/F
   611 ;;		Unchanged: 3E/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1
   613 ;;      Params:         0       0       0
   614 ;;      Locals:         0       0       0
   615 ;;      Temps:          0       0       0
   616 ;;      Totals:         0       0       0
   617 ;;Total ram usage:        0 bytes
   618 ;; Hardware stack levels used:    1
   619 ;; Hardware stack levels required when called:    4
   620 ;; This function calls:
   621 ;;		_EUSART1_SetRxInterruptHandler
   622 ;;		_EUSART1_SetTxInterruptHandler
   623 ;; This function is called by:
   624 ;;		_SYSTEM_Initialize
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           	psect	text6
   629  0000'                    __ptext6:
   630                           	opt callstack 0
   631  0000'                    _EUSART1_Initialize:
   632                           	opt callstack 25
   633                           
   634                           ; BSR set to: 15
   635                           ;eusart1.c: 93: PIE1bits.RC1IE = 0;
   636                           
   637                           ;incstack = 0
   638  0000' 9A9D               	bcf	3997,5,c	;volatile
   639                           
   640                           ; BSR set to: 15
   641                           ;eusart1.c: 94: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
   642  0002' 0E00'              	movlw	low _EUSART1_Receive_ISR
   643  0004' 6E04'              	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
   644  0006' 0E00'              	movlw	high _EUSART1_Receive_ISR
   645  0008' 6E05'              	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
   646  000A' EC00' F000'        	call	_EUSART1_SetRxInterruptHandler	;wreg free
   647                           
   648                           ; BSR set to: 15
   649                           ;eusart1.c: 95: PIE1bits.TX1IE = 0;
   650  000E' 989D               	bcf	3997,4,c	;volatile
   651                           
   652                           ;eusart1.c: 96: EUSART1_SetTxInterruptHandler(EUSART1_Transmit_ISR);
   653  0010' 0E00'              	movlw	low _EUSART1_Transmit_ISR
   654  0012' 6E04'              	movwf	EUSART1_SetTxInterruptHandler@interruptHandler,c
   655  0014' 0E00'              	movlw	high _EUSART1_Transmit_ISR
   656  0016' 6E05'              	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1,c
   657  0018' EC00' F000'        	call	_EUSART1_SetTxInterruptHandler	;wreg free
   658                           
   659                           ; BSR set to: 15
   660                           ;eusart1.c: 100: BAUDCON1 = 0x08;
   661  001C' 0E08               	movlw	8
   662  001E' 6EB8               	movwf	4024,c	;volatile
   663                           
   664                           ; BSR set to: 15
   665                           ;eusart1.c: 103: RCSTA1 = 0x90;
   666  0020' 0E90               	movlw	144
   667  0022' 6EAB               	movwf	4011,c	;volatile
   668                           
   669                           ; BSR set to: 15
   670                           ;eusart1.c: 106: TXSTA1 = 0x24;
   671  0024' 0E24               	movlw	36
   672  0026' 6EAC               	movwf	4012,c	;volatile
   673                           
   674                           ; BSR set to: 15
   675                           ;eusart1.c: 109: SPBRG1 = 0x33;
   676  0028' 0E33               	movlw	51
   677  002A' 6EAF               	movwf	4015,c	;volatile
   678                           
   679                           ; BSR set to: 15
   680                           ;eusart1.c: 112: SPBRGH1 = 0x00;
   681  002C' 0E00               	movlw	0
   682  002E' 6EB0               	movwf	4016,c	;volatile
   683                           
   684                           ; BSR set to: 15
   685                           ;eusart1.c: 115: PIE1bits.RC1IE = 1;
   686  0030' 8A9D               	bsf	3997,5,c	;volatile
   687                           
   688                           ; BSR set to: 15
   689  0032' 0012               	return		;funcret
   690  0034'                    __end_of_EUSART1_Initialize:
   691                           	opt callstack 0
   692                           
   693 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
   694 ;; Defined at:
   695 ;;		line 199 in file "mcc_generated_files/eusart1.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
   698 ;;		 -> EUSART1_Transmit_ISR(1), 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0
   705 ;; Tracked objects:
   706 ;;		On entry : 3F/F
   707 ;;		On exit  : 3F/F
   708 ;;		Unchanged: 3E/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1
   710 ;;      Params:         2       0       0
   711 ;;      Locals:         0       0       0
   712 ;;      Temps:          0       0       0
   713 ;;      Totals:         2       0       0
   714 ;;Total ram usage:        2 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:    3
   717 ;; This function calls:
   718 ;;		Nothing
   719 ;; This function is called by:
   720 ;;		_EUSART1_Initialize
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	text7
   725  0000'                    __ptext7:
   726                           	opt callstack 0
   727  0000'                    _EUSART1_SetTxInterruptHandler:
   728                           	opt callstack 25
   729                           
   730                           ; BSR set to: 15
   731                           ;eusart1.c: 200: EUSART1_TxDefaultInterruptHandler = interruptHandler;
   732                           
   733                           ; BSR set to: 15
   734                           ;incstack = 0
   735  0000' C004' F002'        	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
   736  0004' C005' F003'        	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
   737                           
   738                           ; BSR set to: 15
   739  0008' 0012               	return		;funcret
   740  000A'                    __end_of_EUSART1_SetTxInterruptHandler:
   741                           	opt callstack 0
   742                           
   743 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
   744 ;; Defined at:
   745 ;;		line 203 in file "mcc_generated_files/eusart1.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
   748 ;;		 -> EUSART1_Receive_ISR(1), 
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg, status,2, status,0
   755 ;; Tracked objects:
   756 ;;		On entry : 3F/F
   757 ;;		On exit  : 3F/F
   758 ;;		Unchanged: 3E/0
   759 ;; Data sizes:     COMRAM   BANK0   BANK1
   760 ;;      Params:         2       0       0
   761 ;;      Locals:         0       0       0
   762 ;;      Temps:          0       0       0
   763 ;;      Totals:         2       0       0
   764 ;;Total ram usage:        2 bytes
   765 ;; Hardware stack levels used:    1
   766 ;; Hardware stack levels required when called:    3
   767 ;; This function calls:
   768 ;;		Nothing
   769 ;; This function is called by:
   770 ;;		_EUSART1_Initialize
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           	psect	text8
   775  0000'                    __ptext8:
   776                           	opt callstack 0
   777  0000'                    _EUSART1_SetRxInterruptHandler:
   778                           	opt callstack 25
   779                           
   780                           ; BSR set to: 15
   781                           ;eusart1.c: 204: EUSART1_RxDefaultInterruptHandler = interruptHandler;
   782                           
   783                           ; BSR set to: 15
   784                           ;incstack = 0
   785  0000' C004' F000'        	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
   786  0004' C005' F001'        	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
   787                           
   788                           ; BSR set to: 15
   789  0008' 0012               	return		;funcret
   790  000A'                    __end_of_EUSART1_SetRxInterruptHandler:
   791                           	opt callstack 0
   792                           
   793 ;; *************** function _RXisEmpty *****************
   794 ;; Defined at:
   795 ;;		line 181 in file "mcc_generated_files/eusart1.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      unsigned char 
   802 ;; Registers used:
   803 ;;		wreg, status,2, status,0
   804 ;; Tracked objects:
   805 ;;		On entry : 0/F
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMRAM   BANK0   BANK1
   809 ;;      Params:         0       0       0
   810 ;;      Locals:         0       0       0
   811 ;;      Temps:          0       0       0
   812 ;;      Totals:         0       0       0
   813 ;;Total ram usage:        0 bytes
   814 ;; Hardware stack levels used:    1
   815 ;; Hardware stack levels required when called:    3
   816 ;; This function calls:
   817 ;;		Nothing
   818 ;; This function is called by:
   819 ;;		_main
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text9
   824  0000'                    __ptext9:
   825                           	opt callstack 0
   826  0000'                    _RXisEmpty:
   827                           	opt callstack 27
   828                           
   829                           ;eusart1.c: 184: return RX_Head == RX_Tail;
   830                           
   831                           ; BSR set to: 15
   832                           ;incstack = 0
   833  0000' 5030'              	movf	_RX_Tail,w,c
   834  0002' 1831'              	xorwf	_RX_Head,w,c
   835  0004' A4D8               	btfss	status,2,c
   836  0006' D002               	goto	u70
   837  0008' 0E01               	movlw	1
   838  000A' 0012               	return	
   839  000C'                    u70:
   840  000C' 0E00               	movlw	0
   841  000E' 0012               	return		;funcret
   842  0010'                    __end_of_RXisEmpty:
   843                           	opt callstack 0
   844                           
   845 ;; *************** function _EUSART1_Write_Task *****************
   846 ;; Defined at:
   847 ;;		line 129 in file "mcc_generated_files/eusart1.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/F
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1
   861 ;;      Params:         0       0       0
   862 ;;      Locals:         0       0       0
   863 ;;      Temps:          0       0       0
   864 ;;      Totals:         0       0       0
   865 ;;Total ram usage:        0 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    4
   868 ;; This function calls:
   869 ;;		_TXdeQ
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text10
   876  0000'                    __ptext10:
   877                           	opt callstack 0
   878  0000'                    _EUSART1_Write_Task:
   879                           	opt callstack 26
   880                           
   881                           ;eusart1.c: 131: TXREG1=TXdeQ();
   882                           
   883                           ;incstack = 0
   884  0000' EC00' F000'        	call	_TXdeQ	;wreg free
   885  0004' 6EAD               	movwf	4013,c	;volatile
   886  0006' 0012               	return		;funcret
   887  0008'                    __end_of_EUSART1_Write_Task:
   888                           	opt callstack 0
   889                           
   890 ;; *************** function _TXdeQ *****************
   891 ;; Defined at:
   892 ;;		line 161 in file "mcc_generated_files/eusart1.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  data            1    4[COMRAM] unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      unsigned char 
   899 ;; Registers used:
   900 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   901 ;; Tracked objects:
   902 ;;		On entry : 0/F
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1
   906 ;;      Params:         0       0       0
   907 ;;      Locals:         1       0       0
   908 ;;      Temps:          0       0       0
   909 ;;      Totals:         1       0       0
   910 ;;Total ram usage:        1 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:    3
   913 ;; This function calls:
   914 ;;		Nothing
   915 ;; This function is called by:
   916 ;;		_EUSART1_Write_Task
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text11
   921  0000'                    __ptext11:
   922                           	opt callstack 0
   923  0000'                    _TXdeQ:
   924                           	opt callstack 26
   925                           
   926                           ;eusart1.c: 163: uint8_t data;;eusart1.c: 164: data = TX_CQ[TX_Tail++];
   927                           
   928                           ;incstack = 0
   929  0000' 5032'              	movf	_TX_Tail,w,c
   930  0002' 0F00'              	addlw	low _TX_CQ
   931  0004' 6ED9               	movwf	fsr2l,c
   932  0006' 6ADA               	clrf	fsr2h,c
   933  0008' 50DF               	movf	indf2,w,c
   934  000A' 6E04'              	movwf	TXdeQ@data,c
   935  000C' 2A32'              	incf	_TX_Tail,f,c
   936                           
   937                           ;eusart1.c: 165: TX_Tail &= 0x0F;
   938  000E' 0E0F               	movlw	15
   939  0010' 1632'              	andwf	_TX_Tail,f,c
   940                           
   941                           ;eusart1.c: 166: return data;
   942  0012' 5004'              	movf	TXdeQ@data,w,c
   943  0014' 0012               	return		;funcret
   944  0016'                    __end_of_TXdeQ:
   945                           	opt callstack 0
   946                           
   947 ;; *************** function _EUSART1_Write *****************
   948 ;; Defined at:
   949 ;;		line 124 in file "mcc_generated_files/eusart1.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  txData          1    wreg     unsigned char 
   952 ;; Auto vars:     Size  Location     Type
   953 ;;  txData          1    5[COMRAM] unsigned char 
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/F
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1
   963 ;;      Params:         0       0       0
   964 ;;      Locals:         1       0       0
   965 ;;      Temps:          0       0       0
   966 ;;      Totals:         1       0       0
   967 ;;Total ram usage:        1 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    4
   970 ;; This function calls:
   971 ;;		_TXenQ
   972 ;; This function is called by:
   973 ;;		_main
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text12
   978  0000'                    __ptext12:
   979                           	opt callstack 0
   980  0000'                    _EUSART1_Write:
   981                           	opt callstack 26
   982                           
   983                           ;incstack = 0
   984                           ;EUSART1_Write@txData stored from wreg
   985  0000' 6E05'              	movwf	EUSART1_Write@txData,c
   986                           
   987                           ;eusart1.c: 126: TXenQ( txData);
   988  0002' 5005'              	movf	EUSART1_Write@txData,w,c
   989  0004' EC00' F000'        	call	_TXenQ
   990  0008' 0012               	return		;funcret
   991  000A'                    __end_of_EUSART1_Write:
   992                           	opt callstack 0
   993                           
   994 ;; *************** function _TXenQ *****************
   995 ;; Defined at:
   996 ;;		line 168 in file "mcc_generated_files/eusart1.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  data            1    wreg     unsigned char 
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  data            1    4[COMRAM] unsigned char 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/F
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK1
  1010 ;;      Params:         0       0       0
  1011 ;;      Locals:         1       0       0
  1012 ;;      Temps:          0       0       0
  1013 ;;      Totals:         1       0       0
  1014 ;;Total ram usage:        1 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; Hardware stack levels required when called:    3
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_EUSART1_Write
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text13
  1025  0000'                    __ptext13:
  1026                           	opt callstack 0
  1027  0000'                    _TXenQ:
  1028                           	opt callstack 26
  1029                           
  1030                           ;incstack = 0
  1031                           ;TXenQ@data stored from wreg
  1032  0000' 6E04'              	movwf	TXenQ@data,c
  1033                           
  1034                           ;eusart1.c: 170: TX_CQ[TX_Head++] = data;
  1035  0002' 5033'              	movf	_TX_Head,w,c
  1036  0004' 0F00'              	addlw	low _TX_CQ
  1037  0006' 6ED9               	movwf	fsr2l,c
  1038  0008' 6ADA               	clrf	fsr2h,c
  1039  000A' C004' FFDF         	movff	TXenQ@data,indf2
  1040  000E' 2A33'              	incf	_TX_Head,f,c
  1041                           
  1042                           ;eusart1.c: 171: TX_Head &= 0x0F;
  1043  0010' 0E0F               	movlw	15
  1044  0012' 1633'              	andwf	_TX_Head,f,c
  1045  0014' 0012               	return		;funcret
  1046  0016'                    __end_of_TXenQ:
  1047                           	opt callstack 0
  1048                           
  1049 ;; *************** function _EUSART1_Read *****************
  1050 ;; Defined at:
  1051 ;;		line 119 in file "mcc_generated_files/eusart1.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;		None
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;		None
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      unsigned char 
  1058 ;; Registers used:
  1059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/F
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1
  1065 ;;      Params:         0       0       0
  1066 ;;      Locals:         0       0       0
  1067 ;;      Temps:          0       0       0
  1068 ;;      Totals:         0       0       0
  1069 ;;Total ram usage:        0 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:    4
  1072 ;; This function calls:
  1073 ;;		_RXdeQ
  1074 ;; This function is called by:
  1075 ;;		_main
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text14
  1080  0000'                    __ptext14:
  1081                           	opt callstack 0
  1082  0000'                    _EUSART1_Read:
  1083                           	opt callstack 26
  1084                           
  1085                           ;eusart1.c: 121: return RXdeQ();
  1086                           
  1087                           ;incstack = 0
  1088  0000' EC00' F000'        	call	_RXdeQ	;wreg free
  1089  0004' 0012               	return		;funcret
  1090  0006'                    __end_of_EUSART1_Read:
  1091                           	opt callstack 0
  1092                           
  1093 ;; *************** function _RXdeQ *****************
  1094 ;; Defined at:
  1095 ;;		line 186 in file "mcc_generated_files/eusart1.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  data            1    4[COMRAM] unsigned char 
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      unsigned char 
  1102 ;; Registers used:
  1103 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/F
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1
  1109 ;;      Params:         0       0       0
  1110 ;;      Locals:         1       0       0
  1111 ;;      Temps:          0       0       0
  1112 ;;      Totals:         1       0       0
  1113 ;;Total ram usage:        1 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    3
  1116 ;; This function calls:
  1117 ;;		Nothing
  1118 ;; This function is called by:
  1119 ;;		_EUSART1_Read
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text15
  1124  0000'                    __ptext15:
  1125                           	opt callstack 0
  1126  0000'                    _RXdeQ:
  1127                           	opt callstack 26
  1128                           
  1129                           ;eusart1.c: 188: uint8_t data;;eusart1.c: 189: data = RX_CQ[RX_Tail++];
  1130                           
  1131                           ;incstack = 0
  1132  0000' 5030'              	movf	_RX_Tail,w,c
  1133  0002' 0F00'              	addlw	low _RX_CQ
  1134  0004' 6ED9               	movwf	fsr2l,c
  1135  0006' 6ADA               	clrf	fsr2h,c
  1136  0008' 50DF               	movf	indf2,w,c
  1137  000A' 6E04'              	movwf	RXdeQ@data,c
  1138  000C' 2A30'              	incf	_RX_Tail,f,c
  1139                           
  1140                           ;eusart1.c: 190: RX_Tail &= 0x0F;
  1141  000E' 0E0F               	movlw	15
  1142  0010' 1630'              	andwf	_RX_Tail,f,c
  1143                           
  1144                           ;eusart1.c: 191: return data;
  1145  0012' 5004'              	movf	RXdeQ@data,w,c
  1146  0014' 0012               	return		;funcret
  1147  0016'                    __end_of_RXdeQ:
  1148                           	opt callstack 0
  1149                           
  1150 ;; *************** function _INTERRUPT_InterruptManager *****************
  1151 ;; Defined at:
  1152 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1
  1166 ;;      Params:         0       0       0
  1167 ;;      Locals:         0       0       0
  1168 ;;      Temps:          2       0       0
  1169 ;;      Totals:         2       0       0
  1170 ;;Total ram usage:        2 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    2
  1173 ;; This function calls:
  1174 ;;		_EUSART1_Receive_ISR
  1175 ;; This function is called by:
  1176 ;;		Interrupt level 2
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	intcode
  1181  0000'                    __pintcode:
  1182                           	opt callstack 0
  1183  0000'                    _INTERRUPT_InterruptManager:
  1184                           	opt callstack 25
  1185                           
  1186                           ;incstack = 0
  1187  0000' 8200'              	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1188  0002' CFD9 F002'         	movff	fsr2l,??_INTERRUPT_InterruptManager
  1189  0006' CFDA F003'         	movff	fsr2h,??_INTERRUPT_InterruptManager+1
  1190                           
  1191                           ;interrupt_manager.c: 61: if(INTCONbits.PEIE == 1)
  1192  000A' ACF2               	btfss	4082,6,c	;volatile
  1193  000C' D009               	goto	i2l131
  1194                           
  1195                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: if(PIE1bits.TX1IE == 1 && PIR1bits.
      +                          TX1IF == 1)
  1196  000E' A89D               	btfss	3997,4,c	;volatile
  1197  0010' D002               	goto	i2l130
  1198  0012' B89E               	btfsc	3998,4,c	;volatile
  1199  0014' D005               	goto	i2l131
  1200  0016'                    i2l130:
  1201                           
  1202                           ;interrupt_manager.c: 67: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  1203  0016' BA9D               	btfsc	3997,5,c	;volatile
  1204  0018' AA9E               	btfss	3998,5,c	;volatile
  1205  001A' D002               	goto	i2l131
  1206                           
  1207                           ;interrupt_manager.c: 68: {;interrupt_manager.c: 69: EUSART1_Receive_ISR();
  1208  001C' EC00' F000'        	call	_EUSART1_Receive_ISR	;wreg free
  1209  0020'                    i2l131:
  1210                           
  1211                           ;interrupt_manager.c: 74: };interrupt_manager.c: 75: }
  1212  0020' C003' FFDA         	movff	??_INTERRUPT_InterruptManager+1,fsr2h
  1213  0024' C002' FFD9         	movff	??_INTERRUPT_InterruptManager,fsr2l
  1214  0028' 9200'              	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1215  002A' 0011               	retfie		f
  1216  002C'                    __end_of_INTERRUPT_InterruptManager:
  1217                           	opt callstack 0
  1218                           
  1219 ;; *************** function _EUSART1_Receive_ISR *****************
  1220 ;; Defined at:
  1221 ;;		line 134 in file "mcc_generated_files/eusart1.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;  c               1    1[COMRAM] unsigned char 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1
  1235 ;;      Params:         0       0       0
  1236 ;;      Locals:         1       0       0
  1237 ;;      Temps:          0       0       0
  1238 ;;      Totals:         1       0       0
  1239 ;;Total ram usage:        1 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; Hardware stack levels required when called:    1
  1242 ;; This function calls:
  1243 ;;		_RXenQ
  1244 ;;		_RXisFull
  1245 ;; This function is called by:
  1246 ;;		_EUSART1_Initialize
  1247 ;;		_INTERRUPT_InterruptManager
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text17
  1252  0000'                    __ptext17:
  1253                           	opt callstack 0
  1254  0000'                    _EUSART1_Receive_ISR:
  1255                           	opt callstack 25
  1256                           
  1257                           ;eusart1.c: 136: if(1==RCSTA1bits.OERR)
  1258                           
  1259                           ;incstack = 0
  1260  0000' A2AB               	btfss	4011,1,c	;volatile
  1261  0002' D002               	goto	i2l79
  1262                           
  1263                           ;eusart1.c: 137: {;eusart1.c: 138: RCSTA1bits.CREN = 0;
  1264  0004' 98AB               	bcf	4011,4,c	;volatile
  1265                           
  1266                           ;eusart1.c: 139: RCSTA1bits.CREN = 1;
  1267  0006' 88AB               	bsf	4011,4,c	;volatile
  1268  0008'                    i2l79:
  1269                           
  1270                           ;eusart1.c: 140: };eusart1.c: 141: uint8_t c= RCREG1;
  1271  0008' CFAE F001'         	movff	4014,EUSART1_Receive_ISR@c	;volatile
  1272                           
  1273                           ;eusart1.c: 142: if(RXisFull())
  1274  000C' EC00' F000'        	call	_RXisFull	;wreg free
  1275  0010' 0900               	iorlw	0
  1276  0012' B4D8               	btfsc	status,2,c
  1277  0014' 0012               	return	
  1278                           
  1279                           ;eusart1.c: 143: {;eusart1.c: 144: RXenQ(c);
  1280  0016' 5001'              	movf	EUSART1_Receive_ISR@c,w,c
  1281  0018' EC00' F000'        	call	_RXenQ
  1282  001C' 0012               	return		;funcret
  1283  001E'                    __end_of_EUSART1_Receive_ISR:
  1284                           	opt callstack 0
  1285                           
  1286 ;; *************** function _RXisFull *****************
  1287 ;; Defined at:
  1288 ;;		line 176 in file "mcc_generated_files/eusart1.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      unsigned char 
  1295 ;; Registers used:
  1296 ;;		wreg, status,2, status,0
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1
  1302 ;;      Params:         0       0       0
  1303 ;;      Locals:         0       0       0
  1304 ;;      Temps:          0       0       0
  1305 ;;      Totals:         0       0       0
  1306 ;;Total ram usage:        0 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; This function calls:
  1309 ;;		Nothing
  1310 ;; This function is called by:
  1311 ;;		_EUSART1_Receive_ISR
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text18
  1316  0000'                    __ptext18:
  1317                           	opt callstack 0
  1318  0000'                    _RXisFull:
  1319                           	opt callstack 25
  1320                           
  1321                           ;eusart1.c: 179: return ((RX_Head+1)&0x0F) == RX_Tail;
  1322                           
  1323                           ;incstack = 0
  1324  0000' 2831'              	incf	_RX_Head,w,c
  1325  0002' 0B0F               	andlw	15
  1326  0004' 1830'              	xorwf	_RX_Tail,w,c
  1327  0006' A4D8               	btfss	status,2,c
  1328  0008' D002               	goto	i2u1_40
  1329  000A' 0E01               	movlw	1
  1330  000C' 0012               	return	
  1331  000E'                    i2u1_40:
  1332  000E' 0E00               	movlw	0
  1333  0010' 0012               	return		;funcret
  1334  0012'                    __end_of_RXisFull:
  1335                           	opt callstack 0
  1336                           
  1337 ;; *************** function _RXenQ *****************
  1338 ;; Defined at:
  1339 ;;		line 193 in file "mcc_generated_files/eusart1.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  data            1    wreg     unsigned char 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  data            1    0[COMRAM] unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1
  1353 ;;      Params:         0       0       0
  1354 ;;      Locals:         1       0       0
  1355 ;;      Temps:          0       0       0
  1356 ;;      Totals:         1       0       0
  1357 ;;Total ram usage:        1 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_EUSART1_Receive_ISR
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text19
  1367  0000'                    __ptext19:
  1368                           	opt callstack 0
  1369  0000'                    _RXenQ:
  1370                           	opt callstack 25
  1371                           
  1372                           ;incstack = 0
  1373                           ;RXenQ@data stored from wreg
  1374  0000' 6E00'              	movwf	RXenQ@data,c
  1375                           
  1376                           ;eusart1.c: 195: RX_CQ[TX_Head++] = data;
  1377  0002' 5033'              	movf	_TX_Head,w,c
  1378  0004' 0F00'              	addlw	low _RX_CQ
  1379  0006' 6ED9               	movwf	fsr2l,c
  1380  0008' 6ADA               	clrf	fsr2h,c
  1381  000A' C000' FFDF         	movff	RXenQ@data,indf2
  1382  000E' 2A33'              	incf	_TX_Head,f,c
  1383                           
  1384                           ;eusart1.c: 196: RX_Head &= 0x0F;
  1385  0010' 0E0F               	movlw	15
  1386  0012' 1631'              	andwf	_RX_Head,f,c
  1387  0014' 0012               	return		;funcret
  1388  0016'                    __end_of_RXenQ:
  1389                           	opt callstack 0
  1390  0000                     
  1391                           	psect	text20
  1392  0000'                    __ptext20:
  1393                           	opt callstack 0
  1394                           
  1395                           	psect	rparam
  1396  0000                     
  1397                           	psect	temp
  1398  0000'                    btemp:
  1399                           	opt callstack 0
  1400  0000'                    	ds	1
  1401  0000                     int$flags	set	btemp
  1402  0000                     wtemp8	set	btemp+1
  1403  0000                     ttemp5	set	btemp+1
  1404  0000                     ttemp6	set	btemp+4
  1405  0000                     ttemp7	set	btemp+8
  1406                           tosu	equ	0xFFF
  1407                           tosh	equ	0xFFE
  1408                           tosl	equ	0xFFD
  1409                           stkptr	equ	0xFFC
  1410                           pclatu	equ	0xFFB
  1411                           pclath	equ	0xFFA
  1412                           pcl	equ	0xFF9
  1413                           tblptru	equ	0xFF8
  1414                           tblptrh	equ	0xFF7
  1415                           tblptrl	equ	0xFF6
  1416                           tablat	equ	0xFF5
  1417                           prodh	equ	0xFF4
  1418                           prodl	equ	0xFF3
  1419                           indf0	equ	0xFEF
  1420                           postinc0	equ	0xFEE
  1421                           postdec0	equ	0xFED
  1422                           preinc0	equ	0xFEC
  1423                           plusw0	equ	0xFEB
  1424                           fsr0h	equ	0xFEA
  1425                           fsr0l	equ	0xFE9
  1426                           wreg	equ	0xFE8
  1427                           indf1	equ	0xFE7
  1428                           postinc1	equ	0xFE6
  1429                           postdec1	equ	0xFE5
  1430                           preinc1	equ	0xFE4
  1431                           plusw1	equ	0xFE3
  1432                           fsr1h	equ	0xFE2
  1433                           fsr1l	equ	0xFE1
  1434                           bsr	equ	0xFE0
  1435                           indf2	equ	0xFDF
  1436                           postinc2	equ	0xFDE
  1437                           postdec2	equ	0xFDD
  1438                           preinc2	equ	0xFDC
  1439                           plusw2	equ	0xFDB
  1440                           fsr2h	equ	0xFDA
  1441                           fsr2l	equ	0xFD9
  1442                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         56
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      7      67
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_EUSART1_Write
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _EUSART1_Write_Task->_TXdeQ
    _EUSART1_Write->_TXenQ
    _EUSART1_Read->_RXdeQ

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _EUSART1_Receive_ISR->_RXenQ

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     279
                                              6 COMRAM     1     1      0
                       _EUSART1_Read
                      _EUSART1_Write
                 _EUSART1_Write_Task
                          _RXisEmpty
                  _SYSTEM_Initialize
                           _TXisFull
 ---------------------------------------------------------------------------------
 (1) _TXisFull                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     196
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     196
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RXisEmpty                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write_Task                                   0     0      0      15
                              _TXdeQ
 ---------------------------------------------------------------------------------
 (2) _TXdeQ                                                1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      30
                                              5 COMRAM     1     1      0
                              _TXenQ
 ---------------------------------------------------------------------------------
 (2) _TXenQ                                                1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0      15
                              _RXdeQ
 ---------------------------------------------------------------------------------
 (2) _RXdeQ                                                1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0      30
                                              2 COMRAM     2     2      0
                _EUSART1_Receive_ISR
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  1     1      0      30
                                              1 COMRAM     1     1      0
                              _RXenQ
                           _RXisFull
 ---------------------------------------------------------------------------------
 (6) _RXisFull                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RXenQ                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
     _RXdeQ
   _EUSART1_Write
     _TXenQ
   _EUSART1_Write_Task
     _TXdeQ
   _RXisEmpty
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _TXisFull

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     _RXenQ
     _RXisFull

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      7      43       1       71.3%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      43       6        0.0%
DATA                 0      0      43       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 14 14:12:19 2020

                                           u50 00000E                                             u70 00000C  
                                 __CFG_CP0$OFF 000000                                   __CFG_CP1$OFF 000000  
                                  __CFG_LVP$ON 000000                                            l204 000008  
                                          l205 000028                                   __CFG_CPB$OFF 000000  
                                 __CFG_CPD$OFF 000000                                            wreg 000FE8  
                                         _LATA 000F89                                           _LATB 000F8A  
                                         _LATC 000F8B                                           i2l79 000008  
                                         _WPUB 000F61                                  _EUSART1_Write 000000  
                                         _main 000000                                  ?_EUSART1_Read 000000  
                                         fsr2h 000FDA                                           indf2 000FDF  
                                         fsr2l 000FD9                                           btemp 000000  
                                __CFG_BORV$190 000000                                           start 000000* 
                                __CFG_IESO$OFF 000000                                   ___param_bank 000000  
               __size_of_OSCILLATOR_Initialize 000000                  __end_of_OSCILLATOR_Initialize 00000E  
                                        ?_main 000000                                 __CFG_DEBUG$OFF 000000  
                                        i2l130 000016                                          i2l131 000020  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _RX_CQ 000000  
                                        _TX_CQ 000010                                          _RXdeQ 000000  
                                __CFG_WRT0$OFF 000000                                          _RXenQ 000000  
                                __CFG_WRT1$OFF 000000                                          _TXdeQ 000000  
                                        _TXenQ 000000                           _EUSART1_Transmit_ISR 000000* 
                               __CFG_EBTR0$OFF 000000                                 __CFG_FCMEN$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                               __CFG_EBTRB$OFF 000000                           EUSART1_Receive_ISR@c 000001  
                           __CFG_MCLRE$EXTMCLR 000000                                 ?_EUSART1_Write 000000  
                               ??_EUSART1_Read 000005                                          ttemp5 000001  
                                        ttemp6 000004                                          ttemp7 000008  
                                        status 000FD8                                          wtemp8 000001  
                               __CFG_HFOFST$ON 000000                                 __CFG_PBADEN$ON 000000  
                              __initialization 000000                     __end_of_EUSART1_Initialize 000034  
                                 __end_of_main 00002E                               __end_of_RXisFull 000012  
                             __end_of_TXisFull 000012                    ?_INTERRUPT_InterruptManager 000000  
                                       ??_main 000006                                  __activetblptr 000002  
                                       ?_RXdeQ 000000                                         ?_RXenQ 000000  
                                       ?_TXdeQ 000000                                         ?_TXenQ 000000  
                           __size_of_RXisEmpty 000000                                         _ANSELA 000F38  
                                       _ANSELB 000F39                                         _ANSELC 000F3A  
                               __CFG_WDTEN$OFF 000000                                         _RCREG1 000FAE  
                                       _RCSTA1 000FAB                                         _OSCCON 000FD3  
                                       _SPBRG1 000FAF                                         i2u1_40 00000E  
                                       _TXREG1 000FAD                                         _TXSTA1 000FAC  
                               __CFG_XINST$OFF 000000                                 __CFG_STVREN$ON 000000  
                                       clear_0 000006                                         tblptru 000FF8  
                              ??_EUSART1_Write 000005                                _eusart1RxBuffer 000020  
                __size_of_INTERRUPT_Initialize 000000                                _eusart1TxBuffer 000028  
                            _SYSTEM_Initialize 000000                                     __accesstop 000000* 
                      __end_of__initialization 00000C                             ?_SYSTEM_Initialize 000000  
                                ___rparam_used 000001                                  __end_of_RXdeQ 000016  
                   __end_of_EUSART1_Write_Task 000008                                  __end_of_RXenQ 000016  
                                __end_of_TXdeQ 000016                                  __end_of_TXenQ 000016  
                               __pcstackCOMRAM 000000                            ??_SYSTEM_Initialize 000006  
                            __end_of_RXisEmpty 000010                           __end_of_EUSART1_Read 000006  
                                      ??_RXdeQ 000004                                        ??_RXenQ 000000  
                                      ??_TXdeQ 000004                                        ??_TXenQ 000004  
                  __end_of_EUSART1_Receive_ISR 00001E                      __end_of_SYSTEM_Initialize 000012  
                                _eusart1RxHead 000035                                  _eusart1TxHead 000037  
                                _eusart1RxTail 000034                                      ?_RXisFull 000000  
                                _eusart1TxTail 000036              _EUSART1_TxDefaultInterruptHandler 000002  
              ??_EUSART1_SetRxInterruptHandler 000006                                __CFG_PLLCFG$OFF 000000  
                                    ?_TXisFull 000000                                     __pnvCOMRAM 000000  
                           __CFG_CCP2MX$PORTC1 000000                             __CFG_CCP3MX$PORTB5 000000  
                                      _OSCCON2 000FD2                                        _OSCTUNE 000F9B  
                                      _SPBRGH1 000FB0                                     ??_RXisFull 000000  
                                      _RX_Head 000031                                     ??_TXisFull 000004  
                                      _RX_Tail 000030                                        _TX_Head 000033  
                                      _TX_Tail 000032                                __CFG_PWRTEN$OFF 000000  
                                      __Hparam 000000                                        __Lparam 000000  
                                      __pcinit 000000                                        __ramtop 000000* 
                                      __ptext0 000000                                        __ptext1 000000  
                                      __ptext2 000000                                        __ptext3 000000  
                                      __ptext4 000000                                        __ptext5 000000  
                                      __ptext6 000000                                        __ptext7 000000  
                                      __ptext8 000000                                        __ptext9 000000  
                        _OSCILLATOR_Initialize 000000                             _EUSART1_Initialize 000000  
                     ??_PIN_MANAGER_Initialize 000004                     __size_of_SYSTEM_Initialize 000000  
                         end_of_initialization 00000C                            ?_EUSART1_Initialize 000000  
                                __Lmediumconst 000000*         __end_of_EUSART1_SetRxInterruptHandler 00000A  
       __size_of_EUSART1_SetRxInterruptHandler 000000                  _EUSART1_SetRxInterruptHandler 000000  
                                    RXdeQ@data 000004                                        postinc0 000FEE  
                        __size_of_EUSART1_Read 000000                           ??_EUSART1_Initialize 000006  
                                    RXenQ@data 000000                                      TXdeQ@data 000004  
                                    TXenQ@data 000004                            EUSART1_Write@txData 000005  
                                 _EUSART1_Read 000000                   __end_of_INTERRUPT_Initialize 000004  
                       ?_OSCILLATOR_Initialize 000000                                      _RXisEmpty 000000  
                           _EUSART1_Write_Task 000000                            start_initialization 000000  
              __size_of_PIN_MANAGER_Initialize 000000  EUSART1_SetRxInterruptHandler@interruptHandler 000004  
EUSART1_SetTxInterruptHandler@interruptHandler 000004                            ?_EUSART1_Write_Task 000000  
                        __end_of_EUSART1_Write 00000A                              __size_of_RXisFull 000000  
                            __size_of_TXisFull 000000                           ??_EUSART1_Write_Task 000005  
               ?_EUSART1_SetRxInterruptHandler 000004                                     ?_RXisEmpty 000000  
                                  __pbssCOMRAM 000000              _EUSART1_RxDefaultInterruptHandler 000000  
              ??_EUSART1_SetTxInterruptHandler 000006                   __size_of_EUSART1_Receive_ISR 000000  
                       _PIN_MANAGER_Initialize 000000                                      __pintcode 000000  
                 ??_INTERRUPT_InterruptManager 000002                               __CFG_PRICLKEN$ON 000000  
                                     _BAUDCON1 000FB8                                 __size_of_RXdeQ 000000  
                               __size_of_RXenQ 000000                                 __size_of_TXdeQ 000000  
                               __size_of_TXenQ 000000                           _INTERRUPT_Initialize 000000  
                                     _PIE1bits 000F9D            __size_of_INTERRUPT_InterruptManager 000000  
                                     _PIR1bits 000F9E                                       _RCONbits 000FD0  
                             __CFG_WDTPS$32768 000000                                    ??_RXisEmpty 000004  
                                  _INTCON2bits 000FF1                          ?_INTERRUPT_Initialize 000000  
                                     _RXisFull 000000                                       _TXisFull 000000  
        __end_of_EUSART1_SetTxInterruptHandler 00000A         __size_of_EUSART1_SetTxInterruptHandler 000000  
                _EUSART1_SetTxInterruptHandler 000000                                       __Hrparam 000000* 
                                     __Lrparam 000000*                            __CFG_BOREN$SBORDIS 000000  
                            __CFG_P2BMX$PORTB5 000000                        ??_OSCILLATOR_Initialize 000004  
                  __size_of_EUSART1_Initialize 000000                                       __ptext10 000000  
                                     __ptext11 000000                                       __ptext20 000000  
                                     __ptext12 000000                                       __ptext13 000000  
                                     __ptext14 000000                                       __ptext15 000000  
                                     __ptext17 000000                                       __ptext18 000000  
                                     __ptext19 000000                                  __size_of_main 000000  
                                     int$flags 000000             __end_of_INTERRUPT_InterruptManager 00002C  
                   _INTERRUPT_InterruptManager 000000                                       main@data 000006  
                          _EUSART1_Receive_ISR 000000                                     _INTCONbits 000FF2  
                       ??_INTERRUPT_Initialize 000004                                       intlevel2 000000* 
                         ?_EUSART1_Receive_ISR 000000                        ?_PIN_MANAGER_Initialize 000000  
                                   _RCSTA1bits 000FAB                 ?_EUSART1_SetTxInterruptHandler 000004  
                  __size_of_EUSART1_Write_Task 000000                         __size_of_EUSART1_Write 000000  
                            __CFG_T3CMX$PORTC0 000000                          ??_EUSART1_Receive_ISR 000001  
               __end_of_PIN_MANAGER_Initialize 00002A                              __CFG_FOSC$INTIO67 000000  
