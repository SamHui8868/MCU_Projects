

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 14 15:51:30 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27  0000                     
    28                           ; Version 2.05
    29                           ; Generated 20/12/2018 GMT
    30                           ; 
    31                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F23K22 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    64  0000                     
    65 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    66  0000                     
    67 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    68  0000                     
    69                           	psect	nvCOMRAM
    70  00001F                     __pnvCOMRAM:
    71                           	opt callstack 0
    72  00001F                     _EUSART1_ErrorHandler:
    73                           	opt callstack 0
    74  00001F                     	ds	2
    75  000021                     _EUSART1_OverrunErrorHandler:
    76                           	opt callstack 0
    77  000021                     	ds	2
    78  000023                     _EUSART1_FramingErrorHandler:
    79                           	opt callstack 0
    80  000023                     	ds	2
    81  000025                     _EUSART1_RxDefaultInterruptHandler:
    82                           	opt callstack 0
    83  000025                     	ds	2
    84  000027                     _EUSART1_TxDefaultInterruptHandler:
    85                           	opt callstack 0
    86  000027                     	ds	2
    87  000029                     _eusart1TxBufferRemaining:
    88                           	opt callstack 0
    89  000029                     	ds	1
    90  0000                     _ANSELA	set	3896
    91  0000                     _ANSELB	set	3897
    92  0000                     _ANSELC	set	3898
    93  0000                     _INTCON2bits	set	4081
    94  0000                     _WPUB	set	3937
    95  0000                     _TRISC	set	3988
    96  0000                     _TRISB	set	3987
    97  0000                     _TRISA	set	3986
    98  0000                     _LATC	set	3979
    99  0000                     _LATB	set	3978
   100  0000                     _LATA	set	3977
   101  0000                     _OSCTUNE	set	3995
   102  0000                     _OSCCON2	set	4050
   103  0000                     _OSCCON	set	4051
   104  0000                     _PIR1bits	set	3998
   105  0000                     _RCONbits	set	4048
   106  0000                     _RCREG1	set	4014
   107  0000                     _TXREG1	set	4013
   108  0000                     _SPBRGH1	set	4016
   109  0000                     _SPBRG1	set	4015
   110  0000                     _TXSTA1	set	4012
   111  0000                     _RCSTA1	set	4011
   112  0000                     _BAUDCON1	set	4024
   113  0000                     _PIE1bits	set	3997
   114  0000                     _INTCONbits	set	4082
   115                           
   116                           ; #config settings
   117  0000                     
   118                           	psect	cinit
   119  00012E                     __pcinit:
   120                           	opt callstack 0
   121  00012E                     start_initialization:
   122                           	opt callstack 0
   123  00012E                     __initialization:
   124                           	opt callstack 0
   125                           
   126                           ; Clear objects allocated to COMRAM (30 bytes)
   127  00012E  EE00  F001         	lfsr	0,__pbssCOMRAM
   128  000132  0E1E               	movlw	30
   129  000134                     clear_0:
   130  000134  6AEE               	clrf	postinc0,c
   131  000136  06E8               	decf	wreg,f,c
   132  000138  E1FD               	bnz	clear_0
   133  00013A                     end_of_initialization:
   134                           	opt callstack 0
   135  00013A                     __end_of__initialization:
   136                           	opt callstack 0
   137  00013A  9031               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   138  00013C  9231               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   139  00013E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   140  000140  6EF8               	movwf	tblptru,c
   141  000142  0100               	movlb	0
   142  000144  EFB4  F000         	goto	_main	;jump to C main() function
   143                           
   144                           	psect	bssCOMRAM
   145  000001                     __pbssCOMRAM:
   146                           	opt callstack 0
   147  000001                     _eusart1RxStatusBuffer:
   148                           	opt callstack 0
   149  000001                     	ds	8
   150  000009                     _eusart1RxBuffer:
   151                           	opt callstack 0
   152  000009                     	ds	8
   153  000011                     _eusart1TxBuffer:
   154                           	opt callstack 0
   155  000011                     	ds	8
   156  000019                     _eusart1RxLastError:
   157                           	opt callstack 0
   158  000019                     	ds	1
   159  00001A                     _eusart1RxCount:
   160                           	opt callstack 0
   161  00001A                     	ds	1
   162  00001B                     _eusart1RxTail:
   163                           	opt callstack 0
   164  00001B                     	ds	1
   165  00001C                     _eusart1RxHead:
   166                           	opt callstack 0
   167  00001C                     	ds	1
   168  00001D                     _eusart1TxTail:
   169                           	opt callstack 0
   170  00001D                     	ds	1
   171  00001E                     _eusart1TxHead:
   172                           	opt callstack 0
   173  00001E                     	ds	1
   174                           
   175                           	psect	cstackCOMRAM
   176  00002A                     __pcstackCOMRAM:
   177                           	opt callstack 0
   178  00002A                     EUSART1_Receive_ISR@c:
   179                           	opt callstack 0
   180                           
   181                           ; 1 bytes @ 0x0
   182  00002A                     	ds	1
   183  00002B                     ??_INTERRUPT_InterruptManager:
   184                           
   185                           ; 1 bytes @ 0x1
   186  00002B                     	ds	4
   187  00002F                     EUSART1_SetFramingErrorHandler@interruptHandler:
   188                           	opt callstack 0
   189  00002F                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   190                           	opt callstack 0
   191  00002F                     EUSART1_SetErrorHandler@interruptHandler:
   192                           	opt callstack 0
   193  00002F                     EUSART1_SetTxInterruptHandler@interruptHandler:
   194                           	opt callstack 0
   195  00002F                     EUSART1_SetRxInterruptHandler@interruptHandler:
   196                           	opt callstack 0
   197                           
   198                           ; 2 bytes @ 0x5
   199  00002F                     	ds	2
   200  000031                     
   201                           ; 1 bytes @ 0x7
   202 ;;
   203 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   204 ;;
   205 ;; *************** function _main *****************
   206 ;; Defined at:
   207 ;;		line 49 in file "main.c"
   208 ;; Parameters:    Size  Location     Type
   209 ;;		None
   210 ;; Auto vars:     Size  Location     Type
   211 ;;		None
   212 ;; Return value:  Size  Location     Type
   213 ;;                  1    wreg      void 
   214 ;; Registers used:
   215 ;;		wreg, status,2, status,0, cstack
   216 ;; Tracked objects:
   217 ;;		On entry : 0/0
   218 ;;		On exit  : 0/0
   219 ;;		Unchanged: 0/0
   220 ;; Data sizes:     COMRAM   BANK0   BANK1
   221 ;;      Params:         0       0       0
   222 ;;      Locals:         0       0       0
   223 ;;      Temps:          0       0       0
   224 ;;      Totals:         0       0       0
   225 ;;Total ram usage:        0 bytes
   226 ;; Hardware stack levels required when called:    5
   227 ;; This function calls:
   228 ;;		_SYSTEM_Initialize
   229 ;; This function is called by:
   230 ;;		Startup code after reset
   231 ;; This function uses a non-reentrant model
   232 ;;
   233                           
   234                           	psect	text0
   235  000168                     __ptext0:
   236                           	opt callstack 0
   237  000168                     _main:
   238                           	opt callstack 26
   239                           
   240                           ;main.c: 52: SYSTEM_Initialize();
   241                           
   242                           ;incstack = 0
   243  000168  ECA4  F000         	call	_SYSTEM_Initialize	;wreg free
   244                           
   245                           ;main.c: 59: (INTCONbits.GIE = 1);
   246  00016C  8EF2               	bsf	4082,7,c	;volatile
   247                           
   248                           ;main.c: 65: (INTCONbits.PEIE = 1);
   249  00016E  8CF2               	bsf	4082,6,c	;volatile
   250  000170                     l9:
   251                           
   252                           ;main.c: 71: {
   253  000170  D7FF               	goto	l9
   254  000172                     __end_of_main:
   255                           	opt callstack 0
   256                           
   257 ;; *************** function _SYSTEM_Initialize *****************
   258 ;; Defined at:
   259 ;;		line 50 in file "mcc_generated_files/mcc.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;		None
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, status,2, status,0, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1
   273 ;;      Params:         0       0       0
   274 ;;      Locals:         0       0       0
   275 ;;      Temps:          0       0       0
   276 ;;      Totals:         0       0       0
   277 ;;Total ram usage:        0 bytes
   278 ;; Hardware stack levels used:    1
   279 ;; Hardware stack levels required when called:    4
   280 ;; This function calls:
   281 ;;		_EUSART1_Initialize
   282 ;;		_INTERRUPT_Initialize
   283 ;;		_OSCILLATOR_Initialize
   284 ;;		_PIN_MANAGER_Initialize
   285 ;; This function is called by:
   286 ;;		_main
   287 ;; This function uses a non-reentrant model
   288 ;;
   289                           
   290                           	psect	text1
   291  000148                     __ptext1:
   292                           	opt callstack 0
   293  000148                     _SYSTEM_Initialize:
   294                           	opt callstack 26
   295                           
   296                           ;mcc.c: 53: INTERRUPT_Initialize();
   297                           
   298                           ;incstack = 0
   299  000148  ECD7  F000         	call	_INTERRUPT_Initialize	;wreg free
   300                           
   301                           ;mcc.c: 54: PIN_MANAGER_Initialize();
   302  00014C  EC6F  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   303                           
   304                           ; BSR set to: 15
   305                           ;mcc.c: 55: OSCILLATOR_Initialize();
   306  000150  ECAD  F000         	call	_OSCILLATOR_Initialize	;wreg free
   307                           
   308                           ; BSR set to: 15
   309                           ;mcc.c: 56: EUSART1_Initialize();
   310  000154  EC35  F000         	call	_EUSART1_Initialize	;wreg free
   311  000158  0012               	return		;funcret
   312  00015A                     __end_of_SYSTEM_Initialize:
   313                           	opt callstack 0
   314                           
   315 ;; *************** function _PIN_MANAGER_Initialize *****************
   316 ;; Defined at:
   317 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;		None
   320 ;; Auto vars:     Size  Location     Type
   321 ;;		None
   322 ;; Return value:  Size  Location     Type
   323 ;;                  1    wreg      void 
   324 ;; Registers used:
   325 ;;		wreg, status,2
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 3F/F
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMRAM   BANK0   BANK1
   331 ;;      Params:         0       0       0
   332 ;;      Locals:         0       0       0
   333 ;;      Temps:          0       0       0
   334 ;;      Totals:         0       0       0
   335 ;;Total ram usage:        0 bytes
   336 ;; Hardware stack levels used:    1
   337 ;; Hardware stack levels required when called:    2
   338 ;; This function calls:
   339 ;;		Nothing
   340 ;; This function is called by:
   341 ;;		_SYSTEM_Initialize
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           	psect	text2
   346  0000DE                     __ptext2:
   347                           	opt callstack 0
   348  0000DE                     _PIN_MANAGER_Initialize:
   349                           	opt callstack 27
   350                           
   351                           ;pin_manager.c: 60: LATA = 0x00;
   352                           
   353                           ;incstack = 0
   354  0000DE  0E00               	movlw	0
   355  0000E0  6E89               	movwf	3977,c	;volatile
   356                           
   357                           ;pin_manager.c: 61: LATB = 0x00;
   358  0000E2  0E00               	movlw	0
   359  0000E4  6E8A               	movwf	3978,c	;volatile
   360                           
   361                           ;pin_manager.c: 62: LATC = 0x00;
   362  0000E6  0E00               	movlw	0
   363  0000E8  6E8B               	movwf	3979,c	;volatile
   364                           
   365                           ;pin_manager.c: 67: TRISA = 0xFF;
   366  0000EA  6892               	setf	3986,c	;volatile
   367                           
   368                           ;pin_manager.c: 68: TRISB = 0xFF;
   369  0000EC  6893               	setf	3987,c	;volatile
   370                           
   371                           ;pin_manager.c: 69: TRISC = 0xBF;
   372  0000EE  0EBF               	movlw	191
   373  0000F0  6E94               	movwf	3988,c	;volatile
   374                           
   375                           ;pin_manager.c: 74: ANSELC = 0x3C;
   376  0000F2  0E3C               	movlw	60
   377  0000F4  010F               	movlb	15	; () banked
   378  0000F6  6F3A               	movwf	58,b	;volatile
   379                           
   380                           ;pin_manager.c: 75: ANSELB = 0x3F;
   381  0000F8  0E3F               	movlw	63
   382  0000FA  6F39               	movwf	57,b	;volatile
   383                           
   384                           ;pin_manager.c: 76: ANSELA = 0x2F;
   385  0000FC  0E2F               	movlw	47
   386  0000FE  6F38               	movwf	56,b	;volatile
   387                           
   388                           ;pin_manager.c: 81: WPUB = 0x00;
   389  000100  0E00               	movlw	0
   390  000102  6E61               	movwf	3937,c	;volatile
   391                           
   392                           ; BSR set to: 15
   393                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 1;
   394  000104  8EF1               	bsf	4081,7,c	;volatile
   395                           
   396                           ; BSR set to: 15
   397  000106  0012               	return		;funcret
   398  000108                     __end_of_PIN_MANAGER_Initialize:
   399                           	opt callstack 0
   400                           
   401 ;; *************** function _OSCILLATOR_Initialize *****************
   402 ;; Defined at:
   403 ;;		line 59 in file "mcc_generated_files/mcc.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, status,2
   412 ;; Tracked objects:
   413 ;;		On entry : 3F/F
   414 ;;		On exit  : 3F/F
   415 ;;		Unchanged: 3E/0
   416 ;; Data sizes:     COMRAM   BANK0   BANK1
   417 ;;      Params:         0       0       0
   418 ;;      Locals:         0       0       0
   419 ;;      Temps:          0       0       0
   420 ;;      Totals:         0       0       0
   421 ;;Total ram usage:        0 bytes
   422 ;; Hardware stack levels used:    1
   423 ;; Hardware stack levels required when called:    2
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		_SYSTEM_Initialize
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           	psect	text3
   432  00015A                     __ptext3:
   433                           	opt callstack 0
   434  00015A                     _OSCILLATOR_Initialize:
   435                           	opt callstack 27
   436                           
   437                           ; BSR set to: 15
   438                           ;mcc.c: 62: OSCCON = 0x30;
   439                           
   440                           ; BSR set to: 15
   441                           ;incstack = 0
   442  00015A  0E30               	movlw	48
   443  00015C  6ED3               	movwf	4051,c	;volatile
   444                           
   445                           ;mcc.c: 64: OSCCON2 = 0x04;
   446  00015E  0E04               	movlw	4
   447  000160  6ED2               	movwf	4050,c	;volatile
   448                           
   449                           ;mcc.c: 66: OSCTUNE = 0x00;
   450  000162  0E00               	movlw	0
   451  000164  6E9B               	movwf	3995,c	;volatile
   452                           
   453                           ; BSR set to: 15
   454  000166  0012               	return		;funcret
   455  000168                     __end_of_OSCILLATOR_Initialize:
   456                           	opt callstack 0
   457                           
   458 ;; *************** function _INTERRUPT_Initialize *****************
   459 ;; Defined at:
   460 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		None
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1
   474 ;;      Params:         0       0       0
   475 ;;      Locals:         0       0       0
   476 ;;      Temps:          0       0       0
   477 ;;      Totals:         0       0       0
   478 ;;Total ram usage:        0 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; Hardware stack levels required when called:    2
   481 ;; This function calls:
   482 ;;		Nothing
   483 ;; This function is called by:
   484 ;;		_SYSTEM_Initialize
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	text4
   489  0001AE                     __ptext4:
   490                           	opt callstack 0
   491  0001AE                     _INTERRUPT_Initialize:
   492                           	opt callstack 27
   493                           
   494                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
   495                           
   496                           ; BSR set to: 15
   497                           ;incstack = 0
   498  0001AE  9ED0               	bcf	4048,7,c	;volatile
   499  0001B0  0012               	return		;funcret
   500  0001B2                     __end_of_INTERRUPT_Initialize:
   501                           	opt callstack 0
   502                           
   503 ;; *************** function _EUSART1_Initialize *****************
   504 ;; Defined at:
   505 ;;		line 88 in file "mcc_generated_files/eusart1.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;		None
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		wreg, status,2, status,0, cstack
   514 ;; Tracked objects:
   515 ;;		On entry : 3F/F
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMRAM   BANK0   BANK1
   519 ;;      Params:         0       0       0
   520 ;;      Locals:         0       0       0
   521 ;;      Temps:          0       0       0
   522 ;;      Totals:         0       0       0
   523 ;;Total ram usage:        0 bytes
   524 ;; Hardware stack levels used:    1
   525 ;; Hardware stack levels required when called:    3
   526 ;; This function calls:
   527 ;;		_EUSART1_SetErrorHandler
   528 ;;		_EUSART1_SetFramingErrorHandler
   529 ;;		_EUSART1_SetOverrunErrorHandler
   530 ;;		_EUSART1_SetRxInterruptHandler
   531 ;;		_EUSART1_SetTxInterruptHandler
   532 ;; This function is called by:
   533 ;;		_SYSTEM_Initialize
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text5
   538  00006A                     __ptext5:
   539                           	opt callstack 0
   540  00006A                     _EUSART1_Initialize:
   541                           	opt callstack 26
   542                           
   543                           ; BSR set to: 15
   544                           ;eusart1.c: 91: PIE1bits.RC1IE = 0;
   545                           
   546                           ;incstack = 0
   547  00006A  9A9D               	bcf	3997,5,c	;volatile
   548                           
   549                           ; BSR set to: 15
   550                           ;eusart1.c: 92: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
   551  00006C  0EA4               	movlw	low _EUSART1_Receive_ISR
   552  00006E  6E2F               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
   553  000070  0E01               	movlw	high _EUSART1_Receive_ISR
   554  000072  6E30               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
   555  000074  ECBE  F000         	call	_EUSART1_SetRxInterruptHandler	;wreg free
   556                           
   557                           ; BSR set to: 15
   558                           ;eusart1.c: 93: PIE1bits.TX1IE = 0;
   559  000078  989D               	bcf	3997,4,c	;volatile
   560                           
   561                           ;eusart1.c: 94: EUSART1_SetTxInterruptHandler(EUSART1_Transmit_ISR);
   562  00007A  0E08               	movlw	low _EUSART1_Transmit_ISR
   563  00007C  6E2F               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler,c
   564  00007E  0E01               	movlw	high _EUSART1_Transmit_ISR
   565  000080  6E30               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1,c
   566  000082  ECB9  F000         	call	_EUSART1_SetTxInterruptHandler	;wreg free
   567                           
   568                           ; BSR set to: 15
   569                           ;eusart1.c: 98: BAUDCON1 = 0x08;
   570  000086  0E08               	movlw	8
   571  000088  6EB8               	movwf	4024,c	;volatile
   572                           
   573                           ; BSR set to: 15
   574                           ;eusart1.c: 101: RCSTA1 = 0x90;
   575  00008A  0E90               	movlw	144
   576  00008C  6EAB               	movwf	4011,c	;volatile
   577                           
   578                           ; BSR set to: 15
   579                           ;eusart1.c: 104: TXSTA1 = 0x24;
   580  00008E  0E24               	movlw	36
   581  000090  6EAC               	movwf	4012,c	;volatile
   582                           
   583                           ; BSR set to: 15
   584                           ;eusart1.c: 107: SPBRG1 = 0x19;
   585  000092  0E19               	movlw	25
   586  000094  6EAF               	movwf	4015,c	;volatile
   587                           
   588                           ; BSR set to: 15
   589                           ;eusart1.c: 110: SPBRGH1 = 0x00;
   590  000096  0E00               	movlw	0
   591  000098  6EB0               	movwf	4016,c	;volatile
   592                           
   593                           ; BSR set to: 15
   594                           ;eusart1.c: 113: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
   595  00009A  0E00               	movlw	0
   596  00009C  6E2F               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
   597  00009E  0E00               	movlw	0
   598  0000A0  6E30               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
   599  0000A2  ECC8  F000         	call	_EUSART1_SetFramingErrorHandler	;wreg free
   600                           
   601                           ; BSR set to: 15
   602                           ;eusart1.c: 114: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
   603  0000A6  0E00               	movlw	0
   604  0000A8  6E2F               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
   605  0000AA  0E00               	movlw	0
   606  0000AC  6E30               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
   607  0000AE  ECC3  F000         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
   608                           
   609                           ;eusart1.c: 115: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
   610  0000B2  0E00               	movlw	0
   611  0000B4  6E2F               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
   612  0000B6  0E00               	movlw	0
   613  0000B8  6E30               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
   614  0000BA  ECCD  F000         	call	_EUSART1_SetErrorHandler	;wreg free
   615                           
   616                           ;eusart1.c: 117: eusart1RxLastError.status = 0;
   617  0000BE  0E00               	movlw	0
   618  0000C0  6E19               	movwf	_eusart1RxLastError,c	;volatile
   619                           
   620                           ;eusart1.c: 120: eusart1TxHead = 0;
   621  0000C2  0E00               	movlw	0
   622  0000C4  6E1E               	movwf	_eusart1TxHead,c	;volatile
   623                           
   624                           ;eusart1.c: 121: eusart1TxTail = 0;
   625  0000C6  0E00               	movlw	0
   626  0000C8  6E1D               	movwf	_eusart1TxTail,c	;volatile
   627                           
   628                           ;eusart1.c: 122: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
   629  0000CA  0E08               	movlw	8
   630  0000CC  6E29               	movwf	_eusart1TxBufferRemaining,c	;volatile
   631                           
   632                           ;eusart1.c: 124: eusart1RxHead = 0;
   633  0000CE  0E00               	movlw	0
   634  0000D0  6E1C               	movwf	_eusart1RxHead,c	;volatile
   635                           
   636                           ;eusart1.c: 125: eusart1RxTail = 0;
   637  0000D2  0E00               	movlw	0
   638  0000D4  6E1B               	movwf	_eusart1RxTail,c	;volatile
   639                           
   640                           ;eusart1.c: 126: eusart1RxCount = 0;
   641  0000D6  0E00               	movlw	0
   642  0000D8  6E1A               	movwf	_eusart1RxCount,c	;volatile
   643                           
   644                           ;eusart1.c: 129: PIE1bits.RC1IE = 1;
   645  0000DA  8A9D               	bsf	3997,5,c	;volatile
   646  0000DC  0012               	return		;funcret
   647  0000DE                     __end_of_EUSART1_Initialize:
   648                           	opt callstack 0
   649                           
   650 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
   651 ;; Defined at:
   652 ;;		line 261 in file "mcc_generated_files/eusart1.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;  interruptHan    2    5[COMRAM] PTR FTN()void 
   655 ;;		 -> EUSART1_Transmit_ISR(1), 
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, status,2, status,0
   662 ;; Tracked objects:
   663 ;;		On entry : 3F/F
   664 ;;		On exit  : 3F/F
   665 ;;		Unchanged: 3E/0
   666 ;; Data sizes:     COMRAM   BANK0   BANK1
   667 ;;      Params:         2       0       0
   668 ;;      Locals:         0       0       0
   669 ;;      Temps:          0       0       0
   670 ;;      Totals:         2       0       0
   671 ;;Total ram usage:        2 bytes
   672 ;; Hardware stack levels used:    1
   673 ;; Hardware stack levels required when called:    2
   674 ;; This function calls:
   675 ;;		Nothing
   676 ;; This function is called by:
   677 ;;		_EUSART1_Initialize
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           	psect	text6
   682  000172                     __ptext6:
   683                           	opt callstack 0
   684  000172                     _EUSART1_SetTxInterruptHandler:
   685                           	opt callstack 26
   686                           
   687                           ; BSR set to: 15
   688                           ;eusart1.c: 262: EUSART1_TxDefaultInterruptHandler = interruptHandler;
   689                           
   690                           ;incstack = 0
   691  000172  C02F  F027         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
   692  000176  C030  F028         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
   693                           
   694                           ; BSR set to: 15
   695  00017A  0012               	return		;funcret
   696  00017C                     __end_of_EUSART1_SetTxInterruptHandler:
   697                           	opt callstack 0
   698                           
   699 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
   700 ;; Defined at:
   701 ;;		line 265 in file "mcc_generated_files/eusart1.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;  interruptHan    2    5[COMRAM] PTR FTN()void 
   704 ;;		 -> EUSART1_Receive_ISR(1), 
   705 ;; Auto vars:     Size  Location     Type
   706 ;;		None
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, status,2, status,0
   711 ;; Tracked objects:
   712 ;;		On entry : 3F/F
   713 ;;		On exit  : 3F/F
   714 ;;		Unchanged: 3E/0
   715 ;; Data sizes:     COMRAM   BANK0   BANK1
   716 ;;      Params:         2       0       0
   717 ;;      Locals:         0       0       0
   718 ;;      Temps:          0       0       0
   719 ;;      Totals:         2       0       0
   720 ;;Total ram usage:        2 bytes
   721 ;; Hardware stack levels used:    1
   722 ;; Hardware stack levels required when called:    2
   723 ;; This function calls:
   724 ;;		Nothing
   725 ;; This function is called by:
   726 ;;		_EUSART1_Initialize
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text7
   731  00017C                     __ptext7:
   732                           	opt callstack 0
   733  00017C                     _EUSART1_SetRxInterruptHandler:
   734                           	opt callstack 26
   735                           
   736                           ; BSR set to: 15
   737                           ;eusart1.c: 266: EUSART1_RxDefaultInterruptHandler = interruptHandler;
   738                           
   739                           ; BSR set to: 15
   740                           ;incstack = 0
   741  00017C  C02F  F025         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
   742  000180  C030  F026         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
   743                           
   744                           ; BSR set to: 15
   745  000184  0012               	return		;funcret
   746  000186                     __end_of_EUSART1_SetRxInterruptHandler:
   747                           	opt callstack 0
   748                           
   749 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
   750 ;; Defined at:
   751 ;;		line 253 in file "mcc_generated_files/eusart1.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;  interruptHan    2    5[COMRAM] PTR FTN()void 
   754 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, status,2, status,0
   761 ;; Tracked objects:
   762 ;;		On entry : 3F/F
   763 ;;		On exit  : 3F/F
   764 ;;		Unchanged: 3E/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1
   766 ;;      Params:         2       0       0
   767 ;;      Locals:         0       0       0
   768 ;;      Temps:          0       0       0
   769 ;;      Totals:         2       0       0
   770 ;;Total ram usage:        2 bytes
   771 ;; Hardware stack levels used:    1
   772 ;; Hardware stack levels required when called:    2
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_EUSART1_Initialize
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text8
   781  000186                     __ptext8:
   782                           	opt callstack 0
   783  000186                     _EUSART1_SetOverrunErrorHandler:
   784                           	opt callstack 26
   785                           
   786                           ; BSR set to: 15
   787                           ;eusart1.c: 254: EUSART1_OverrunErrorHandler = interruptHandler;
   788                           
   789                           ; BSR set to: 15
   790                           ;incstack = 0
   791  000186  C02F  F021         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
   792  00018A  C030  F022         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
   793                           
   794                           ; BSR set to: 15
   795  00018E  0012               	return		;funcret
   796  000190                     __end_of_EUSART1_SetOverrunErrorHandler:
   797                           	opt callstack 0
   798                           
   799 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
   800 ;; Defined at:
   801 ;;		line 249 in file "mcc_generated_files/eusart1.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;  interruptHan    2    5[COMRAM] PTR FTN()void 
   804 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, status,2, status,0
   811 ;; Tracked objects:
   812 ;;		On entry : 3F/F
   813 ;;		On exit  : 3F/F
   814 ;;		Unchanged: 3E/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1
   816 ;;      Params:         2       0       0
   817 ;;      Locals:         0       0       0
   818 ;;      Temps:          0       0       0
   819 ;;      Totals:         2       0       0
   820 ;;Total ram usage:        2 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; Hardware stack levels required when called:    2
   823 ;; This function calls:
   824 ;;		Nothing
   825 ;; This function is called by:
   826 ;;		_EUSART1_Initialize
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           	psect	text9
   831  000190                     __ptext9:
   832                           	opt callstack 0
   833  000190                     _EUSART1_SetFramingErrorHandler:
   834                           	opt callstack 26
   835                           
   836                           ; BSR set to: 15
   837                           ;eusart1.c: 250: EUSART1_FramingErrorHandler = interruptHandler;
   838                           
   839                           ; BSR set to: 15
   840                           ;incstack = 0
   841  000190  C02F  F023         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
   842  000194  C030  F024         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
   843                           
   844                           ; BSR set to: 15
   845  000198  0012               	return		;funcret
   846  00019A                     __end_of_EUSART1_SetFramingErrorHandler:
   847                           	opt callstack 0
   848                           
   849 ;; *************** function _EUSART1_SetErrorHandler *****************
   850 ;; Defined at:
   851 ;;		line 257 in file "mcc_generated_files/eusart1.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;  interruptHan    2    5[COMRAM] PTR FTN()void 
   854 ;;		 -> EUSART1_DefaultErrorHandler(1), 
   855 ;; Auto vars:     Size  Location     Type
   856 ;;		None
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg, status,2, status,0
   861 ;; Tracked objects:
   862 ;;		On entry : 0/F
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1
   866 ;;      Params:         2       0       0
   867 ;;      Locals:         0       0       0
   868 ;;      Temps:          0       0       0
   869 ;;      Totals:         2       0       0
   870 ;;Total ram usage:        2 bytes
   871 ;; Hardware stack levels used:    1
   872 ;; Hardware stack levels required when called:    2
   873 ;; This function calls:
   874 ;;		Nothing
   875 ;; This function is called by:
   876 ;;		_EUSART1_Initialize
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text10
   881  00019A                     __ptext10:
   882                           	opt callstack 0
   883  00019A                     _EUSART1_SetErrorHandler:
   884                           	opt callstack 26
   885                           
   886                           ;eusart1.c: 258: EUSART1_ErrorHandler = interruptHandler;
   887                           
   888                           ; BSR set to: 15
   889                           ;incstack = 0
   890  00019A  C02F  F01F         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
   891  00019E  C030  F020         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
   892  0001A2  0012               	return		;funcret
   893  0001A4                     __end_of_EUSART1_SetErrorHandler:
   894                           	opt callstack 0
   895                           
   896 ;; *************** function _INTERRUPT_InterruptManager *****************
   897 ;; Defined at:
   898 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1
   912 ;;      Params:         0       0       0
   913 ;;      Locals:         0       0       0
   914 ;;      Temps:          4       0       0
   915 ;;      Totals:         4       0       0
   916 ;;Total ram usage:        4 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:    1
   919 ;; This function calls:
   920 ;;		Absolute function
   921 ;;		_EUSART1_Receive_ISR
   922 ;;		_EUSART1_Transmit_ISR
   923 ;; This function is called by:
   924 ;;		Interrupt level 2
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	intcode
   929  000008                     __pintcode:
   930                           	opt callstack 0
   931  000008                     _INTERRUPT_InterruptManager:
   932                           	opt callstack 26
   933                           
   934                           ;incstack = 0
   935  000008  8231               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   936  00000A  CFFA F02B          	movff	pclath,??_INTERRUPT_InterruptManager
   937  00000E  CFFB F02C          	movff	pclatu,??_INTERRUPT_InterruptManager+1
   938  000012  CFD9 F02D          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
   939  000016  CFDA F02E          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
   940                           
   941                           ;interrupt_manager.c: 61: if(INTCONbits.PEIE == 1)
   942  00001A  ACF2               	btfss	4082,6,c	;volatile
   943  00001C  D01A               	goto	i2u9_49
   944                           
   945                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: if(PIE1bits.TX1IE == 1 && PIR1bits.
      +                          TX1IF == 1)
   946  00001E  B89D               	btfsc	3997,4,c	;volatile
   947  000020  A89E               	btfss	3998,4,c	;volatile
   948  000022  D008               	goto	i2l171
   949                           
   950                           ;interrupt_manager.c: 64: {;interrupt_manager.c: 65: EUSART1_TxDefaultInterruptHandler()
      +                          ;
   951  000024  D801               	call	i2u6_48
   952  000026  D015               	goto	i2u9_49
   953  000028                     i2u6_48:
   954  000028  0005               	push	
   955  00002A  6EFA               	movwf	pclath,c
   956  00002C  5027               	movf	_EUSART1_TxDefaultInterruptHandler,w,c
   957  00002E  6EFD               	movwf	tosl,c
   958  000030  5028               	movf	_EUSART1_TxDefaultInterruptHandler+1,w,c
   959  000032  D00A               	goto	L1
   960  000034                     i2l171:
   961                           
   962                           ;interrupt_manager.c: 67: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
   963  000034  BA9D               	btfsc	3997,5,c	;volatile
   964  000036  AA9E               	btfss	3998,5,c	;volatile
   965  000038  D00C               	goto	i2u9_49
   966                           
   967                           ;interrupt_manager.c: 68: {;interrupt_manager.c: 69: EUSART1_RxDefaultInterruptHandler()
      +                          ;
   968  00003A  D801               	call	i2u9_48
   969  00003C  D00A               	goto	i2u9_49
   970  00003E                     i2u9_48:
   971  00003E  0005               	push	
   972  000040  6EFA               	movwf	pclath,c
   973  000042  5025               	movf	_EUSART1_RxDefaultInterruptHandler,w,c
   974  000044  6EFD               	movwf	tosl,c
   975  000046  5026               	movf	_EUSART1_RxDefaultInterruptHandler+1,w,c
   976  000048                     L1:
   977  000048  6EFE               	movwf	tosh,c
   978  00004A  50F8               	movf	tblptru,w,c
   979  00004C  6EFF               	movwf	tosu,c
   980  00004E  50FA               	movf	pclath,w,c
   981  000050  0012               	return		;indir
   982  000052                     i2u9_49:
   983                           
   984                           ;interrupt_manager.c: 74: };interrupt_manager.c: 75: }
   985                           
   986                           ;interrupt_manager.c: 70: }
   987  000052  C02E  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
   988  000056  C02D  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
   989  00005A  C02C  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
   990  00005E  C02B  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
   991  000062  9231               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   992  000064  0011               	retfie		f
   993  000066                     __end_of_INTERRUPT_InterruptManager:
   994                           	opt callstack 0
   995                           
   996 ;; *************** function _EUSART1_Transmit_ISR *****************
   997 ;; Defined at:
   998 ;;		line 197 in file "mcc_generated_files/eusart1.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;		None
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1
  1012 ;;      Params:         0       0       0
  1013 ;;      Locals:         0       0       0
  1014 ;;      Temps:          0       0       0
  1015 ;;      Totals:         0       0       0
  1016 ;;Total ram usage:        0 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_EUSART1_Initialize
  1022 ;;		_INTERRUPT_InterruptManager
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text12
  1027  000108                     __ptext12:
  1028                           	opt callstack 0
  1029  000108                     _EUSART1_Transmit_ISR:
  1030                           	opt callstack 26
  1031                           
  1032                           ;eusart1.c: 201: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  1033                           
  1034                           ;incstack = 0
  1035  000108  0E08               	movlw	8
  1036  00010A  6029               	cpfslt	_eusart1TxBufferRemaining,c
  1037  00010C  D00E               	goto	i2l116
  1038                           
  1039                           ;eusart1.c: 202: {;eusart1.c: 203: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  1040  00010E  501D               	movf	_eusart1TxTail,w,c
  1041  000110  0F11               	addlw	low _eusart1TxBuffer
  1042  000112  6ED9               	movwf	fsr2l,c
  1043  000114  6ADA               	clrf	fsr2h,c
  1044  000116  50DF               	movf	indf2,w,c
  1045  000118  6EAD               	movwf	4013,c	;volatile
  1046  00011A  2A1D               	incf	_eusart1TxTail,f,c	;volatile
  1047                           
  1048                           ;eusart1.c: 204: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  1049  00011C  0E07               	movlw	7
  1050  00011E  641D               	cpfsgt	_eusart1TxTail,c
  1051  000120  D002               	goto	i2l1038
  1052                           
  1053                           ;eusart1.c: 205: {;eusart1.c: 206: eusart1TxTail = 0;
  1054  000122  0E00               	movlw	0
  1055  000124  6E1D               	movwf	_eusart1TxTail,c	;volatile
  1056  000126                     i2l1038:
  1057                           
  1058                           ;eusart1.c: 207: };eusart1.c: 208: eusart1TxBufferRemaining++;
  1059  000126  2A29               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  1060                           
  1061                           ;eusart1.c: 209: }
  1062  000128  0012               	return	
  1063  00012A                     i2l116:
  1064                           
  1065                           ;eusart1.c: 210: else;eusart1.c: 211: {;eusart1.c: 212: PIE1bits.TX1IE = 0;
  1066  00012A  989D               	bcf	3997,4,c	;volatile
  1067  00012C  0012               	return		;funcret
  1068  00012E                     __end_of_EUSART1_Transmit_ISR:
  1069                           	opt callstack 0
  1070                           
  1071 ;; *************** function _EUSART1_Receive_ISR *****************
  1072 ;; Defined at:
  1073 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  c               1    0[COMRAM] unsigned char 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		None
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1
  1087 ;;      Params:         0       0       0
  1088 ;;      Locals:         1       0       0
  1089 ;;      Temps:          0       0       0
  1090 ;;      Totals:         1       0       0
  1091 ;;Total ram usage:        1 bytes
  1092 ;; Hardware stack levels used:    1
  1093 ;; This function calls:
  1094 ;;		Nothing
  1095 ;; This function is called by:
  1096 ;;		_EUSART1_Initialize
  1097 ;;		_INTERRUPT_InterruptManager
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text13
  1102  0001A4                     __ptext13:
  1103                           	opt callstack 0
  1104  0001A4                     _EUSART1_Receive_ISR:
  1105                           	opt callstack 26
  1106                           
  1107                           ;eusart1.c: 218: uint8_t c;;eusart1.c: 219: c=RCREG1;
  1108                           
  1109                           ;incstack = 0
  1110  0001A4  CFAE F02A          	movff	4014,EUSART1_Receive_ISR@c	;volatile
  1111                           
  1112                           ;eusart1.c: 220: TXREG1=c;
  1113  0001A8  C02A  FFAD         	movff	EUSART1_Receive_ISR@c,4013	;volatile
  1114  0001AC  0012               	return		;funcret
  1115  0001AE                     __end_of_EUSART1_Receive_ISR:
  1116                           	opt callstack 0
  1117  0000                     
  1118                           	psect	text14
  1119  000000                     __ptext14:
  1120                           	opt callstack 0
  1121                           
  1122                           	psect	rparam
  1123  0000                     
  1124                           	psect	temp
  1125  000031                     btemp:
  1126                           	opt callstack 0
  1127  000031                     	ds	1
  1128  0000                     int$flags	set	btemp
  1129  0000                     wtemp8	set	btemp+1
  1130  0000                     ttemp5	set	btemp+1
  1131  0000                     ttemp6	set	btemp+4
  1132  0000                     ttemp7	set	btemp+8
  1133                           tosu	equ	0xFFF
  1134                           tosh	equ	0xFFE
  1135                           tosl	equ	0xFFD
  1136                           stkptr	equ	0xFFC
  1137                           pclatu	equ	0xFFB
  1138                           pclath	equ	0xFFA
  1139                           pcl	equ	0xFF9
  1140                           tblptru	equ	0xFF8
  1141                           tblptrh	equ	0xFF7
  1142                           tblptrl	equ	0xFF6
  1143                           tablat	equ	0xFF5
  1144                           prodh	equ	0xFF4
  1145                           prodl	equ	0xFF3
  1146                           indf0	equ	0xFEF
  1147                           postinc0	equ	0xFEE
  1148                           postdec0	equ	0xFED
  1149                           preinc0	equ	0xFEC
  1150                           plusw0	equ	0xFEB
  1151                           fsr0h	equ	0xFEA
  1152                           fsr0l	equ	0xFE9
  1153                           wreg	equ	0xFE8
  1154                           indf1	equ	0xFE7
  1155                           postinc1	equ	0xFE6
  1156                           postdec1	equ	0xFE5
  1157                           preinc1	equ	0xFE4
  1158                           plusw1	equ	0xFE3
  1159                           fsr1h	equ	0xFE2
  1160                           fsr1l	equ	0xFE1
  1161                           bsr	equ	0xFE0
  1162                           indf2	equ	0xFDF
  1163                           postinc2	equ	0xFDE
  1164                           postdec2	equ	0xFDD
  1165                           preinc2	equ	0xFDC
  1166                           plusw2	equ	0xFDB
  1167                           fsr2h	equ	0xFDA
  1168                           fsr2l	equ	0xFD9
  1169                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         30
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      7      48
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     490
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0      15
                                              1 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
   _EUSART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      7      30       1       51.1%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30       6        0.0%
DATA                 0      0      30       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 14 15:51:30 2020

                      _eusart1TxBufferRemaining 0029                                               l9 0170  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                   __CFG_LVP$ON 000000                                    __CFG_CPB$OFF 000000  
                                  __CFG_CPD$OFF 000000                                             tosl 000FFD  
                                           wreg 000FE8                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          _WPUB 000F61                                            _main 0168  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr2l 000FD9                                            btemp 0031  
                                 __CFG_BORV$190 000000                                            start 0066  
                                 __CFG_IESO$OFF 000000                                    ___param_bank 000000  
                __size_of_OSCILLATOR_Initialize 000E                   __end_of_OSCILLATOR_Initialize 0168  
                         _eusart1RxStatusBuffer 0001                                           ?_main 002A  
                                __CFG_DEBUG$OFF 000000                                           i2l116 012A  
                                         i2l171 0034                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                          _EUSART1_Transmit_ISR 0108                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                  __CFG_EBTRB$OFF 000000  
                          EUSART1_Receive_ISR@c 002A                              __CFG_MCLRE$EXTMCLR 000000  
                                         pclath 000FFA                                           ttemp5 0032  
                                         ttemp6 0035                                           ttemp7 0039  
                                         wtemp8 0032                                  __CFG_HFOFST$ON 000000  
            _EUSART1_DefaultFramingErrorHandler 000000                                  __CFG_PBADEN$ON 000000  
                               __initialization 012E                      __end_of_EUSART1_Initialize 00DE  
                                  __end_of_main 0172                     ?_INTERRUPT_InterruptManager 002A  
                                        ??_main 0031                                   __activetblptr 000002  
                         ?_EUSART1_Transmit_ISR 002A                                          _ANSELA 000F38  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        i2l1038 0126                                  __CFG_WDTEN$OFF 000000  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                        i2u6_48 0028                                          i2u9_48 003E  
                                        i2u9_49 0052                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                  __CFG_XINST$OFF 000000  
                                __CFG_STVREN$ON 000000                        ?_EUSART1_SetErrorHandler 002F  
                                        clear_0 0134                ??_EUSART1_SetOverrunErrorHandler 0031  
               ?_EUSART1_SetOverrunErrorHandler 002F                                          tblptru 000FF8  
                               _eusart1RxBuffer 0009                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart1TxBuffer 0011                               _SYSTEM_Initialize 0148  
                                    __accesstop 0060                         __end_of__initialization 013A  
                            ?_SYSTEM_Initialize 002A                                   ___rparam_used 000001  
                                __pcstackCOMRAM 002A                             ??_SYSTEM_Initialize 0031  
                        ??_EUSART1_Transmit_ISR 002A                     __end_of_EUSART1_Receive_ISR 01AE  
                     __end_of_SYSTEM_Initialize 015A                                   _eusart1RxHead 001C  
                                 _eusart1TxHead 001E                                   _eusart1RxTail 001B  
                                 _eusart1TxTail 001D               _EUSART1_TxDefaultInterruptHandler 0027  
               ??_EUSART1_SetRxInterruptHandler 0031                                 __CFG_PLLCFG$OFF 000000  
                                    __pnvCOMRAM 001F                 __end_of_EUSART1_SetErrorHandler 01A4  
                            __CFG_CCP2MX$PORTC1 000000                              __CFG_CCP3MX$PORTB5 000000  
        __end_of_EUSART1_SetFramingErrorHandler 019A         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 0190                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                               __CFG_PWRTEN$OFF 000000                                         __Hparam 0000  
                                       __Lparam 0000                                         __pcinit 012E  
                                       __ramtop 0200                                         __ptext0 0168  
                                       __ptext1 0148                                         __ptext2 00DE  
                                       __ptext3 015A                                         __ptext4 01AE  
                                       __ptext5 006A                                         __ptext6 0172  
                                       __ptext7 017C                                         __ptext8 0186  
                                       __ptext9 0190                           _OSCILLATOR_Initialize 015A  
                            _EUSART1_Initialize 006A                        ??_PIN_MANAGER_Initialize 002F  
                    __size_of_SYSTEM_Initialize 0012                            end_of_initialization 013A  
                           ?_EUSART1_Initialize 002A                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 0021           __end_of_EUSART1_SetRxInterruptHandler 0186  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 017C  
                                       postinc0 000FEE                            ??_EUSART1_Initialize 0031  
              __size_of_EUSART1_SetErrorHandler 000A                    __end_of_INTERRUPT_Initialize 01B2  
                        ?_OSCILLATOR_Initialize 002A                             start_initialization 012E  
               __size_of_PIN_MANAGER_Initialize 002A   EUSART1_SetRxInterruptHandler@interruptHandler 002F  
 EUSART1_SetTxInterruptHandler@interruptHandler 002F                  ?_EUSART1_SetRxInterruptHandler 002F  
                                _eusart1RxCount 001A                                     __pbssCOMRAM 0001  
             _EUSART1_RxDefaultInterruptHandler 0025                   __size_of_EUSART1_Transmit_ISR 0026  
               ??_EUSART1_SetTxInterruptHandler 0031                ??_EUSART1_SetFramingErrorHandler 0031  
               ?_EUSART1_SetFramingErrorHandler 002F                    __size_of_EUSART1_Receive_ISR 000A  
                        _PIN_MANAGER_Initialize 00DE                                       __pintcode 0008  
                  ??_INTERRUPT_InterruptManager 002B                                __CFG_PRICLKEN$ON 000000  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                          _EUSART1_ErrorHandler 001F                         _EUSART1_SetErrorHandler 019A  
                          _INTERRUPT_Initialize 01AE         EUSART1_SetErrorHandler@interruptHandler 002F  
                                      _PIE1bits 000F9D             __size_of_INTERRUPT_InterruptManager 005E  
                                      _PIR1bits 000F9E                                        _RCONbits 000FD0  
                              __CFG_WDTPS$32768 000000                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 002A           __end_of_EUSART1_SetTxInterruptHandler 017C  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 0172  
                                      __Hrparam 0000                                        __Lrparam 0000  
                            __CFG_BOREN$SBORDIS 000000                               __CFG_P2BMX$PORTB5 000000  
                       ??_OSCILLATOR_Initialize 002F                     __size_of_EUSART1_Initialize 0074  
                     ??_EUSART1_SetErrorHandler 0031                     _EUSART1_DefaultErrorHandler 000000  
                                      __ptext10 019A                                        __ptext12 0108  
                                      __ptext13 01A4                                        __ptext14 0000  
                                 __size_of_main 000A  EUSART1_SetOverrunErrorHandler@interruptHandler 002F  
                                      int$flags 0031              __end_of_INTERRUPT_InterruptManager 0066  
                    _INTERRUPT_InterruptManager 0008                     _EUSART1_FramingErrorHandler 0023  
                           _EUSART1_Receive_ISR 01A4                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 002F                                        intlevel2 0000  
                          ?_EUSART1_Receive_ISR 002A                         ?_PIN_MANAGER_Initialize 002A  
        __end_of_EUSART1_SetOverrunErrorHandler 0190         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 0186                    __end_of_EUSART1_Transmit_ISR 012E  
EUSART1_SetFramingErrorHandler@interruptHandler 002F                  ?_EUSART1_SetTxInterruptHandler 002F  
                            _eusart1RxLastError 0019                               __CFG_T3CMX$PORTC0 000000  
                         ??_EUSART1_Receive_ISR 002A                  __end_of_PIN_MANAGER_Initialize 0108  
                             __CFG_FOSC$INTIO67 000000  
