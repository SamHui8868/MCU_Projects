

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Apr 26 19:39:07 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           ; Version 2.05
    40                           ; Generated 20/12/2018 GMT
    41                           ; 
    42                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F23K22 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	nvCOMRAM
    75  000056                     __pnvCOMRAM:
    76                           	opt callstack 0
    77  000056                     _TMR0_InterruptHandler:
    78                           	opt callstack 0
    79  000056                     	ds	2
    80  000058                     _timer0ReloadVal:
    81                           	opt callstack 0
    82  000058                     	ds	1
    83                           
    84                           	psect	nvBANK0
    85  000067                     __pnvBANK0:
    86                           	opt callstack 0
    87  000067                     _eusart1TxBufferRemaining:
    88                           	opt callstack 0
    89  000067                     	ds	1
    90  0000                     _ANSELA	set	3896
    91  0000                     _ANSELB	set	3897
    92  0000                     _ANSELC	set	3898
    93  0000                     _LATAbits	set	3977
    94  0000                     _T0CON	set	4053
    95  0000                     _TMR0L	set	4054
    96  0000                     _TMR0H	set	4055
    97  0000                     _INTCON2bits	set	4081
    98  0000                     _WPUB	set	3937
    99  0000                     _TRISC	set	3988
   100  0000                     _TRISB	set	3987
   101  0000                     _TRISA	set	3986
   102  0000                     _LATC	set	3979
   103  0000                     _LATB	set	3978
   104  0000                     _LATA	set	3977
   105  0000                     _OSCTUNE	set	3995
   106  0000                     _OSCCON2	set	4050
   107  0000                     _OSCCON	set	4051
   108  0000                     _PIR1bits	set	3998
   109  0000                     _INTCONbits	set	4082
   110  0000                     _RCONbits	set	4048
   111  0000                     _RCREG1	set	4014
   112  0000                     _RCSTA1bits	set	4011
   113  0000                     _TXREG1	set	4013
   114  0000                     _SPBRGH1	set	4016
   115  0000                     _SPBRG1	set	4015
   116  0000                     _TXSTA1	set	4012
   117  0000                     _RCSTA1	set	4011
   118  0000                     _BAUDCON1	set	4024
   119  0000                     _PIE1bits	set	3997
   120                           
   121                           ; #config settings
   122  0000                     
   123                           	psect	cinit
   124  00017A                     __pcinit:
   125                           	opt callstack 0
   126  00017A                     start_initialization:
   127                           	opt callstack 0
   128  00017A                     __initialization:
   129                           	opt callstack 0
   130                           
   131                           ; Clear objects allocated to COMRAM (78 bytes)
   132  00017A  EE00  F001         	lfsr	0,__pbssCOMRAM
   133  00017E  0E4E               	movlw	78
   134  000180                     clear_0:
   135  000180  6AEE               	clrf	postinc0,c
   136  000182  06E8               	decf	wreg,f,c
   137  000184  E1FD               	bnz	clear_0
   138  000186                     end_of_initialization:
   139                           	opt callstack 0
   140  000186                     __end_of__initialization:
   141                           	opt callstack 0
   142  000186  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   143  000188  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   144  00018A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   145  00018C  6EF8               	movwf	tblptru,c
   146  00018E  0100               	movlb	0
   147  000190  EF2A  F000         	goto	_main	;jump to C main() function
   148                           
   149                           	psect	bssCOMRAM
   150  000001                     __pbssCOMRAM:
   151                           	opt callstack 0
   152  000001                     _Tx_CQ:
   153                           	opt callstack 0
   154  000001                     	ds	16
   155  000011                     _Rx_CQ:
   156                           	opt callstack 0
   157  000011                     	ds	16
   158  000021                     _eusart1RxStatusBuffer:
   159                           	opt callstack 0
   160  000021                     	ds	8
   161  000029                     _eusart1RxBuffer:
   162                           	opt callstack 0
   163  000029                     	ds	8
   164  000031                     _eusart1TxBuffer:
   165                           	opt callstack 0
   166  000031                     	ds	8
   167  000039                     _timecount:
   168                           	opt callstack 0
   169  000039                     	ds	2
   170  00003B                     _EUSART1_ErrorHandler:
   171                           	opt callstack 0
   172  00003B                     	ds	2
   173  00003D                     _EUSART1_OverrunErrorHandler:
   174                           	opt callstack 0
   175  00003D                     	ds	2
   176  00003F                     _EUSART1_FramingErrorHandler:
   177                           	opt callstack 0
   178  00003F                     	ds	2
   179  000041                     _EUSART1_RxDefaultInterruptHandler:
   180                           	opt callstack 0
   181  000041                     	ds	2
   182  000043                     _EUSART1_TxDefaultInterruptHandler:
   183                           	opt callstack 0
   184  000043                     	ds	2
   185  000045                     _Tx_Tail:
   186                           	opt callstack 0
   187  000045                     	ds	1
   188  000046                     _Rx_Tail:
   189                           	opt callstack 0
   190  000046                     	ds	1
   191  000047                     _Tx_Head:
   192                           	opt callstack 0
   193  000047                     	ds	1
   194  000048                     _Rx_Head:
   195                           	opt callstack 0
   196  000048                     	ds	1
   197  000049                     _eusart1RxLastError:
   198                           	opt callstack 0
   199  000049                     	ds	1
   200  00004A                     _eusart1RxCount:
   201                           	opt callstack 0
   202  00004A                     	ds	1
   203  00004B                     _eusart1RxTail:
   204                           	opt callstack 0
   205  00004B                     	ds	1
   206  00004C                     _eusart1RxHead:
   207                           	opt callstack 0
   208  00004C                     	ds	1
   209  00004D                     _eusart1TxTail:
   210                           	opt callstack 0
   211  00004D                     	ds	1
   212  00004E                     _eusart1TxHead:
   213                           	opt callstack 0
   214  00004E                     	ds	1
   215                           
   216                           	psect	cstackBANK0
   217  000060                     __pcstackBANK0:
   218                           	opt callstack 0
   219  000060                     EUSART1_Write@txData:
   220                           	opt callstack 0
   221  000060                     TMR0_SetInterruptHandler@InterruptHandler:
   222                           	opt callstack 0
   223                           
   224                           ; 2 bytes @ 0x0
   225  000060                     	ds	2
   226  000062                     ??_main:
   227                           
   228                           ; 1 bytes @ 0x2
   229  000062                     	ds	2
   230  000064                     main@data:
   231                           	opt callstack 0
   232                           
   233                           ; 1 bytes @ 0x4
   234  000064                     	ds	1
   235  000065                     main@oldtimecount:
   236                           	opt callstack 0
   237                           
   238                           ; 2 bytes @ 0x5
   239  000065                     	ds	2
   240                           
   241                           	psect	cstackCOMRAM
   242  00004F                     __pcstackCOMRAM:
   243                           	opt callstack 0
   244  00004F                     Rx_enQ@data:
   245                           	opt callstack 0
   246                           
   247                           ; 1 bytes @ 0x0
   248  00004F                     	ds	1
   249  000050                     EUSART1_Receive_ISR@c:
   250                           	opt callstack 0
   251                           
   252                           ; 1 bytes @ 0x1
   253  000050                     	ds	1
   254  000051                     ??_INTERRUPT_InterruptManager:
   255                           
   256                           ; 1 bytes @ 0x2
   257  000051                     	ds	4
   258  000055                     Rx_deQ@data:
   259                           	opt callstack 0
   260  000055                     Tx_deQ@data:
   261                           	opt callstack 0
   262  000055                     Tx_enQ@data:
   263                           	opt callstack 0
   264                           
   265                           ; 1 bytes @ 0x6
   266  000055                     	ds	1
   267  000056                     
   268                           ; 1 bytes @ 0x7
   269 ;;
   270 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   271 ;;
   272 ;; *************** function _main *****************
   273 ;; Defined at:
   274 ;;		line 49 in file "main.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;  oldtimecount    2    5[BANK0 ] int 
   279 ;;  data            1    4[BANK0 ] unsigned char 
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   284 ;; Tracked objects:
   285 ;;		On entry : 0/0
   286 ;;		On exit  : 3F/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMRAM   BANK0   BANK1
   289 ;;      Params:         0       0       0
   290 ;;      Locals:         0       3       0
   291 ;;      Temps:          0       2       0
   292 ;;      Totals:         0       5       0
   293 ;;Total ram usage:        5 bytes
   294 ;; Hardware stack levels required when called:    6
   295 ;; This function calls:
   296 ;;		_EUSART1_Read
   297 ;;		_EUSART1_Write
   298 ;;		_EUSART1_Write_task
   299 ;;		_Rx_isEmpty
   300 ;;		_SYSTEM_Initialize
   301 ;;		_Tx_isFull
   302 ;; This function is called by:
   303 ;;		Startup code after reset
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           	psect	text0
   308  000054                     __ptext0:
   309                           	opt callstack 0
   310  000054                     _main:
   311                           	opt callstack 25
   312                           
   313                           ;main.c: 52: SYSTEM_Initialize();
   314                           
   315                           ;incstack = 0
   316  000054  ECCA  F000         	call	_SYSTEM_Initialize	;wreg free
   317                           
   318                           ; BSR set to: 0
   319                           ;main.c: 59: (INTCONbits.GIE = 1);
   320  000058  8EF2               	bsf	4082,7,c	;volatile
   321                           
   322                           ; BSR set to: 0
   323                           ;main.c: 65: (INTCONbits.PEIE = 1);
   324  00005A  8CF2               	bsf	4082,6,c	;volatile
   325                           
   326                           ; BSR set to: 0
   327                           ;main.c: 69: uint8_t data;;main.c: 70: LATAbits.LATA0=1;
   328  00005C  8089               	bsf	3977,0,c	;volatile
   329  00005E                     l1356:
   330                           
   331                           ; BSR set to: 0
   332                           ;main.c: 71: int oldtimecount;;main.c: 72: extern int timecount;;main.c: 73: oldtimecoun
      +                          t= timecount;
   333  00005E  C039  F065         	movff	_timecount,main@oldtimecount
   334  000062  C03A  F066         	movff	_timecount+1,main@oldtimecount+1
   335  000066                     l313:
   336                           
   337                           ; BSR set to: 0
   338                           ;main.c: 75: {;main.c: 76: if(!Rx_isEmpty()&&!Tx_isFull()){
   339  000066  EC1C  F001         	call	_Rx_isEmpty	;wreg free
   340  00006A  0900               	iorlw	0
   341  00006C  A4D8               	btfss	status,2,c
   342  00006E  D00C               	goto	l314
   343  000070  EC01  F001         	call	_Tx_isFull	;wreg free
   344  000074  0900               	iorlw	0
   345  000076  A4D8               	btfss	status,2,c
   346  000078  D007               	goto	l314
   347                           
   348                           ;main.c: 78: data = EUSART1_Read();
   349  00007A  EC3E  F001         	call	_EUSART1_Read	;wreg free
   350  00007E  0100               	movlb	0	; () banked
   351  000080  6F64               	movwf	main@data& (0+255),b
   352                           
   353                           ;main.c: 79: EUSART1_Write(data);
   354  000082  5164               	movf	main@data& (0+255),w,b
   355  000084  EC33  F001         	call	_EUSART1_Write
   356  000088                     l314:
   357                           
   358                           ;main.c: 80: };main.c: 81: EUSART1_Write_task();
   359  000088  EC0A  F001         	call	_EUSART1_Write_task	;wreg free
   360                           
   361                           ;main.c: 83: if(timecount-oldtimecount>=10)
   362  00008C  0100               	movlb	0	; () banked
   363  00008E  5165               	movf	main@oldtimecount& (0+255),w,b
   364  000090  5C39               	subwf	_timecount,w,c
   365  000092  6F62               	movwf	??_main& (0+255),b
   366  000094  5166               	movf	(main@oldtimecount+1)& (0+255),w,b
   367  000096  583A               	subwfb	_timecount+1,w,c
   368  000098  6F63               	movwf	(??_main+1)& (0+255),b
   369  00009A  BF63               	btfsc	(??_main+1)& (0+255),7,b
   370  00009C  D7E4               	goto	l313
   371  00009E  5163               	movf	(??_main+1)& (0+255),w,b
   372  0000A0  E104               	bnz	u360
   373  0000A2  0E0A               	movlw	10
   374  0000A4  5D62               	subwf	??_main& (0+255),w,b
   375  0000A6  A0D8               	btfss	status,0,c
   376  0000A8  D7DE               	goto	l313
   377  0000AA                     u360:
   378                           
   379                           ; BSR set to: 0
   380                           ;main.c: 84: {;main.c: 85: LATAbits.LATA0^=1;
   381  0000AA  7089               	btg	3977,0,c	;volatile
   382  0000AC  D7D8               	goto	l1356
   383  0000AE                     __end_of_main:
   384                           	opt callstack 0
   385                           
   386 ;; *************** function _Tx_isFull *****************
   387 ;; Defined at:
   388 ;;		line 334 in file "mcc_generated_files/eusart1.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      unsigned char 
   395 ;; Registers used:
   396 ;;		wreg, status,2, status,0
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMRAM   BANK0   BANK1
   402 ;;      Params:         0       0       0
   403 ;;      Locals:         0       0       0
   404 ;;      Temps:          0       0       0
   405 ;;      Totals:         0       0       0
   406 ;;Total ram usage:        0 bytes
   407 ;; Hardware stack levels used:    1
   408 ;; Hardware stack levels required when called:    3
   409 ;; This function calls:
   410 ;;		Nothing
   411 ;; This function is called by:
   412 ;;		_main
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416                           	psect	text1
   417  000202                     __ptext1:
   418                           	opt callstack 0
   419  000202                     _Tx_isFull:
   420                           	opt callstack 27
   421                           
   422                           ;eusart1.c: 336: return ((Tx_Head+1)&0x0F)==Tx_Tail;
   423                           
   424                           ; BSR set to: 0
   425                           ;incstack = 0
   426  000202  2847               	incf	_Tx_Head,w,c
   427  000204  0B0F               	andlw	15
   428  000206  1845               	xorwf	_Tx_Tail,w,c
   429  000208  A4D8               	btfss	status,2,c
   430  00020A  D002               	goto	u320
   431  00020C  0E01               	movlw	1
   432  00020E  0012               	return	
   433  000210                     u320:
   434  000210  0E00               	movlw	0
   435  000212  0012               	return		;funcret
   436  000214                     __end_of_Tx_isFull:
   437                           	opt callstack 0
   438                           
   439 ;; *************** function _SYSTEM_Initialize *****************
   440 ;; Defined at:
   441 ;;		line 50 in file "mcc_generated_files/mcc.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg, status,2, status,0, cstack
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 3F/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMRAM   BANK0   BANK1
   455 ;;      Params:         0       0       0
   456 ;;      Locals:         0       0       0
   457 ;;      Temps:          0       0       0
   458 ;;      Totals:         0       0       0
   459 ;;Total ram usage:        0 bytes
   460 ;; Hardware stack levels used:    1
   461 ;; Hardware stack levels required when called:    5
   462 ;; This function calls:
   463 ;;		_EUSART1_Initialize
   464 ;;		_INTERRUPT_Initialize
   465 ;;		_OSCILLATOR_Initialize
   466 ;;		_PIN_MANAGER_Initialize
   467 ;;		_TMR0_Initialize
   468 ;; This function is called by:
   469 ;;		_main
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text2
   474  000194                     __ptext2:
   475                           	opt callstack 0
   476  000194                     _SYSTEM_Initialize:
   477                           	opt callstack 25
   478                           
   479                           ;mcc.c: 53: INTERRUPT_Initialize();
   480                           
   481                           ;incstack = 0
   482  000194  EC44  F001         	call	_INTERRUPT_Initialize	;wreg free
   483                           
   484                           ;mcc.c: 54: PIN_MANAGER_Initialize();
   485  000198  EC73  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   486                           
   487                           ; BSR set to: 15
   488                           ;mcc.c: 55: OSCILLATOR_Initialize();
   489  00019C  EC2C  F001         	call	_OSCILLATOR_Initialize	;wreg free
   490                           
   491                           ; BSR set to: 15
   492                           ;mcc.c: 56: TMR0_Initialize();
   493  0001A0  EC9C  F000         	call	_TMR0_Initialize	;wreg free
   494                           
   495                           ; BSR set to: 0
   496                           ;mcc.c: 57: EUSART1_Initialize();
   497  0001A4  EC57  F000         	call	_EUSART1_Initialize	;wreg free
   498                           
   499                           ; BSR set to: 0
   500  0001A8  0012               	return		;funcret
   501  0001AA                     __end_of_SYSTEM_Initialize:
   502                           	opt callstack 0
   503                           
   504 ;; *************** function _TMR0_Initialize *****************
   505 ;; Defined at:
   506 ;;		line 68 in file "mcc_generated_files/tmr0.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;		None
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, status,2, status,0, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : 3F/F
   517 ;;		On exit  : 3F/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1
   520 ;;      Params:         0       0       0
   521 ;;      Locals:         0       0       0
   522 ;;      Temps:          0       0       0
   523 ;;      Totals:         0       0       0
   524 ;;Total ram usage:        0 bytes
   525 ;; Hardware stack levels used:    1
   526 ;; Hardware stack levels required when called:    4
   527 ;; This function calls:
   528 ;;		_TMR0_SetInterruptHandler
   529 ;; This function is called by:
   530 ;;		_SYSTEM_Initialize
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text3
   535  000138                     __ptext3:
   536                           	opt callstack 0
   537  000138                     _TMR0_Initialize:
   538                           	opt callstack 25
   539                           
   540                           ; BSR set to: 15
   541                           ;tmr0.c: 73: TMR0H = 0x00;
   542                           
   543                           ; BSR set to: 0
   544                           ;incstack = 0
   545  000138  0E00               	movlw	0
   546  00013A  6ED7               	movwf	4055,c	;volatile
   547                           
   548                           ;tmr0.c: 76: TMR0L = 0xEC;
   549  00013C  0EEC               	movlw	236
   550  00013E  6ED6               	movwf	4054,c	;volatile
   551                           
   552                           ;tmr0.c: 80: timer0ReloadVal = 236;
   553  000140  0EEC               	movlw	236
   554  000142  6E58               	movwf	_timer0ReloadVal,c	;volatile
   555                           
   556                           ; BSR set to: 15
   557                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
   558  000144  94F2               	bcf	4082,2,c	;volatile
   559                           
   560                           ; BSR set to: 15
   561                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
   562  000146  8AF2               	bsf	4082,5,c	;volatile
   563                           
   564                           ; BSR set to: 15
   565                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
   566  000148  0E82               	movlw	low _TMR0_DefaultInterruptHandler
   567  00014A  0100               	movlb	0	; () banked
   568  00014C  6F60               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
   569  00014E  0E02               	movlw	high _TMR0_DefaultInterruptHandler
   570  000150  6F61               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
   571  000152  EC39  F001         	call	_TMR0_SetInterruptHandler	;wreg free
   572                           
   573                           ; BSR set to: 0
   574                           ;tmr0.c: 92: T0CON = 0xD6;
   575  000156  0ED6               	movlw	214
   576  000158  6ED5               	movwf	4053,c	;volatile
   577                           
   578                           ; BSR set to: 0
   579  00015A  0012               	return		;funcret
   580  00015C                     __end_of_TMR0_Initialize:
   581                           	opt callstack 0
   582                           
   583 ;; *************** function _TMR0_SetInterruptHandler *****************
   584 ;; Defined at:
   585 ;;		line 148 in file "mcc_generated_files/tmr0.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
   588 ;;		 -> TMR0_DefaultInterruptHandler(1), 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0
   595 ;; Tracked objects:
   596 ;;		On entry : 3F/0
   597 ;;		On exit  : 3F/0
   598 ;;		Unchanged: 3F/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1
   600 ;;      Params:         0       2       0
   601 ;;      Locals:         0       0       0
   602 ;;      Temps:          0       0       0
   603 ;;      Totals:         0       2       0
   604 ;;Total ram usage:        2 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; Hardware stack levels required when called:    3
   607 ;; This function calls:
   608 ;;		Nothing
   609 ;; This function is called by:
   610 ;;		_TMR0_Initialize
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text4
   615  000272                     __ptext4:
   616                           	opt callstack 0
   617  000272                     _TMR0_SetInterruptHandler:
   618                           	opt callstack 25
   619                           
   620                           ; BSR set to: 0
   621                           ;tmr0.c: 149: TMR0_InterruptHandler = InterruptHandler;
   622                           
   623                           ; BSR set to: 0
   624                           ;incstack = 0
   625  000272  C060  F056         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
   626  000276  C061  F057         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
   627                           
   628                           ; BSR set to: 0
   629  00027A  0012               	return		;funcret
   630  00027C                     __end_of_TMR0_SetInterruptHandler:
   631                           	opt callstack 0
   632                           
   633 ;; *************** function _PIN_MANAGER_Initialize *****************
   634 ;; Defined at:
   635 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, status,2
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 3F/F
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1
   649 ;;      Params:         0       0       0
   650 ;;      Locals:         0       0       0
   651 ;;      Temps:          0       0       0
   652 ;;      Totals:         0       0       0
   653 ;;Total ram usage:        0 bytes
   654 ;; Hardware stack levels used:    1
   655 ;; Hardware stack levels required when called:    3
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_SYSTEM_Initialize
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text5
   664  0000E6                     __ptext5:
   665                           	opt callstack 0
   666  0000E6                     _PIN_MANAGER_Initialize:
   667                           	opt callstack 26
   668                           
   669                           ;pin_manager.c: 60: LATA = 0x00;
   670                           
   671                           ; BSR set to: 0
   672                           ;incstack = 0
   673  0000E6  0E00               	movlw	0
   674  0000E8  6E89               	movwf	3977,c	;volatile
   675                           
   676                           ;pin_manager.c: 61: LATB = 0x00;
   677  0000EA  0E00               	movlw	0
   678  0000EC  6E8A               	movwf	3978,c	;volatile
   679                           
   680                           ;pin_manager.c: 62: LATC = 0x00;
   681  0000EE  0E00               	movlw	0
   682  0000F0  6E8B               	movwf	3979,c	;volatile
   683                           
   684                           ;pin_manager.c: 67: TRISA = 0xFE;
   685  0000F2  0EFE               	movlw	254
   686  0000F4  6E92               	movwf	3986,c	;volatile
   687                           
   688                           ;pin_manager.c: 68: TRISB = 0xFF;
   689  0000F6  6893               	setf	3987,c	;volatile
   690                           
   691                           ;pin_manager.c: 69: TRISC = 0xBF;
   692  0000F8  0EBF               	movlw	191
   693  0000FA  6E94               	movwf	3988,c	;volatile
   694                           
   695                           ;pin_manager.c: 74: ANSELC = 0x3C;
   696  0000FC  0E3C               	movlw	60
   697  0000FE  010F               	movlb	15	; () banked
   698  000100  6F3A               	movwf	58,b	;volatile
   699                           
   700                           ;pin_manager.c: 75: ANSELB = 0x3F;
   701  000102  0E3F               	movlw	63
   702  000104  6F39               	movwf	57,b	;volatile
   703                           
   704                           ;pin_manager.c: 76: ANSELA = 0x2E;
   705  000106  0E2E               	movlw	46
   706  000108  6F38               	movwf	56,b	;volatile
   707                           
   708                           ;pin_manager.c: 81: WPUB = 0x00;
   709  00010A  0E00               	movlw	0
   710  00010C  6E61               	movwf	3937,c	;volatile
   711                           
   712                           ; BSR set to: 15
   713                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 1;
   714  00010E  8EF1               	bsf	4081,7,c	;volatile
   715                           
   716                           ; BSR set to: 15
   717  000110  0012               	return		;funcret
   718  000112                     __end_of_PIN_MANAGER_Initialize:
   719                           	opt callstack 0
   720                           
   721 ;; *************** function _OSCILLATOR_Initialize *****************
   722 ;; Defined at:
   723 ;;		line 60 in file "mcc_generated_files/mcc.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, status,2
   732 ;; Tracked objects:
   733 ;;		On entry : 3F/F
   734 ;;		On exit  : 3F/F
   735 ;;		Unchanged: 3E/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1
   737 ;;      Params:         0       0       0
   738 ;;      Locals:         0       0       0
   739 ;;      Temps:          0       0       0
   740 ;;      Totals:         0       0       0
   741 ;;Total ram usage:        0 bytes
   742 ;; Hardware stack levels used:    1
   743 ;; Hardware stack levels required when called:    3
   744 ;; This function calls:
   745 ;;		Nothing
   746 ;; This function is called by:
   747 ;;		_SYSTEM_Initialize
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text6
   752  000258                     __ptext6:
   753                           	opt callstack 0
   754  000258                     _OSCILLATOR_Initialize:
   755                           	opt callstack 26
   756                           
   757                           ; BSR set to: 15
   758                           ;mcc.c: 63: OSCCON = 0x30;
   759                           
   760                           ; BSR set to: 15
   761                           ;incstack = 0
   762  000258  0E30               	movlw	48
   763  00025A  6ED3               	movwf	4051,c	;volatile
   764                           
   765                           ;mcc.c: 65: OSCCON2 = 0x04;
   766  00025C  0E04               	movlw	4
   767  00025E  6ED2               	movwf	4050,c	;volatile
   768                           
   769                           ;mcc.c: 67: OSCTUNE = 0x00;
   770  000260  0E00               	movlw	0
   771  000262  6E9B               	movwf	3995,c	;volatile
   772                           
   773                           ; BSR set to: 15
   774  000264  0012               	return		;funcret
   775  000266                     __end_of_OSCILLATOR_Initialize:
   776                           	opt callstack 0
   777                           
   778 ;; *************** function _INTERRUPT_Initialize *****************
   779 ;; Defined at:
   780 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;		None
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		None
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1
   794 ;;      Params:         0       0       0
   795 ;;      Locals:         0       0       0
   796 ;;      Temps:          0       0       0
   797 ;;      Totals:         0       0       0
   798 ;;Total ram usage:        0 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    3
   801 ;; This function calls:
   802 ;;		Nothing
   803 ;; This function is called by:
   804 ;;		_SYSTEM_Initialize
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text7
   809  000288                     __ptext7:
   810                           	opt callstack 0
   811  000288                     _INTERRUPT_Initialize:
   812                           	opt callstack 26
   813                           
   814                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
   815                           
   816                           ; BSR set to: 15
   817                           ;incstack = 0
   818  000288  9ED0               	bcf	4048,7,c	;volatile
   819  00028A  0012               	return		;funcret
   820  00028C                     __end_of_INTERRUPT_Initialize:
   821                           	opt callstack 0
   822                           
   823 ;; *************** function _EUSART1_Initialize *****************
   824 ;; Defined at:
   825 ;;		line 94 in file "mcc_generated_files/eusart1.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg, status,2
   834 ;; Tracked objects:
   835 ;;		On entry : 3F/0
   836 ;;		On exit  : 3F/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1
   839 ;;      Params:         0       0       0
   840 ;;      Locals:         0       0       0
   841 ;;      Temps:          0       0       0
   842 ;;      Totals:         0       0       0
   843 ;;Total ram usage:        0 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; Hardware stack levels required when called:    3
   846 ;; This function calls:
   847 ;;		Nothing
   848 ;; This function is called by:
   849 ;;		_SYSTEM_Initialize
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text8
   854  0000AE                     __ptext8:
   855                           	opt callstack 0
   856  0000AE                     _EUSART1_Initialize:
   857                           	opt callstack 26
   858                           
   859                           ; BSR set to: 0
   860                           ;eusart1.c: 97: PIE1bits.RC1IE = 0;
   861                           
   862                           ;incstack = 0
   863  0000AE  9A9D               	bcf	3997,5,c	;volatile
   864                           
   865                           ;eusart1.c: 99: PIE1bits.TX1IE = 0;
   866  0000B0  989D               	bcf	3997,4,c	;volatile
   867                           
   868                           ; BSR set to: 0
   869                           ;eusart1.c: 104: BAUDCON1 = 0x08;
   870  0000B2  0E08               	movlw	8
   871  0000B4  6EB8               	movwf	4024,c	;volatile
   872                           
   873                           ;eusart1.c: 107: RCSTA1 = 0x90;
   874  0000B6  0E90               	movlw	144
   875  0000B8  6EAB               	movwf	4011,c	;volatile
   876                           
   877                           ;eusart1.c: 110: TXSTA1 = 0x24;
   878  0000BA  0E24               	movlw	36
   879  0000BC  6EAC               	movwf	4012,c	;volatile
   880                           
   881                           ;eusart1.c: 113: SPBRG1 = 0x19;
   882  0000BE  0E19               	movlw	25
   883  0000C0  6EAF               	movwf	4015,c	;volatile
   884                           
   885                           ;eusart1.c: 116: SPBRGH1 = 0x00;
   886  0000C2  0E00               	movlw	0
   887  0000C4  6EB0               	movwf	4016,c	;volatile
   888                           
   889                           ;eusart1.c: 123: eusart1RxLastError.status = 0;
   890  0000C6  0E00               	movlw	0
   891  0000C8  6E49               	movwf	_eusart1RxLastError,c	;volatile
   892                           
   893                           ;eusart1.c: 126: eusart1TxHead = 0;
   894  0000CA  0E00               	movlw	0
   895  0000CC  6E4E               	movwf	_eusart1TxHead,c	;volatile
   896                           
   897                           ;eusart1.c: 127: eusart1TxTail = 0;
   898  0000CE  0E00               	movlw	0
   899  0000D0  6E4D               	movwf	_eusart1TxTail,c	;volatile
   900                           
   901                           ;eusart1.c: 128: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
   902  0000D2  0E08               	movlw	8
   903  0000D4  6F67               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
   904                           
   905                           ;eusart1.c: 130: eusart1RxHead = 0;
   906  0000D6  0E00               	movlw	0
   907  0000D8  6E4C               	movwf	_eusart1RxHead,c	;volatile
   908                           
   909                           ;eusart1.c: 131: eusart1RxTail = 0;
   910  0000DA  0E00               	movlw	0
   911  0000DC  6E4B               	movwf	_eusart1RxTail,c	;volatile
   912                           
   913                           ;eusart1.c: 132: eusart1RxCount = 0;
   914  0000DE  0E00               	movlw	0
   915  0000E0  6E4A               	movwf	_eusart1RxCount,c	;volatile
   916                           
   917                           ; BSR set to: 0
   918                           ;eusart1.c: 135: PIE1bits.RC1IE = 1;
   919  0000E2  8A9D               	bsf	3997,5,c	;volatile
   920                           
   921                           ; BSR set to: 0
   922  0000E4  0012               	return		;funcret
   923  0000E6                     __end_of_EUSART1_Initialize:
   924                           	opt callstack 0
   925                           
   926 ;; *************** function _Rx_isEmpty *****************
   927 ;; Defined at:
   928 ;;		line 319 in file "mcc_generated_files/eusart1.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;		None
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      unsigned char 
   935 ;; Registers used:
   936 ;;		wreg, status,2, status,0
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1
   942 ;;      Params:         0       0       0
   943 ;;      Locals:         0       0       0
   944 ;;      Temps:          0       0       0
   945 ;;      Totals:         0       0       0
   946 ;;Total ram usage:        0 bytes
   947 ;; Hardware stack levels used:    1
   948 ;; Hardware stack levels required when called:    3
   949 ;; This function calls:
   950 ;;		Nothing
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text9
   957  000238                     __ptext9:
   958                           	opt callstack 0
   959  000238                     _Rx_isEmpty:
   960                           	opt callstack 27
   961                           
   962                           ;eusart1.c: 321: return Rx_Head==Rx_Tail;
   963                           
   964                           ; BSR set to: 0
   965                           ;incstack = 0
   966  000238  5046               	movf	_Rx_Tail,w,c
   967  00023A  1848               	xorwf	_Rx_Head,w,c
   968  00023C  A4D8               	btfss	status,2,c
   969  00023E  D002               	goto	u300
   970  000240  0E01               	movlw	1
   971  000242  0012               	return	
   972  000244                     u300:
   973  000244  0E00               	movlw	0
   974  000246  0012               	return		;funcret
   975  000248                     __end_of_Rx_isEmpty:
   976                           	opt callstack 0
   977                           
   978 ;; *************** function _EUSART1_Write_task *****************
   979 ;; Defined at:
   980 ;;		line 209 in file "mcc_generated_files/eusart1.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMRAM   BANK0   BANK1
   994 ;;      Params:         0       0       0
   995 ;;      Locals:         0       0       0
   996 ;;      Temps:          0       0       0
   997 ;;      Totals:         0       0       0
   998 ;;Total ram usage:        0 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; Hardware stack levels required when called:    4
  1001 ;; This function calls:
  1002 ;;		_Tx_deQ
  1003 ;;		_Tx_isEmpty
  1004 ;; This function is called by:
  1005 ;;		_main
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text10
  1010  000214                     __ptext10:
  1011                           	opt callstack 0
  1012  000214                     _EUSART1_Write_task:
  1013                           	opt callstack 26
  1014                           
  1015                           ;eusart1.c: 210: if(!Tx_isEmpty())
  1016                           
  1017                           ;incstack = 0
  1018  000214  EC24  F001         	call	_Tx_isEmpty	;wreg free
  1019  000218  0900               	iorlw	0
  1020  00021A  A4D8               	btfss	status,2,c
  1021  00021C  0012               	return	
  1022                           
  1023                           ;eusart1.c: 211: TXREG1 = Tx_deQ();
  1024  00021E  ECD5  F000         	call	_Tx_deQ	;wreg free
  1025  000222  6EAD               	movwf	4013,c	;volatile
  1026  000224  0012               	return		;funcret
  1027  000226                     __end_of_EUSART1_Write_task:
  1028                           	opt callstack 0
  1029                           
  1030 ;; *************** function _Tx_isEmpty *****************
  1031 ;; Defined at:
  1032 ;;		line 338 in file "mcc_generated_files/eusart1.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      unsigned char 
  1039 ;; Registers used:
  1040 ;;		wreg, status,2, status,0
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1
  1046 ;;      Params:         0       0       0
  1047 ;;      Locals:         0       0       0
  1048 ;;      Temps:          0       0       0
  1049 ;;      Totals:         0       0       0
  1050 ;;Total ram usage:        0 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; Hardware stack levels required when called:    3
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_EUSART1_Write_task
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text11
  1061  000248                     __ptext11:
  1062                           	opt callstack 0
  1063  000248                     _Tx_isEmpty:
  1064                           	opt callstack 26
  1065                           
  1066                           ;eusart1.c: 340: return Tx_Head==Tx_Tail;
  1067                           
  1068                           ;incstack = 0
  1069  000248  5045               	movf	_Tx_Tail,w,c
  1070  00024A  1847               	xorwf	_Tx_Head,w,c
  1071  00024C  A4D8               	btfss	status,2,c
  1072  00024E  D002               	goto	u270
  1073  000250  0E01               	movlw	1
  1074  000252  0012               	return	
  1075  000254                     u270:
  1076  000254  0E00               	movlw	0
  1077  000256  0012               	return		;funcret
  1078  000258                     __end_of_Tx_isEmpty:
  1079                           	opt callstack 0
  1080                           
  1081 ;; *************** function _Tx_deQ *****************
  1082 ;; Defined at:
  1083 ;;		line 342 in file "mcc_generated_files/eusart1.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  data            1    6[COMRAM] unsigned char 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      unsigned char 
  1090 ;; Registers used:
  1091 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1
  1097 ;;      Params:         0       0       0
  1098 ;;      Locals:         1       0       0
  1099 ;;      Temps:          0       0       0
  1100 ;;      Totals:         1       0       0
  1101 ;;Total ram usage:        1 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; Hardware stack levels required when called:    3
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_EUSART1_Write_task
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text12
  1112  0001AA                     __ptext12:
  1113                           	opt callstack 0
  1114  0001AA                     _Tx_deQ:
  1115                           	opt callstack 26
  1116                           
  1117                           ;eusart1.c: 343: uint8_t data;;eusart1.c: 344: data = Tx_CQ[Tx_Tail++];
  1118                           
  1119                           ;incstack = 0
  1120  0001AA  5045               	movf	_Tx_Tail,w,c
  1121  0001AC  0F01               	addlw	low _Tx_CQ
  1122  0001AE  6ED9               	movwf	fsr2l,c
  1123  0001B0  6ADA               	clrf	fsr2h,c
  1124  0001B2  50DF               	movf	indf2,w,c
  1125  0001B4  6E55               	movwf	Tx_deQ@data,c
  1126  0001B6  2A45               	incf	_Tx_Tail,f,c
  1127                           
  1128                           ;eusart1.c: 345: Tx_Tail&=0x0F;
  1129  0001B8  0E0F               	movlw	15
  1130  0001BA  1645               	andwf	_Tx_Tail,f,c
  1131                           
  1132                           ;eusart1.c: 346: return data;
  1133  0001BC  5055               	movf	Tx_deQ@data,w,c
  1134  0001BE  0012               	return		;funcret
  1135  0001C0                     __end_of_Tx_deQ:
  1136                           	opt callstack 0
  1137                           
  1138 ;; *************** function _EUSART1_Write *****************
  1139 ;; Defined at:
  1140 ;;		line 183 in file "mcc_generated_files/eusart1.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;  txData          1    wreg     unsigned char 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  txData          1    0[BANK0 ] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : 3F/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1
  1154 ;;      Params:         0       0       0
  1155 ;;      Locals:         0       1       0
  1156 ;;      Temps:          0       0       0
  1157 ;;      Totals:         0       1       0
  1158 ;;Total ram usage:        1 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    4
  1161 ;; This function calls:
  1162 ;;		_Tx_enQ
  1163 ;; This function is called by:
  1164 ;;		_main
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text13
  1169  000266                     __ptext13:
  1170                           	opt callstack 0
  1171  000266                     _EUSART1_Write:
  1172                           	opt callstack 26
  1173                           
  1174                           ;incstack = 0
  1175                           ;EUSART1_Write@txData stored from wreg
  1176  000266  6F60               	movwf	EUSART1_Write@txData& (0+255),b
  1177                           
  1178                           ;eusart1.c: 207: Tx_enQ(txData);
  1179  000268  0100               	movlb	0	; () banked
  1180  00026A  5160               	movf	EUSART1_Write@txData& (0+255),w,b
  1181  00026C  ECE0  F000         	call	_Tx_enQ
  1182  000270  0012               	return		;funcret
  1183  000272                     __end_of_EUSART1_Write:
  1184                           	opt callstack 0
  1185                           
  1186 ;; *************** function _Tx_enQ *****************
  1187 ;; Defined at:
  1188 ;;		line 348 in file "mcc_generated_files/eusart1.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  data            1    wreg     unsigned char 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  data            1    6[COMRAM] unsigned char 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1197 ;; Tracked objects:
  1198 ;;		On entry : 3F/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1
  1202 ;;      Params:         0       0       0
  1203 ;;      Locals:         1       0       0
  1204 ;;      Temps:          0       0       0
  1205 ;;      Totals:         1       0       0
  1206 ;;Total ram usage:        1 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    3
  1209 ;; This function calls:
  1210 ;;		Nothing
  1211 ;; This function is called by:
  1212 ;;		_EUSART1_Write
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text14
  1217  0001C0                     __ptext14:
  1218                           	opt callstack 0
  1219  0001C0                     _Tx_enQ:
  1220                           	opt callstack 26
  1221                           
  1222                           ;incstack = 0
  1223                           ;Tx_enQ@data stored from wreg
  1224  0001C0  6E55               	movwf	Tx_enQ@data,c
  1225                           
  1226                           ;eusart1.c: 350: Tx_CQ[Tx_Head++] = data;
  1227  0001C2  5047               	movf	_Tx_Head,w,c
  1228  0001C4  0F01               	addlw	low _Tx_CQ
  1229  0001C6  6ED9               	movwf	fsr2l,c
  1230  0001C8  6ADA               	clrf	fsr2h,c
  1231  0001CA  C055  FFDF         	movff	Tx_enQ@data,indf2
  1232  0001CE  2A47               	incf	_Tx_Head,f,c
  1233                           
  1234                           ;eusart1.c: 351: Tx_Head &= 0x0F;
  1235  0001D0  0E0F               	movlw	15
  1236  0001D2  1647               	andwf	_Tx_Head,f,c
  1237  0001D4  0012               	return		;funcret
  1238  0001D6                     __end_of_Tx_enQ:
  1239                           	opt callstack 0
  1240                           
  1241 ;; *************** function _EUSART1_Read *****************
  1242 ;; Defined at:
  1243 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;		None
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;		None
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      unsigned char 
  1250 ;; Registers used:
  1251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1
  1257 ;;      Params:         0       0       0
  1258 ;;      Locals:         0       0       0
  1259 ;;      Temps:          0       0       0
  1260 ;;      Totals:         0       0       0
  1261 ;;Total ram usage:        0 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; Hardware stack levels required when called:    4
  1264 ;; This function calls:
  1265 ;;		_Rx_deQ
  1266 ;; This function is called by:
  1267 ;;		_main
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           	psect	text15
  1272  00027C                     __ptext15:
  1273                           	opt callstack 0
  1274  00027C                     _EUSART1_Read:
  1275                           	opt callstack 26
  1276                           
  1277                           ;eusart1.c: 180: return Rx_deQ();
  1278                           
  1279                           ;incstack = 0
  1280  00027C  ECEB  F000         	call	_Rx_deQ	;wreg free
  1281  000280  0012               	return		;funcret
  1282  000282                     __end_of_EUSART1_Read:
  1283                           	opt callstack 0
  1284                           
  1285 ;; *************** function _Rx_deQ *****************
  1286 ;; Defined at:
  1287 ;;		line 323 in file "mcc_generated_files/eusart1.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;		None
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  data            1    6[COMRAM] unsigned char 
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      unsigned char 
  1294 ;; Registers used:
  1295 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1
  1301 ;;      Params:         0       0       0
  1302 ;;      Locals:         1       0       0
  1303 ;;      Temps:          0       0       0
  1304 ;;      Totals:         1       0       0
  1305 ;;Total ram usage:        1 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    3
  1308 ;; This function calls:
  1309 ;;		Nothing
  1310 ;; This function is called by:
  1311 ;;		_EUSART1_Read
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text16
  1316  0001D6                     __ptext16:
  1317                           	opt callstack 0
  1318  0001D6                     _Rx_deQ:
  1319                           	opt callstack 26
  1320                           
  1321                           ;eusart1.c: 324: uint8_t data;;eusart1.c: 325: data = Rx_CQ[Rx_Tail++];
  1322                           
  1323                           ;incstack = 0
  1324  0001D6  5046               	movf	_Rx_Tail,w,c
  1325  0001D8  0F11               	addlw	low _Rx_CQ
  1326  0001DA  6ED9               	movwf	fsr2l,c
  1327  0001DC  6ADA               	clrf	fsr2h,c
  1328  0001DE  50DF               	movf	indf2,w,c
  1329  0001E0  6E55               	movwf	Rx_deQ@data,c
  1330  0001E2  2A46               	incf	_Rx_Tail,f,c
  1331                           
  1332                           ;eusart1.c: 326: Rx_Tail&=0x0F;
  1333  0001E4  0E0F               	movlw	15
  1334  0001E6  1646               	andwf	_Rx_Tail,f,c
  1335                           
  1336                           ;eusart1.c: 327: return data;
  1337  0001E8  5055               	movf	Rx_deQ@data,w,c
  1338  0001EA  0012               	return		;funcret
  1339  0001EC                     __end_of_Rx_deQ:
  1340                           	opt callstack 0
  1341                           
  1342 ;; *************** function _INTERRUPT_InterruptManager *****************
  1343 ;; Defined at:
  1344 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;		None
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;		None
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1
  1358 ;;      Params:         0       0       0
  1359 ;;      Locals:         0       0       0
  1360 ;;      Temps:          4       0       0
  1361 ;;      Totals:         4       0       0
  1362 ;;Total ram usage:        4 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:    2
  1365 ;; This function calls:
  1366 ;;		_EUSART1_Receive_ISR
  1367 ;;		_TMR0_ISR
  1368 ;; This function is called by:
  1369 ;;		Interrupt level 2
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	intcode
  1374  000008                     __pintcode:
  1375                           	opt callstack 0
  1376  000008                     _INTERRUPT_InterruptManager:
  1377                           	opt callstack 25
  1378                           
  1379                           ;incstack = 0
  1380  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1381  00000A  CFFA F051          	movff	pclath,??_INTERRUPT_InterruptManager
  1382  00000E  CFFB F052          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1383  000012  CFD9 F053          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  1384  000016  CFDA F054          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  1385                           
  1386                           ;interrupt_manager.c: 61: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  1387  00001A  BAF2               	btfsc	4082,5,c	;volatile
  1388  00001C  A4F2               	btfss	4082,2,c	;volatile
  1389  00001E  D003               	goto	i2l182
  1390                           
  1391                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR0_ISR();
  1392  000020  EC89  F000         	call	_TMR0_ISR	;wreg free
  1393                           
  1394                           ;interrupt_manager.c: 64: }
  1395  000024  D00B               	goto	i2l189
  1396  000026                     i2l182:
  1397                           
  1398                           ;interrupt_manager.c: 65: else if(INTCONbits.PEIE == 1)
  1399  000026  ACF2               	btfss	4082,6,c	;volatile
  1400  000028  D009               	goto	i2l189
  1401                           
  1402                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: if(PIE1bits.TX1IE == 1 && PIR1bits.
      +                          TX1IF == 1)
  1403  00002A  A89D               	btfss	3997,4,c	;volatile
  1404  00002C  D002               	goto	i2l185
  1405  00002E  B89E               	btfsc	3998,4,c	;volatile
  1406  000030  D005               	goto	i2l189
  1407  000032                     i2l185:
  1408                           
  1409                           ;interrupt_manager.c: 71: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  1410  000032  BA9D               	btfsc	3997,5,c	;volatile
  1411  000034  AA9E               	btfss	3998,5,c	;volatile
  1412  000036  D002               	goto	i2l189
  1413                           
  1414                           ;interrupt_manager.c: 72: {;interrupt_manager.c: 73: EUSART1_Receive_ISR();
  1415  000038  ECAE  F000         	call	_EUSART1_Receive_ISR	;wreg free
  1416  00003C                     i2l189:
  1417  00003C  C054  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  1418  000040  C053  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  1419  000044  C052  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1420  000048  C051  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1421  00004C  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1422  00004E  0011               	retfie		f
  1423  000050                     __end_of_INTERRUPT_InterruptManager:
  1424                           	opt callstack 0
  1425                           
  1426 ;; *************** function _TMR0_ISR *****************
  1427 ;; Defined at:
  1428 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1
  1442 ;;      Params:         0       0       0
  1443 ;;      Locals:         0       0       0
  1444 ;;      Temps:          0       0       0
  1445 ;;      Totals:         0       0       0
  1446 ;;Total ram usage:        0 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    1
  1449 ;; This function calls:
  1450 ;;		Absolute function
  1451 ;;		_TMR0_DefaultInterruptHandler
  1452 ;; This function is called by:
  1453 ;;		_INTERRUPT_InterruptManager
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text18
  1458  000112                     __ptext18:
  1459                           	opt callstack 0
  1460  000112                     _TMR0_ISR:
  1461                           	opt callstack 25
  1462                           
  1463                           ;tmr0.c: 134: INTCONbits.TMR0IF = 0;
  1464                           
  1465                           ;incstack = 0
  1466  000112  94F2               	bcf	4082,2,c	;volatile
  1467                           
  1468                           ;tmr0.c: 137: TMR0L = timer0ReloadVal;
  1469  000114  C058  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  1470                           
  1471                           ;tmr0.c: 139: if(TMR0_InterruptHandler)
  1472  000118  5056               	movf	_TMR0_InterruptHandler,w,c
  1473  00011A  1057               	iorwf	_TMR0_InterruptHandler+1,w,c
  1474  00011C  B4D8               	btfsc	status,2,c
  1475  00011E  0012               	return	
  1476                           
  1477                           ;tmr0.c: 140: {;tmr0.c: 141: TMR0_InterruptHandler();
  1478  000120  D801               	call	i2u13_48
  1479  000122  0012               	return	
  1480  000124                     i2u13_48:
  1481  000124  0005               	push	
  1482  000126  6EFA               	movwf	pclath,c
  1483  000128  5056               	movf	_TMR0_InterruptHandler,w,c
  1484  00012A  6EFD               	movwf	tosl,c
  1485  00012C  5057               	movf	_TMR0_InterruptHandler+1,w,c
  1486  00012E  6EFE               	movwf	tosh,c
  1487  000130  50F8               	movf	tblptru,w,c
  1488  000132  6EFF               	movwf	tosu,c
  1489  000134  50FA               	movf	pclath,w,c
  1490  000136  0012               	return		;indir
  1491  000138                     __end_of_TMR0_ISR:
  1492                           	opt callstack 0
  1493                           
  1494 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  1495 ;; Defined at:
  1496 ;;		line 152 in file "mcc_generated_files/tmr0.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;		None
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;		None
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		status,2, status,0
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1
  1510 ;;      Params:         0       0       0
  1511 ;;      Locals:         0       0       0
  1512 ;;      Temps:          0       0       0
  1513 ;;      Totals:         0       0       0
  1514 ;;Total ram usage:        0 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; This function calls:
  1517 ;;		Nothing
  1518 ;; This function is called by:
  1519 ;;		_TMR0_Initialize
  1520 ;;		_TMR0_ISR
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text19
  1525  000282                     __ptext19:
  1526                           	opt callstack 0
  1527  000282                     _TMR0_DefaultInterruptHandler:
  1528                           	opt callstack 25
  1529                           
  1530                           ;tmr0.c: 154: timecount++;
  1531                           
  1532                           ;incstack = 0
  1533  000282  4A39               	infsnz	_timecount,f,c
  1534  000284  2A3A               	incf	_timecount+1,f,c
  1535  000286  0012               	return		;funcret
  1536  000288                     __end_of_TMR0_DefaultInterruptHandler:
  1537                           	opt callstack 0
  1538                           
  1539 ;; *************** function _EUSART1_Receive_ISR *****************
  1540 ;; Defined at:
  1541 ;;		line 233 in file "mcc_generated_files/eusart1.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  c               1    1[COMRAM] unsigned char 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1
  1555 ;;      Params:         0       0       0
  1556 ;;      Locals:         1       0       0
  1557 ;;      Temps:          0       0       0
  1558 ;;      Totals:         1       0       0
  1559 ;;Total ram usage:        1 bytes
  1560 ;; Hardware stack levels used:    1
  1561 ;; Hardware stack levels required when called:    1
  1562 ;; This function calls:
  1563 ;;		_Rx_enQ
  1564 ;;		_Rx_isFull
  1565 ;; This function is called by:
  1566 ;;		_INTERRUPT_InterruptManager
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text20
  1571  00015C                     __ptext20:
  1572                           	opt callstack 0
  1573  00015C                     _EUSART1_Receive_ISR:
  1574                           	opt callstack 25
  1575                           
  1576                           ;eusart1.c: 255: if(1==RCSTA1bits.OERR){
  1577                           
  1578                           ;incstack = 0
  1579  00015C  A2AB               	btfss	4011,1,c	;volatile
  1580  00015E  D002               	goto	i2l108
  1581                           
  1582                           ;eusart1.c: 256: RCSTA1bits.CREN = 0;
  1583  000160  98AB               	bcf	4011,4,c	;volatile
  1584                           
  1585                           ;eusart1.c: 257: RCSTA1bits.CREN = 1;
  1586  000162  88AB               	bsf	4011,4,c	;volatile
  1587  000164                     i2l108:
  1588                           
  1589                           ;eusart1.c: 258: };eusart1.c: 259: uint8_t c = RCREG1;
  1590  000164  CFAE F050          	movff	4014,EUSART1_Receive_ISR@c	;volatile
  1591                           
  1592                           ;eusart1.c: 260: if(!Rx_isFull()){
  1593  000168  EC13  F001         	call	_Rx_isFull	;wreg free
  1594  00016C  0900               	iorlw	0
  1595  00016E  A4D8               	btfss	status,2,c
  1596  000170  0012               	return	
  1597                           
  1598                           ;eusart1.c: 261: Rx_enQ(c);
  1599  000172  5050               	movf	EUSART1_Receive_ISR@c,w,c
  1600  000174  ECF6  F000         	call	_Rx_enQ
  1601  000178  0012               	return		;funcret
  1602  00017A                     __end_of_EUSART1_Receive_ISR:
  1603                           	opt callstack 0
  1604                           
  1605 ;; *************** function _Rx_isFull *****************
  1606 ;; Defined at:
  1607 ;;		line 315 in file "mcc_generated_files/eusart1.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;		None
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;		None
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      unsigned char 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1
  1621 ;;      Params:         0       0       0
  1622 ;;      Locals:         0       0       0
  1623 ;;      Temps:          0       0       0
  1624 ;;      Totals:         0       0       0
  1625 ;;Total ram usage:        0 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; This function calls:
  1628 ;;		Nothing
  1629 ;; This function is called by:
  1630 ;;		_EUSART1_Receive_ISR
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text21
  1635  000226                     __ptext21:
  1636                           	opt callstack 0
  1637  000226                     _Rx_isFull:
  1638                           	opt callstack 25
  1639                           
  1640                           ;eusart1.c: 317: return ((Rx_Head+1)&0x0F)==Rx_Tail;
  1641                           
  1642                           ;incstack = 0
  1643  000226  2848               	incf	_Rx_Head,w,c
  1644  000228  0B0F               	andlw	15
  1645  00022A  1846               	xorwf	_Rx_Tail,w,c
  1646  00022C  A4D8               	btfss	status,2,c
  1647  00022E  D002               	goto	i2u3_40
  1648  000230  0E01               	movlw	1
  1649  000232  0012               	return	
  1650  000234                     i2u3_40:
  1651  000234  0E00               	movlw	0
  1652  000236  0012               	return		;funcret
  1653  000238                     __end_of_Rx_isFull:
  1654                           	opt callstack 0
  1655                           
  1656 ;; *************** function _Rx_enQ *****************
  1657 ;; Defined at:
  1658 ;;		line 329 in file "mcc_generated_files/eusart1.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;  data            1    wreg     unsigned char 
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;  data            1    0[COMRAM] unsigned char 
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      void 
  1665 ;; Registers used:
  1666 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMRAM   BANK0   BANK1
  1672 ;;      Params:         0       0       0
  1673 ;;      Locals:         1       0       0
  1674 ;;      Temps:          0       0       0
  1675 ;;      Totals:         1       0       0
  1676 ;;Total ram usage:        1 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_EUSART1_Receive_ISR
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text22
  1686  0001EC                     __ptext22:
  1687                           	opt callstack 0
  1688  0001EC                     _Rx_enQ:
  1689                           	opt callstack 25
  1690                           
  1691                           ;incstack = 0
  1692                           ;Rx_enQ@data stored from wreg
  1693  0001EC  6E4F               	movwf	Rx_enQ@data,c
  1694                           
  1695                           ;eusart1.c: 331: Rx_CQ[Rx_Head++] = data;
  1696  0001EE  5048               	movf	_Rx_Head,w,c
  1697  0001F0  0F11               	addlw	low _Rx_CQ
  1698  0001F2  6ED9               	movwf	fsr2l,c
  1699  0001F4  6ADA               	clrf	fsr2h,c
  1700  0001F6  C04F  FFDF         	movff	Rx_enQ@data,indf2
  1701  0001FA  2A48               	incf	_Rx_Head,f,c
  1702                           
  1703                           ;eusart1.c: 332: Rx_Head &= 0x0F;
  1704  0001FC  0E0F               	movlw	15
  1705  0001FE  1648               	andwf	_Rx_Head,f,c
  1706  000200  0012               	return		;funcret
  1707  000202                     __end_of_Rx_enQ:
  1708                           	opt callstack 0
  1709  0000                     
  1710                           	psect	text23
  1711  000000                     __ptext23:
  1712                           	opt callstack 0
  1713                           
  1714                           	psect	rparam
  1715  0000                     
  1716                           	psect	temp
  1717  000059                     btemp:
  1718                           	opt callstack 0
  1719  000059                     	ds	1
  1720  0000                     int$flags	set	btemp
  1721  0000                     wtemp8	set	btemp+1
  1722  0000                     ttemp5	set	btemp+1
  1723  0000                     ttemp6	set	btemp+4
  1724  0000                     ttemp7	set	btemp+8
  1725                           tosu	equ	0xFFF
  1726                           tosh	equ	0xFFE
  1727                           tosl	equ	0xFFD
  1728                           stkptr	equ	0xFFC
  1729                           pclatu	equ	0xFFB
  1730                           pclath	equ	0xFFA
  1731                           pcl	equ	0xFF9
  1732                           tblptru	equ	0xFF8
  1733                           tblptrh	equ	0xFF7
  1734                           tblptrl	equ	0xFF6
  1735                           tablat	equ	0xFF5
  1736                           prodh	equ	0xFF4
  1737                           prodl	equ	0xFF3
  1738                           indf0	equ	0xFEF
  1739                           postinc0	equ	0xFEE
  1740                           postdec0	equ	0xFED
  1741                           preinc0	equ	0xFEC
  1742                           plusw0	equ	0xFEB
  1743                           fsr0h	equ	0xFEA
  1744                           fsr0l	equ	0xFE9
  1745                           wreg	equ	0xFE8
  1746                           indf1	equ	0xFE7
  1747                           postinc1	equ	0xFE6
  1748                           postdec1	equ	0xFE5
  1749                           preinc1	equ	0xFE4
  1750                           plusw1	equ	0xFE3
  1751                           fsr1h	equ	0xFE2
  1752                           fsr1l	equ	0xFE1
  1753                           bsr	equ	0xFE0
  1754                           indf2	equ	0xFDF
  1755                           postinc2	equ	0xFDE
  1756                           postdec2	equ	0xFDD
  1757                           preinc2	equ	0xFDC
  1758                           plusw2	equ	0xFDB
  1759                           fsr2h	equ	0xFDA
  1760                           fsr2l	equ	0xFD9
  1761                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         78
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      7      88
    BANK0           160      7       8
    BANK1           256      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMRAM

    _EUSART1_Write_task->_Tx_deQ
    _EUSART1_Write->_Tx_enQ
    _EUSART1_Read->_Rx_deQ

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _EUSART1_Receive_ISR->_Rx_enQ

Critical Paths under _main in BANK0

    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     282
                                              2 BANK0      5     5      0
                       _EUSART1_Read
                      _EUSART1_Write
                 _EUSART1_Write_task
                         _Rx_isEmpty
                  _SYSTEM_Initialize
                          _Tx_isFull
 ---------------------------------------------------------------------------------
 (1) _Tx_isFull                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     121
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Rx_isEmpty                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write_task                                   0     0      0      23
                             _Tx_deQ
                         _Tx_isEmpty
 ---------------------------------------------------------------------------------
 (2) _Tx_isEmpty                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Tx_deQ                                               1     1      0      23
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      44
                                              0 BANK0      1     1      0
                             _Tx_enQ
 ---------------------------------------------------------------------------------
 (2) _Tx_enQ                                               1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0      23
                             _Rx_deQ
 ---------------------------------------------------------------------------------
 (2) _Rx_deQ                                               1     1      0      23
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0      30
                                              2 COMRAM     4     4      0
                _EUSART1_Receive_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  1     1      0      30
                                              1 COMRAM     1     1      0
                             _Rx_enQ
                          _Rx_isFull
 ---------------------------------------------------------------------------------
 (6) _Rx_isFull                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Rx_enQ                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
     _Rx_deQ
   _EUSART1_Write
     _Tx_enQ
   _EUSART1_Write_task
     _Tx_deQ
     _Tx_isEmpty
   _Rx_isEmpty
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _Tx_isFull

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     _Rx_enQ
     _Rx_isFull
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      7       8       4        5.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      7      58       1       93.6%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      60       6        0.0%
DATA                 0      0      60       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Apr 26 19:39:07 2020

                _eusart1TxBufferRemaining 0067                           _timer0ReloadVal 0058  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                             __CFG_LVP$ON 000000                                       l313 0066  
                                     l314 0088                              __CFG_CPB$OFF 000000  
                                     u300 0244                                       u320 0210  
                                     u270 0254                                       u360 00AA  
                            __CFG_CPD$OFF 000000                                       tosl 000FFD  
                                     wreg 000FE8                                      l1356 005E  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _WPUB 000F61  
                           _EUSART1_Write 0266                                      _main 0054  
                           ?_EUSART1_Read 004F                                      fsr2h 000FDA  
                                    indf2 000FDF                                      fsr2l 000FD9  
                                    btemp 0059                             __CFG_BORV$190 000000  
                                    start 0050                             __CFG_IESO$OFF 000000  
                            ___param_bank 000000                   __end_of_TMR0_Initialize 015C  
          ??_TMR0_DefaultInterruptHandler 004F            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 0266                     _eusart1RxStatusBuffer 0021  
                                   ?_main 004F                                     _T0CON 000FD5  
                          __CFG_DEBUG$OFF 000000                                     i2l108 0164  
                                   i2l182 0026                                     i2l185 0032  
                                   i2l189 003C                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
       __size_of_TMR0_SetInterruptHandler 000A                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                 ?_TMR0_SetInterruptHandler 0060  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                                     _Rx_CQ 0011  
                                   _Tx_CQ 0001                          __end_of_TMR0_ISR 0138  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                    EUSART1_Receive_ISR@c 0050                        __CFG_MCLRE$EXTMCLR 000000  
                          ?_EUSART1_Write 004F                                     pclath 000FFA  
                          ??_EUSART1_Read 0056                                     ttemp5 005A  
                                   ttemp6 005D                                     ttemp7 0061  
                                   status 000FD8                                     wtemp8 005A  
                          __CFG_HFOFST$ON 000000                            __CFG_PBADEN$ON 000000  
                         __initialization 017A                __end_of_EUSART1_Initialize 00E6  
                            __end_of_main 00AE               ?_INTERRUPT_InterruptManager 004F  
                                  ??_main 0062                             __activetblptr 000002  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAE                                    _RCSTA1 000FAB  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  i2u3_40 0234                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                            __CFG_XINST$OFF 000000  
                                  _Rx_deQ 01D6                                    _Rx_enQ 01EC  
                                  _Tx_deQ 01AA                                    _Tx_enQ 01C0  
                          __CFG_STVREN$ON 000000                                Rx_deQ@data 0055  
                        ?_TMR0_Initialize 004F                                    clear_0 0180  
                              Rx_enQ@data 004F                                _Rx_isEmpty 0238  
                                  tblptru 000FF8                        __size_of_Rx_isFull 0012  
                         ??_EUSART1_Write 0056  TMR0_SetInterruptHandler@InterruptHandler 0060  
                         _eusart1RxBuffer 0029                        __size_of_Tx_isFull 0012  
                              Tx_deQ@data 0055             __size_of_INTERRUPT_Initialize 0004  
                         _eusart1TxBuffer 0031                                _Tx_isEmpty 0248  
                       _SYSTEM_Initialize 0194                                __accesstop 0060  
                 __end_of__initialization 0186                                Tx_enQ@data 0055  
                      ?_SYSTEM_Initialize 004F                             ___rparam_used 000001  
                          __pcstackCOMRAM 004F                __end_of_EUSART1_Write_task 0226  
                     ??_SYSTEM_Initialize 0055                                 ?_TMR0_ISR 004F  
                    __end_of_EUSART1_Read 0282               __end_of_EUSART1_Receive_ISR 017A  
               __end_of_SYSTEM_Initialize 01AA                             _eusart1RxHead 004C  
                           _eusart1TxHead 004E                             _eusart1RxTail 004B  
                           _eusart1TxTail 004D         _EUSART1_TxDefaultInterruptHandler 0043  
                         __CFG_PLLCFG$OFF 000000                                __pnvCOMRAM 0056  
                      __CFG_CCP2MX$PORTC1 000000                                   ?_Rx_deQ 004F  
                                 ?_Rx_enQ 004F                                   ?_Tx_deQ 004F  
                                 ?_Tx_enQ 004F                         __end_of_Rx_isFull 0238  
        __end_of_TMR0_SetInterruptHandler 027C                                ??_TMR0_ISR 004F  
                      __CFG_CCP3MX$PORTB5 000000                         __end_of_Tx_isFull 0214  
                             ?_Rx_isEmpty 004F                                   _OSCCON2 000FD2  
                                 i2u13_48 0124                                   _OSCTUNE 000F9B  
                                 _SPBRGH1 000FB0                               ?_Tx_isEmpty 004F  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                                   _Rx_Head 0048  
                                 _Rx_Tail 0046                                   _Tx_Head 0047  
                                 _Tx_Tail 0045                           __size_of_Rx_deQ 0016  
                         __size_of_Rx_enQ 0016                           __size_of_Tx_deQ 0016  
                         __size_of_Tx_enQ 0016                                   __pcinit 017A  
                                 __ramtop 0200                                   __ptext0 0054  
                                 __ptext1 0202                                   __ptext2 0194  
                                 __ptext3 0138                                   __ptext4 0272  
                                 __ptext5 00E6                                   __ptext6 0258  
                                 __ptext7 0288                                   __ptext8 00AE  
                                 __ptext9 0238                     _OSCILLATOR_Initialize 0258  
                      _EUSART1_Initialize 00AE                  ??_PIN_MANAGER_Initialize 0055  
              __size_of_SYSTEM_Initialize 0016                      end_of_initialization 0186  
                     ?_EUSART1_Initialize 004F                             __Lmediumconst 0000  
             _EUSART1_OverrunErrorHandler 003D                       __size_of_Rx_isEmpty 0010  
                                 postinc0 000FEE                     __size_of_EUSART1_Read 0006  
                    ??_EUSART1_Initialize 0055                       __size_of_Tx_isEmpty 0010  
                _TMR0_SetInterruptHandler 0272                       EUSART1_Write@txData 0060  
                            _EUSART1_Read 027C              __end_of_INTERRUPT_Initialize 028C  
                          __end_of_Rx_deQ 01EC                            __end_of_Rx_enQ 0202  
                          __end_of_Tx_deQ 01C0                            __end_of_Tx_enQ 01D6  
                       __size_of_TMR0_ISR 0026                    ?_OSCILLATOR_Initialize 004F  
                     start_initialization 017A                        _EUSART1_Write_task 0214  
                __size_of_TMR0_Initialize 0024           __size_of_PIN_MANAGER_Initialize 002C  
                   __end_of_EUSART1_Write 0272                       ?_EUSART1_Write_task 004F  
                                ??_Rx_deQ 0055                                  ??_Rx_enQ 004F  
                                ??_Tx_deQ 0055                                  ??_Tx_enQ 0055  
                    ??_EUSART1_Write_task 0056                                 _Rx_isFull 0226  
                          _eusart1RxCount 004A                                 _Tx_isFull 0202  
                             __pbssCOMRAM 0001                              ??_Rx_isEmpty 0055  
       _EUSART1_RxDefaultInterruptHandler 0041                             __pcstackBANK0 0060  
                            ??_Tx_isEmpty 0055              __size_of_EUSART1_Receive_ISR 001E  
                   _TMR0_InterruptHandler 0056                                 __pnvBANK0 0067  
                  _PIN_MANAGER_Initialize 00E6                          main@oldtimecount 0065  
                               __pintcode 0008                        __end_of_Rx_isEmpty 0248  
                              ?_Rx_isFull 004F              ??_INTERRUPT_InterruptManager 0051  
                        __CFG_PRICLKEN$ON 000000                        __end_of_Tx_isEmpty 0258  
                              ?_Tx_isFull 004F                                  _BAUDCON1 000FB8  
                    _EUSART1_ErrorHandler 003B                      _INTERRUPT_Initialize 0288  
                       ??_TMR0_Initialize 0055                                  _LATAbits 000F89  
                                _PIE1bits 000F9D       __size_of_INTERRUPT_InterruptManager 0048  
              ??_TMR0_SetInterruptHandler 0055                                  _PIR1bits 000F9E  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _TMR0_ISR 0112                                 _timecount 0039  
                             _INTCON2bits 000FF1                     ?_INTERRUPT_Initialize 004F  
                                __Hrparam 0000                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTB5 000000  
                 ??_OSCILLATOR_Initialize 0055               __size_of_EUSART1_Initialize 0038  
                             ??_Rx_isFull 004F                               ??_Tx_isFull 0055  
                                __ptext10 0214                                  __ptext11 0248  
                                __ptext20 015C                                  __ptext12 01AA  
                                __ptext21 0226                                  __ptext13 0266  
                                __ptext22 01EC                                  __ptext14 01C0  
                                __ptext23 0000                                  __ptext15 027C  
                                __ptext16 01D6                                  __ptext18 0112  
                                __ptext19 0282                             __size_of_main 005A  
    __end_of_TMR0_DefaultInterruptHandler 0288     __size_of_TMR0_DefaultInterruptHandler 0006  
            _TMR0_DefaultInterruptHandler 0282                                  int$flags 0059  
      __end_of_INTERRUPT_InterruptManager 0050                _INTERRUPT_InterruptManager 0008  
                                main@data 0064               _EUSART1_FramingErrorHandler 003F  
                     _EUSART1_Receive_ISR 015C                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 0055                                  intlevel2 0000  
                    ?_EUSART1_Receive_ISR 004F                   ?_PIN_MANAGER_Initialize 004F  
                              _RCSTA1bits 000FAB             ?_TMR0_DefaultInterruptHandler 004F  
             __size_of_EUSART1_Write_task 0012                    __size_of_EUSART1_Write 000C  
                      _eusart1RxLastError 0049                           _TMR0_Initialize 0138  
                       __CFG_T3CMX$PORTC0 000000                     ??_EUSART1_Receive_ISR 0050  
          __end_of_PIN_MANAGER_Initialize 0112                         __CFG_FOSC$INTIO67 000000  
