

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Apr 26 21:55:51 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           ; Version 2.05
    42                           ; Generated 20/12/2018 GMT
    43                           ; 
    44                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F23K22 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76 ;; Function _EUSART2_DefaultFramingErrorHandler is unused but had its address taken
    77  0000                     
    78 ;; Function _EUSART2_DefaultOverrunErrorHandler is unused but had its address taken
    79  0000                     
    80 ;; Function _EUSART2_DefaultErrorHandler is unused but had its address taken
    81  0000                     
    82                           	psect	nvCOMRAM
    83  00004A                     __pnvCOMRAM:
    84                           	opt callstack 0
    85  00004A                     _TMR0_InterruptHandler:
    86                           	opt callstack 0
    87  00004A                     	ds	2
    88  00004C                     _EUSART2_ErrorHandler:
    89                           	opt callstack 0
    90  00004C                     	ds	2
    91  00004E                     _EUSART2_OverrunErrorHandler:
    92                           	opt callstack 0
    93  00004E                     	ds	2
    94  000050                     _EUSART2_FramingErrorHandler:
    95                           	opt callstack 0
    96  000050                     	ds	2
    97  000052                     _timer0ReloadVal:
    98                           	opt callstack 0
    99  000052                     	ds	1
   100  000053                     _eusart1TxBufferRemaining:
   101                           	opt callstack 0
   102  000053                     	ds	1
   103  0000                     _ANSELA	set	3896
   104  0000                     _ANSELB	set	3897
   105  0000                     _ANSELC	set	3898
   106  0000                     _T0CON	set	4053
   107  0000                     _TMR0L	set	4054
   108  0000                     _TMR0H	set	4055
   109  0000                     _PORTAbits	set	3968
   110  0000                     _LATAbits	set	3977
   111  0000                     _INTCON2bits	set	4081
   112  0000                     _WPUB	set	3937
   113  0000                     _TRISC	set	3988
   114  0000                     _TRISB	set	3987
   115  0000                     _TRISA	set	3986
   116  0000                     _LATC	set	3979
   117  0000                     _LATB	set	3978
   118  0000                     _LATA	set	3977
   119  0000                     _OSCTUNE	set	3995
   120  0000                     _OSCCON2	set	4050
   121  0000                     _OSCCON	set	4051
   122  0000                     _PIR1bits	set	3998
   123  0000                     _INTCONbits	set	4082
   124  0000                     _RCONbits	set	4048
   125  0000                     _RCREG1	set	4014
   126  0000                     _RCSTA1bits	set	4011
   127  0000                     _TXREG1	set	4013
   128  0000                     _SPBRGH1	set	4016
   129  0000                     _SPBRG1	set	4015
   130  0000                     _TXSTA1	set	4012
   131  0000                     _RCSTA1	set	4011
   132  0000                     _BAUDCON1	set	4024
   133  0000                     _PIE1bits	set	3997
   134  0000                     _SPBRGH2	set	3958
   135  0000                     _SPBRG2	set	3957
   136  0000                     _TXSTA2	set	3954
   137  0000                     _RCSTA2	set	3953
   138  0000                     _BAUDCON2	set	3952
   139                           
   140                           ; #config settings
   141  0000                     
   142                           	psect	cinit
   143  0001DA                     __pcinit:
   144                           	opt callstack 0
   145  0001DA                     start_initialization:
   146                           	opt callstack 0
   147  0001DA                     __initialization:
   148                           	opt callstack 0
   149                           
   150                           ; Clear objects allocated to BANK0 (32 bytes)
   151  0001DA  EE00  F060         	lfsr	0,__pbssBANK0
   152  0001DE  0E20               	movlw	32
   153  0001E0                     clear_0:
   154  0001E0  6AEE               	clrf	postinc0,c
   155  0001E2  06E8               	decf	wreg,f,c
   156  0001E4  E1FD               	bnz	clear_0
   157                           
   158                           ; Clear objects allocated to COMRAM (50 bytes)
   159  0001E6  EE00  F001         	lfsr	0,__pbssCOMRAM
   160  0001EA  0E32               	movlw	50
   161  0001EC                     clear_1:
   162  0001EC  6AEE               	clrf	postinc0,c
   163  0001EE  06E8               	decf	wreg,f,c
   164  0001F0  E1FD               	bnz	clear_1
   165  0001F2                     end_of_initialization:
   166                           	opt callstack 0
   167  0001F2                     __end_of__initialization:
   168                           	opt callstack 0
   169  0001F2  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   170  0001F4  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   171  0001F6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   172  0001F8  6EF8               	movwf	tblptru,c
   173  0001FA  0100               	movlb	0
   174  0001FC  EF2A  F000         	goto	_main	;jump to C main() function
   175                           
   176                           	psect	bssCOMRAM
   177  000001                     __pbssCOMRAM:
   178                           	opt callstack 0
   179  000001                     _eusart1RxStatusBuffer:
   180                           	opt callstack 0
   181  000001                     	ds	8
   182  000009                     _eusart1RxBuffer:
   183                           	opt callstack 0
   184  000009                     	ds	8
   185  000011                     _eusart1TxBuffer:
   186                           	opt callstack 0
   187  000011                     	ds	8
   188  000019                     _timeCounter:
   189                           	opt callstack 0
   190  000019                     	ds	4
   191  00001D                     _EUSART1_ErrorHandler:
   192                           	opt callstack 0
   193  00001D                     	ds	2
   194  00001F                     _EUSART1_OverrunErrorHandler:
   195                           	opt callstack 0
   196  00001F                     	ds	2
   197  000021                     _EUSART1_FramingErrorHandler:
   198                           	opt callstack 0
   199  000021                     	ds	2
   200  000023                     _EUSART1_RxDefaultInterruptHandler:
   201                           	opt callstack 0
   202  000023                     	ds	2
   203  000025                     _EUSART1_TxDefaultInterruptHandler:
   204                           	opt callstack 0
   205  000025                     	ds	2
   206  000027                     _CD4021Buffer:
   207                           	opt callstack 0
   208  000027                     	ds	1
   209  000028                     _Tx_Tail:
   210                           	opt callstack 0
   211  000028                     	ds	1
   212  000029                     _Rx_Tail:
   213                           	opt callstack 0
   214  000029                     	ds	1
   215  00002A                     _Tx_Head:
   216                           	opt callstack 0
   217  00002A                     	ds	1
   218  00002B                     _Rx_Head:
   219                           	opt callstack 0
   220  00002B                     	ds	1
   221  00002C                     _eusart1RxLastError:
   222                           	opt callstack 0
   223  00002C                     	ds	1
   224  00002D                     _eusart1RxCount:
   225                           	opt callstack 0
   226  00002D                     	ds	1
   227  00002E                     _eusart1RxTail:
   228                           	opt callstack 0
   229  00002E                     	ds	1
   230  00002F                     _eusart1RxHead:
   231                           	opt callstack 0
   232  00002F                     	ds	1
   233  000030                     _eusart1TxTail:
   234                           	opt callstack 0
   235  000030                     	ds	1
   236  000031                     _eusart1TxHead:
   237                           	opt callstack 0
   238  000031                     	ds	1
   239  000032                     _eusart2RxLastError:
   240                           	opt callstack 0
   241  000032                     	ds	1
   242                           
   243                           	psect	bssBANK0
   244  000060                     __pbssBANK0:
   245                           	opt callstack 0
   246  000060                     _Tx_CQ:
   247                           	opt callstack 0
   248  000060                     	ds	16
   249  000070                     _Rx_CQ:
   250                           	opt callstack 0
   251  000070                     	ds	16
   252                           
   253                           	psect	cstackCOMRAM
   254  000033                     __pcstackCOMRAM:
   255                           	opt callstack 0
   256  000033                     Rx_enQ@data:
   257                           	opt callstack 0
   258                           
   259                           ; 1 bytes @ 0x0
   260  000033                     	ds	1
   261  000034                     EUSART1_Receive_ISR@c:
   262                           	opt callstack 0
   263                           
   264                           ; 1 bytes @ 0x1
   265  000034                     	ds	1
   266  000035                     ??_INTERRUPT_InterruptManager:
   267                           
   268                           ; 1 bytes @ 0x2
   269  000035                     	ds	4
   270  000039                     Tx_deQ@data:
   271                           	opt callstack 0
   272  000039                     Tx_enQ@data:
   273                           	opt callstack 0
   274  000039                     CD4021Driver@temp:
   275                           	opt callstack 0
   276  000039                     EUSART2_SetFramingErrorHandler@interruptHandler:
   277                           	opt callstack 0
   278  000039                     EUSART2_SetOverrunErrorHandler@interruptHandler:
   279                           	opt callstack 0
   280  000039                     EUSART2_SetErrorHandler@interruptHandler:
   281                           	opt callstack 0
   282  000039                     TMR0_SetInterruptHandler@InterruptHandler:
   283                           	opt callstack 0
   284                           
   285                           ; 2 bytes @ 0x6
   286  000039                     	ds	1
   287  00003A                     EUSART1_Write@txData:
   288                           	opt callstack 0
   289  00003A                     CD4021Driver@i:
   290                           	opt callstack 0
   291                           
   292                           ; 2 bytes @ 0x7
   293  00003A                     	ds	1
   294  00003B                     
   295                           ; 1 bytes @ 0x8
   296  00003B                     	ds	1
   297  00003C                     ??_main:
   298                           
   299                           ; 1 bytes @ 0x9
   300  00003C                     	ds	8
   301  000044                     main@CD4021DriveTimeCounter:
   302                           	opt callstack 0
   303                           
   304                           ; 4 bytes @ 0x11
   305  000044                     	ds	4
   306  000048                     main@data_be:
   307                           	opt callstack 0
   308                           
   309                           ; 1 bytes @ 0x15
   310  000048                     	ds	1
   311  000049                     main@data:
   312                           	opt callstack 0
   313                           
   314                           ; 1 bytes @ 0x16
   315  000049                     	ds	1
   316                           
   317 ;;
   318 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   319 ;;
   320 ;; *************** function _main *****************
   321 ;; Defined at:
   322 ;;		line 51 in file "main.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;		None
   325 ;; Auto vars:     Size  Location     Type
   326 ;;  CD4021DriveT    4   17[COMRAM] unsigned long 
   327 ;;  CD4094DriveT    4    0        unsigned long 
   328 ;;  data            1   22[COMRAM] unsigned char 
   329 ;;  data_be         1   21[COMRAM] unsigned char 
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMRAM   BANK0   BANK1
   339 ;;      Params:         0       0       0
   340 ;;      Locals:        10       0       0
   341 ;;      Temps:          4       0       0
   342 ;;      Totals:        14       0       0
   343 ;;Total ram usage:       14 bytes
   344 ;; Hardware stack levels required when called:    6
   345 ;; This function calls:
   346 ;;		_CD4021Driver
   347 ;;		_CD4021Read
   348 ;;		_EUSART1_Write
   349 ;;		_EUSART1_Write_task
   350 ;;		_SYSTEM_Initialize
   351 ;;		_Tx_isFull
   352 ;; This function is called by:
   353 ;;		Startup code after reset
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	text0
   358  000054                     __ptext0:
   359                           	opt callstack 0
   360  000054                     _main:
   361                           	opt callstack 25
   362                           
   363                           ;main.c: 54: SYSTEM_Initialize();
   364                           
   365                           ;incstack = 0
   366  000054  EC33  F001         	call	_SYSTEM_Initialize	;wreg free
   367                           
   368                           ;main.c: 61: (INTCONbits.GIE = 1);
   369  000058  8EF2               	bsf	4082,7,c	;volatile
   370                           
   371                           ;main.c: 67: (INTCONbits.PEIE = 1);
   372  00005A  8CF2               	bsf	4082,6,c	;volatile
   373  00005C  0E00               	movlw	0
   374  00005E  6E44               	movwf	main@CD4021DriveTimeCounter,c
   375  000060  0E00               	movlw	0
   376  000062  6E45               	movwf	main@CD4021DriveTimeCounter+1,c
   377  000064  0E00               	movlw	0
   378  000066  6E46               	movwf	main@CD4021DriveTimeCounter+2,c
   379  000068  0E00               	movlw	0
   380  00006A  6E47               	movwf	main@CD4021DriveTimeCounter+3,c
   381  00006C                     l1547:
   382                           
   383                           ;main.c: 75: {;main.c: 77: if((timeCounter - CD4021DriveTimeCounter)>=500){
   384  00006C  5044               	movf	main@CD4021DriveTimeCounter,w,c
   385  00006E  5C19               	subwf	_timeCounter,w,c
   386  000070  6E3C               	movwf	??_main& (0+255),c
   387  000072  5045               	movf	main@CD4021DriveTimeCounter+1,w,c
   388  000074  581A               	subwfb	_timeCounter+1,w,c
   389  000076  6E3D               	movwf	(??_main+1)& (0+255),c
   390  000078  5046               	movf	main@CD4021DriveTimeCounter+2,w,c
   391  00007A  581B               	subwfb	_timeCounter+2,w,c
   392  00007C  6E3E               	movwf	(??_main+2)& (0+255),c
   393  00007E  5047               	movf	main@CD4021DriveTimeCounter+3,w,c
   394  000080  581C               	subwfb	_timeCounter+3,w,c
   395  000082  6E3F               	movwf	(??_main+3)& (0+255),c
   396  000084  503F               	movf	??_main+3,w,c
   397  000086  103E               	iorwf	??_main+2,w,c
   398  000088  E106               	bnz	u440
   399  00008A  0EF4               	movlw	244
   400  00008C  5C3C               	subwf	??_main,w,c
   401  00008E  0E01               	movlw	1
   402  000090  583D               	subwfb	??_main+1,w,c
   403  000092  A0D8               	btfss	status,0,c
   404  000094  D00A               	goto	l1553
   405  000096                     u440:
   406                           
   407                           ;main.c: 78: CD4021DriveTimeCounter = timeCounter;
   408  000096  C019  F044         	movff	_timeCounter,main@CD4021DriveTimeCounter
   409  00009A  C01A  F045         	movff	_timeCounter+1,main@CD4021DriveTimeCounter+1
   410  00009E  C01B  F046         	movff	_timeCounter+2,main@CD4021DriveTimeCounter+2
   411  0000A2  C01C  F047         	movff	_timeCounter+3,main@CD4021DriveTimeCounter+3
   412                           
   413                           ;main.c: 79: CD4021Driver();
   414  0000A6  EC69  F000         	call	_CD4021Driver	;wreg free
   415  0000AA                     l1553:
   416                           
   417                           ;main.c: 81: };main.c: 82: data = CD4021Read();
   418  0000AA  ECAD  F001         	call	_CD4021Read	;wreg free
   419  0000AE  6E49               	movwf	main@data,c
   420                           
   421                           ;main.c: 84: if(!Tx_isFull()&&(data_be != data)){
   422  0000B0  EC61  F001         	call	_Tx_isFull	;wreg free
   423  0000B4  0900               	iorlw	0
   424  0000B6  A4D8               	btfss	status,2,c
   425  0000B8  D007               	goto	l420
   426  0000BA  5049               	movf	main@data,w,c
   427  0000BC  1848               	xorwf	main@data_be,w,c
   428  0000BE  B4D8               	btfsc	status,2,c
   429  0000C0  D003               	goto	l420
   430                           
   431                           ;main.c: 86: EUSART1_Write(data);
   432  0000C2  5049               	movf	main@data,w,c
   433  0000C4  ECA6  F001         	call	_EUSART1_Write
   434  0000C8                     l420:
   435                           
   436                           ;main.c: 87: };main.c: 88: EUSART1_Write_task();
   437  0000C8  EC6A  F001         	call	_EUSART1_Write_task	;wreg free
   438                           
   439                           ;main.c: 89: data_be = data;
   440  0000CC  C049  F048         	movff	main@data,main@data_be
   441  0000D0  D7CD               	goto	l1547
   442  0000D2                     __end_of_main:
   443                           	opt callstack 0
   444                           
   445 ;; *************** function _Tx_isFull *****************
   446 ;; Defined at:
   447 ;;		line 334 in file "mcc_generated_files/eusart1.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;		None
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      unsigned char 
   454 ;; Registers used:
   455 ;;		wreg, status,2, status,0
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1
   461 ;;      Params:         0       0       0
   462 ;;      Locals:         0       0       0
   463 ;;      Temps:          0       0       0
   464 ;;      Totals:         0       0       0
   465 ;;Total ram usage:        0 bytes
   466 ;; Hardware stack levels used:    1
   467 ;; Hardware stack levels required when called:    3
   468 ;; This function calls:
   469 ;;		Nothing
   470 ;; This function is called by:
   471 ;;		_main
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           	psect	text1
   476  0002C2                     __ptext1:
   477                           	opt callstack 0
   478  0002C2                     _Tx_isFull:
   479                           	opt callstack 27
   480                           
   481                           ;eusart1.c: 336: return ((Tx_Head+1)&0x0F)==Tx_Tail;
   482                           
   483                           ;incstack = 0
   484  0002C2  282A               	incf	_Tx_Head,w,c
   485  0002C4  0B0F               	andlw	15
   486  0002C6  1828               	xorwf	_Tx_Tail,w,c
   487  0002C8  A4D8               	btfss	status,2,c
   488  0002CA  D002               	goto	u300
   489  0002CC  0E01               	movlw	1
   490  0002CE  0012               	return	
   491  0002D0                     u300:
   492  0002D0  0E00               	movlw	0
   493  0002D2  0012               	return		;funcret
   494  0002D4                     __end_of_Tx_isFull:
   495                           	opt callstack 0
   496                           
   497 ;; *************** function _SYSTEM_Initialize *****************
   498 ;; Defined at:
   499 ;;		line 50 in file "mcc_generated_files/mcc.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, status,2, status,0, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMRAM   BANK0   BANK1
   513 ;;      Params:         0       0       0
   514 ;;      Locals:         0       0       0
   515 ;;      Temps:          0       0       0
   516 ;;      Totals:         0       0       0
   517 ;;Total ram usage:        0 bytes
   518 ;; Hardware stack levels used:    1
   519 ;; Hardware stack levels required when called:    5
   520 ;; This function calls:
   521 ;;		_EUSART1_Initialize
   522 ;;		_EUSART2_Initialize
   523 ;;		_INTERRUPT_Initialize
   524 ;;		_OSCILLATOR_Initialize
   525 ;;		_PIN_MANAGER_Initialize
   526 ;;		_TMR0_Initialize
   527 ;; This function is called by:
   528 ;;		_main
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           	psect	text2
   533  000266                     __ptext2:
   534                           	opt callstack 0
   535  000266                     _SYSTEM_Initialize:
   536                           	opt callstack 25
   537                           
   538                           ;mcc.c: 53: INTERRUPT_Initialize();
   539                           
   540                           ;incstack = 0
   541  000266  ECAB  F001         	call	_INTERRUPT_Initialize	;wreg free
   542                           
   543                           ;mcc.c: 54: PIN_MANAGER_Initialize();
   544  00026A  ECD6  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   545                           
   546                           ; BSR set to: 15
   547                           ;mcc.c: 55: OSCILLATOR_Initialize();
   548  00026E  EC84  F001         	call	_OSCILLATOR_Initialize	;wreg free
   549                           
   550                           ; BSR set to: 15
   551                           ;mcc.c: 56: TMR0_Initialize();
   552  000272  EC13  F001         	call	_TMR0_Initialize	;wreg free
   553                           
   554                           ; BSR set to: 15
   555                           ;mcc.c: 57: EUSART1_Initialize();
   556  000276  ECBA  F000         	call	_EUSART1_Initialize	;wreg free
   557                           
   558                           ; BSR set to: 15
   559                           ;mcc.c: 58: EUSART2_Initialize();
   560  00027A  EC9B  F000         	call	_EUSART2_Initialize	;wreg free
   561  00027E  0012               	return		;funcret
   562  000280                     __end_of_SYSTEM_Initialize:
   563                           	opt callstack 0
   564                           
   565 ;; *************** function _TMR0_Initialize *****************
   566 ;; Defined at:
   567 ;;		line 67 in file "mcc_generated_files/tmr0.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;		None
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, status,2, status,0, cstack
   576 ;; Tracked objects:
   577 ;;		On entry : 3F/F
   578 ;;		On exit  : 3F/F
   579 ;;		Unchanged: 3E/0
   580 ;; Data sizes:     COMRAM   BANK0   BANK1
   581 ;;      Params:         0       0       0
   582 ;;      Locals:         0       0       0
   583 ;;      Temps:          0       0       0
   584 ;;      Totals:         0       0       0
   585 ;;Total ram usage:        0 bytes
   586 ;; Hardware stack levels used:    1
   587 ;; Hardware stack levels required when called:    4
   588 ;; This function calls:
   589 ;;		_TMR0_SetInterruptHandler
   590 ;; This function is called by:
   591 ;;		_SYSTEM_Initialize
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           	psect	text3
   596  000226                     __ptext3:
   597                           	opt callstack 0
   598  000226                     _TMR0_Initialize:
   599                           	opt callstack 25
   600                           
   601                           ; BSR set to: 15
   602                           ;tmr0.c: 72: TMR0H = 0x00;
   603                           
   604                           ;incstack = 0
   605  000226  0E00               	movlw	0
   606  000228  6ED7               	movwf	4055,c	;volatile
   607                           
   608                           ;tmr0.c: 75: TMR0L = 0x83;
   609  00022A  0E83               	movlw	131
   610  00022C  6ED6               	movwf	4054,c	;volatile
   611                           
   612                           ;tmr0.c: 79: timer0ReloadVal = 131;
   613  00022E  0E83               	movlw	131
   614  000230  6E52               	movwf	_timer0ReloadVal,c	;volatile
   615                           
   616                           ; BSR set to: 15
   617                           ;tmr0.c: 82: INTCONbits.TMR0IF = 0;
   618  000232  94F2               	bcf	4082,2,c	;volatile
   619                           
   620                           ; BSR set to: 15
   621                           ;tmr0.c: 85: INTCONbits.TMR0IE = 1;
   622  000234  8AF2               	bsf	4082,5,c	;volatile
   623                           
   624                           ; BSR set to: 15
   625                           ;tmr0.c: 88: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
   626  000236  0E16               	movlw	low _TMR0_DefaultInterruptHandler
   627  000238  6E39               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
   628  00023A  0E03               	movlw	high _TMR0_DefaultInterruptHandler
   629  00023C  6E3A               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
   630  00023E  EC92  F001         	call	_TMR0_SetInterruptHandler	;wreg free
   631                           
   632                           ; BSR set to: 15
   633                           ;tmr0.c: 91: T0CON = 0xD0;
   634  000242  0ED0               	movlw	208
   635  000244  6ED5               	movwf	4053,c	;volatile
   636                           
   637                           ; BSR set to: 15
   638  000246  0012               	return		;funcret
   639  000248                     __end_of_TMR0_Initialize:
   640                           	opt callstack 0
   641                           
   642 ;; *************** function _TMR0_SetInterruptHandler *****************
   643 ;; Defined at:
   644 ;;		line 147 in file "mcc_generated_files/tmr0.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
   647 ;;		 -> TMR0_DefaultInterruptHandler(1), 
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, status,2, status,0
   654 ;; Tracked objects:
   655 ;;		On entry : 3F/F
   656 ;;		On exit  : 3F/F
   657 ;;		Unchanged: 3E/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1
   659 ;;      Params:         2       0       0
   660 ;;      Locals:         0       0       0
   661 ;;      Temps:          0       0       0
   662 ;;      Totals:         2       0       0
   663 ;;Total ram usage:        2 bytes
   664 ;; Hardware stack levels used:    1
   665 ;; Hardware stack levels required when called:    3
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		_TMR0_Initialize
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text4
   674  000324                     __ptext4:
   675                           	opt callstack 0
   676  000324                     _TMR0_SetInterruptHandler:
   677                           	opt callstack 25
   678                           
   679                           ; BSR set to: 15
   680                           ;tmr0.c: 148: TMR0_InterruptHandler = InterruptHandler;
   681                           
   682                           ; BSR set to: 15
   683                           ;incstack = 0
   684  000324  C039  F04A         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
   685  000328  C03A  F04B         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
   686                           
   687                           ; BSR set to: 15
   688  00032C  0012               	return		;funcret
   689  00032E                     __end_of_TMR0_SetInterruptHandler:
   690                           	opt callstack 0
   691                           
   692 ;; *************** function _PIN_MANAGER_Initialize *****************
   693 ;; Defined at:
   694 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, status,2
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 3F/F
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1
   708 ;;      Params:         0       0       0
   709 ;;      Locals:         0       0       0
   710 ;;      Temps:          0       0       0
   711 ;;      Totals:         0       0       0
   712 ;;Total ram usage:        0 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    3
   715 ;; This function calls:
   716 ;;		Nothing
   717 ;; This function is called by:
   718 ;;		_SYSTEM_Initialize
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text5
   723  0001AC                     __ptext5:
   724                           	opt callstack 0
   725  0001AC                     _PIN_MANAGER_Initialize:
   726                           	opt callstack 26
   727                           
   728                           ;pin_manager.c: 60: LATA = 0x00;
   729                           
   730                           ; BSR set to: 15
   731                           ;incstack = 0
   732  0001AC  0E00               	movlw	0
   733  0001AE  6E89               	movwf	3977,c	;volatile
   734                           
   735                           ;pin_manager.c: 61: LATB = 0x00;
   736  0001B0  0E00               	movlw	0
   737  0001B2  6E8A               	movwf	3978,c	;volatile
   738                           
   739                           ;pin_manager.c: 62: LATC = 0x00;
   740  0001B4  0E00               	movlw	0
   741  0001B6  6E8B               	movwf	3979,c	;volatile
   742                           
   743                           ;pin_manager.c: 67: TRISA = 0xD7;
   744  0001B8  0ED7               	movlw	215
   745  0001BA  6E92               	movwf	3986,c	;volatile
   746                           
   747                           ;pin_manager.c: 68: TRISB = 0xBF;
   748  0001BC  0EBF               	movlw	191
   749  0001BE  6E93               	movwf	3987,c	;volatile
   750                           
   751                           ;pin_manager.c: 69: TRISC = 0xBF;
   752  0001C0  0EBF               	movlw	191
   753  0001C2  6E94               	movwf	3988,c	;volatile
   754                           
   755                           ;pin_manager.c: 74: ANSELC = 0x3C;
   756  0001C4  0E3C               	movlw	60
   757  0001C6  010F               	movlb	15	; () banked
   758  0001C8  6F3A               	movwf	58,b	;volatile
   759                           
   760                           ;pin_manager.c: 75: ANSELB = 0x3F;
   761  0001CA  0E3F               	movlw	63
   762  0001CC  6F39               	movwf	57,b	;volatile
   763                           
   764                           ;pin_manager.c: 76: ANSELA = 0x07;
   765  0001CE  0E07               	movlw	7
   766  0001D0  6F38               	movwf	56,b	;volatile
   767                           
   768                           ;pin_manager.c: 81: WPUB = 0x00;
   769  0001D2  0E00               	movlw	0
   770  0001D4  6E61               	movwf	3937,c	;volatile
   771                           
   772                           ; BSR set to: 15
   773                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 1;
   774  0001D6  8EF1               	bsf	4081,7,c	;volatile
   775                           
   776                           ; BSR set to: 15
   777  0001D8  0012               	return		;funcret
   778  0001DA                     __end_of_PIN_MANAGER_Initialize:
   779                           	opt callstack 0
   780                           
   781 ;; *************** function _OSCILLATOR_Initialize *****************
   782 ;; Defined at:
   783 ;;		line 61 in file "mcc_generated_files/mcc.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, status,2
   792 ;; Tracked objects:
   793 ;;		On entry : 3F/F
   794 ;;		On exit  : 3F/F
   795 ;;		Unchanged: 3E/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1
   797 ;;      Params:         0       0       0
   798 ;;      Locals:         0       0       0
   799 ;;      Temps:          0       0       0
   800 ;;      Totals:         0       0       0
   801 ;;Total ram usage:        0 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; Hardware stack levels required when called:    3
   804 ;; This function calls:
   805 ;;		Nothing
   806 ;; This function is called by:
   807 ;;		_SYSTEM_Initialize
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text6
   812  000308                     __ptext6:
   813                           	opt callstack 0
   814  000308                     _OSCILLATOR_Initialize:
   815                           	opt callstack 26
   816                           
   817                           ; BSR set to: 15
   818                           ;mcc.c: 64: OSCCON = 0x30;
   819                           
   820                           ; BSR set to: 15
   821                           ;incstack = 0
   822  000308  0E30               	movlw	48
   823  00030A  6ED3               	movwf	4051,c	;volatile
   824                           
   825                           ;mcc.c: 66: OSCCON2 = 0x04;
   826  00030C  0E04               	movlw	4
   827  00030E  6ED2               	movwf	4050,c	;volatile
   828                           
   829                           ;mcc.c: 68: OSCTUNE = 0x00;
   830  000310  0E00               	movlw	0
   831  000312  6E9B               	movwf	3995,c	;volatile
   832                           
   833                           ; BSR set to: 15
   834  000314  0012               	return		;funcret
   835  000316                     __end_of_OSCILLATOR_Initialize:
   836                           	opt callstack 0
   837                           
   838 ;; *************** function _INTERRUPT_Initialize *****************
   839 ;; Defined at:
   840 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		None
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1
   854 ;;      Params:         0       0       0
   855 ;;      Locals:         0       0       0
   856 ;;      Temps:          0       0       0
   857 ;;      Totals:         0       0       0
   858 ;;Total ram usage:        0 bytes
   859 ;; Hardware stack levels used:    1
   860 ;; Hardware stack levels required when called:    3
   861 ;; This function calls:
   862 ;;		Nothing
   863 ;; This function is called by:
   864 ;;		_SYSTEM_Initialize
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text7
   869  000356                     __ptext7:
   870                           	opt callstack 0
   871  000356                     _INTERRUPT_Initialize:
   872                           	opt callstack 26
   873                           
   874                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
   875                           
   876                           ; BSR set to: 15
   877                           ;incstack = 0
   878  000356  9ED0               	bcf	4048,7,c	;volatile
   879  000358  0012               	return		;funcret
   880  00035A                     __end_of_INTERRUPT_Initialize:
   881                           	opt callstack 0
   882                           
   883 ;; *************** function _EUSART2_Initialize *****************
   884 ;; Defined at:
   885 ;;		line 66 in file "mcc_generated_files/eusart2.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;		None
   888 ;; Auto vars:     Size  Location     Type
   889 ;;		None
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, status,2, status,0, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 3F/F
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1
   899 ;;      Params:         0       0       0
   900 ;;      Locals:         0       0       0
   901 ;;      Temps:          0       0       0
   902 ;;      Totals:         0       0       0
   903 ;;Total ram usage:        0 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; Hardware stack levels required when called:    4
   906 ;; This function calls:
   907 ;;		_EUSART2_SetErrorHandler
   908 ;;		_EUSART2_SetFramingErrorHandler
   909 ;;		_EUSART2_SetOverrunErrorHandler
   910 ;; This function is called by:
   911 ;;		_SYSTEM_Initialize
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text8
   916  000136                     __ptext8:
   917                           	opt callstack 0
   918  000136                     _EUSART2_Initialize:
   919                           	opt callstack 25
   920                           
   921                           ; BSR set to: 15
   922                           ;eusart2.c: 71: BAUDCON2 = 0x08;
   923                           
   924                           ;incstack = 0
   925  000136  0E08               	movlw	8
   926  000138  6E70               	movwf	3952,c	;volatile
   927                           
   928                           ;eusart2.c: 74: RCSTA2 = 0x90;
   929  00013A  0E90               	movlw	144
   930  00013C  6E71               	movwf	3953,c	;volatile
   931                           
   932                           ;eusart2.c: 77: TXSTA2 = 0x24;
   933  00013E  0E24               	movlw	36
   934  000140  6E72               	movwf	3954,c	;volatile
   935                           
   936                           ;eusart2.c: 80: SPBRG2 = 0x19;
   937  000142  0E19               	movlw	25
   938  000144  6E75               	movwf	3957,c	;volatile
   939                           
   940                           ;eusart2.c: 83: SPBRGH2 = 0x00;
   941  000146  0E00               	movlw	0
   942  000148  6E76               	movwf	3958,c	;volatile
   943                           
   944                           ; BSR set to: 15
   945                           ;eusart2.c: 86: EUSART2_SetFramingErrorHandler(EUSART2_DefaultFramingErrorHandler);
   946  00014A  0E00               	movlw	0
   947  00014C  6E39               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler,c
   948  00014E  0E00               	movlw	0
   949  000150  6E3A               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler+1,c
   950  000152  EC9C  F001         	call	_EUSART2_SetFramingErrorHandler	;wreg free
   951                           
   952                           ; BSR set to: 15
   953                           ;eusart2.c: 87: EUSART2_SetOverrunErrorHandler(EUSART2_DefaultOverrunErrorHandler);
   954  000156  0E00               	movlw	0
   955  000158  6E39               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler,c
   956  00015A  0E00               	movlw	0
   957  00015C  6E3A               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler+1,c
   958  00015E  EC97  F001         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
   959                           
   960                           ;eusart2.c: 88: EUSART2_SetErrorHandler(EUSART2_DefaultErrorHandler);
   961  000162  0E00               	movlw	0
   962  000164  6E39               	movwf	EUSART2_SetErrorHandler@interruptHandler,c
   963  000166  0E00               	movlw	0
   964  000168  6E3A               	movwf	EUSART2_SetErrorHandler@interruptHandler+1,c
   965  00016A  ECA1  F001         	call	_EUSART2_SetErrorHandler	;wreg free
   966                           
   967                           ;eusart2.c: 90: eusart2RxLastError.status = 0;
   968  00016E  0E00               	movlw	0
   969  000170  6E32               	movwf	_eusart2RxLastError,c	;volatile
   970  000172  0012               	return		;funcret
   971  000174                     __end_of_EUSART2_Initialize:
   972                           	opt callstack 0
   973                           
   974 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
   975 ;; Defined at:
   976 ;;		line 161 in file "mcc_generated_files/eusart2.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
   979 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
   980 ;; Auto vars:     Size  Location     Type
   981 ;;		None
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      void 
   984 ;; Registers used:
   985 ;;		wreg, status,2, status,0
   986 ;; Tracked objects:
   987 ;;		On entry : 0/F
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1
   991 ;;      Params:         2       0       0
   992 ;;      Locals:         0       0       0
   993 ;;      Temps:          0       0       0
   994 ;;      Totals:         2       0       0
   995 ;;Total ram usage:        2 bytes
   996 ;; Hardware stack levels used:    1
   997 ;; Hardware stack levels required when called:    3
   998 ;; This function calls:
   999 ;;		Nothing
  1000 ;; This function is called by:
  1001 ;;		_EUSART2_Initialize
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	text9
  1006  00032E                     __ptext9:
  1007                           	opt callstack 0
  1008  00032E                     _EUSART2_SetOverrunErrorHandler:
  1009                           	opt callstack 25
  1010                           
  1011                           ;eusart2.c: 162: EUSART2_OverrunErrorHandler = interruptHandler;
  1012                           
  1013                           ;incstack = 0
  1014  00032E  C039  F04E         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  1015  000332  C03A  F04F         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  1016  000336  0012               	return		;funcret
  1017  000338                     __end_of_EUSART2_SetOverrunErrorHandler:
  1018                           	opt callstack 0
  1019                           
  1020 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  1021 ;; Defined at:
  1022 ;;		line 157 in file "mcc_generated_files/eusart2.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  1025 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;		None
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, status,2, status,0
  1032 ;; Tracked objects:
  1033 ;;		On entry : 3F/F
  1034 ;;		On exit  : 3F/F
  1035 ;;		Unchanged: 3E/0
  1036 ;; Data sizes:     COMRAM   BANK0   BANK1
  1037 ;;      Params:         2       0       0
  1038 ;;      Locals:         0       0       0
  1039 ;;      Temps:          0       0       0
  1040 ;;      Totals:         2       0       0
  1041 ;;Total ram usage:        2 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; Hardware stack levels required when called:    3
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_EUSART2_Initialize
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text10
  1052  000338                     __ptext10:
  1053                           	opt callstack 0
  1054  000338                     _EUSART2_SetFramingErrorHandler:
  1055                           	opt callstack 25
  1056                           
  1057                           ; BSR set to: 15
  1058                           ;eusart2.c: 158: EUSART2_FramingErrorHandler = interruptHandler;
  1059                           
  1060                           ;incstack = 0
  1061  000338  C039  F050         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  1062  00033C  C03A  F051         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  1063                           
  1064                           ; BSR set to: 15
  1065  000340  0012               	return		;funcret
  1066  000342                     __end_of_EUSART2_SetFramingErrorHandler:
  1067                           	opt callstack 0
  1068                           
  1069 ;; *************** function _EUSART2_SetErrorHandler *****************
  1070 ;; Defined at:
  1071 ;;		line 165 in file "mcc_generated_files/eusart2.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  1074 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, status,2, status,0
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/F
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1
  1086 ;;      Params:         2       0       0
  1087 ;;      Locals:         0       0       0
  1088 ;;      Temps:          0       0       0
  1089 ;;      Totals:         2       0       0
  1090 ;;Total ram usage:        2 bytes
  1091 ;; Hardware stack levels used:    1
  1092 ;; Hardware stack levels required when called:    3
  1093 ;; This function calls:
  1094 ;;		Nothing
  1095 ;; This function is called by:
  1096 ;;		_EUSART2_Initialize
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text11
  1101  000342                     __ptext11:
  1102                           	opt callstack 0
  1103  000342                     _EUSART2_SetErrorHandler:
  1104                           	opt callstack 25
  1105                           
  1106                           ;eusart2.c: 166: EUSART2_ErrorHandler = interruptHandler;
  1107                           
  1108                           ; BSR set to: 15
  1109                           ;incstack = 0
  1110  000342  C039  F04C         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  1111  000346  C03A  F04D         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  1112  00034A  0012               	return		;funcret
  1113  00034C                     __end_of_EUSART2_SetErrorHandler:
  1114                           	opt callstack 0
  1115                           
  1116 ;; *************** function _EUSART1_Initialize *****************
  1117 ;; Defined at:
  1118 ;;		line 94 in file "mcc_generated_files/eusart1.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2
  1127 ;; Tracked objects:
  1128 ;;		On entry : 3F/F
  1129 ;;		On exit  : 3F/F
  1130 ;;		Unchanged: 3E/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1
  1132 ;;      Params:         0       0       0
  1133 ;;      Locals:         0       0       0
  1134 ;;      Temps:          0       0       0
  1135 ;;      Totals:         0       0       0
  1136 ;;Total ram usage:        0 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; Hardware stack levels required when called:    3
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		_SYSTEM_Initialize
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text12
  1147  000174                     __ptext12:
  1148                           	opt callstack 0
  1149  000174                     _EUSART1_Initialize:
  1150                           	opt callstack 26
  1151                           
  1152                           ; BSR set to: 15
  1153                           ;eusart1.c: 97: PIE1bits.RC1IE = 0;
  1154                           
  1155                           ;incstack = 0
  1156  000174  9A9D               	bcf	3997,5,c	;volatile
  1157                           
  1158                           ;eusart1.c: 99: PIE1bits.TX1IE = 0;
  1159  000176  989D               	bcf	3997,4,c	;volatile
  1160                           
  1161                           ; BSR set to: 15
  1162                           ;eusart1.c: 104: BAUDCON1 = 0x08;
  1163  000178  0E08               	movlw	8
  1164  00017A  6EB8               	movwf	4024,c	;volatile
  1165                           
  1166                           ;eusart1.c: 107: RCSTA1 = 0x90;
  1167  00017C  0E90               	movlw	144
  1168  00017E  6EAB               	movwf	4011,c	;volatile
  1169                           
  1170                           ;eusart1.c: 110: TXSTA1 = 0x24;
  1171  000180  0E24               	movlw	36
  1172  000182  6EAC               	movwf	4012,c	;volatile
  1173                           
  1174                           ;eusart1.c: 113: SPBRG1 = 0x19;
  1175  000184  0E19               	movlw	25
  1176  000186  6EAF               	movwf	4015,c	;volatile
  1177                           
  1178                           ;eusart1.c: 116: SPBRGH1 = 0x00;
  1179  000188  0E00               	movlw	0
  1180  00018A  6EB0               	movwf	4016,c	;volatile
  1181                           
  1182                           ;eusart1.c: 123: eusart1RxLastError.status = 0;
  1183  00018C  0E00               	movlw	0
  1184  00018E  6E2C               	movwf	_eusart1RxLastError,c	;volatile
  1185                           
  1186                           ;eusart1.c: 126: eusart1TxHead = 0;
  1187  000190  0E00               	movlw	0
  1188  000192  6E31               	movwf	_eusart1TxHead,c	;volatile
  1189                           
  1190                           ;eusart1.c: 127: eusart1TxTail = 0;
  1191  000194  0E00               	movlw	0
  1192  000196  6E30               	movwf	_eusart1TxTail,c	;volatile
  1193                           
  1194                           ;eusart1.c: 128: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1195  000198  0E08               	movlw	8
  1196  00019A  6E53               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1197                           
  1198                           ;eusart1.c: 130: eusart1RxHead = 0;
  1199  00019C  0E00               	movlw	0
  1200  00019E  6E2F               	movwf	_eusart1RxHead,c	;volatile
  1201                           
  1202                           ;eusart1.c: 131: eusart1RxTail = 0;
  1203  0001A0  0E00               	movlw	0
  1204  0001A2  6E2E               	movwf	_eusart1RxTail,c	;volatile
  1205                           
  1206                           ;eusart1.c: 132: eusart1RxCount = 0;
  1207  0001A4  0E00               	movlw	0
  1208  0001A6  6E2D               	movwf	_eusart1RxCount,c	;volatile
  1209                           
  1210                           ; BSR set to: 15
  1211                           ;eusart1.c: 135: PIE1bits.RC1IE = 1;
  1212  0001A8  8A9D               	bsf	3997,5,c	;volatile
  1213                           
  1214                           ; BSR set to: 15
  1215  0001AA  0012               	return		;funcret
  1216  0001AC                     __end_of_EUSART1_Initialize:
  1217                           	opt callstack 0
  1218                           
  1219 ;; *************** function _EUSART1_Write_task *****************
  1220 ;; Defined at:
  1221 ;;		line 209 in file "mcc_generated_files/eusart1.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;		None
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1
  1235 ;;      Params:         0       0       0
  1236 ;;      Locals:         0       0       0
  1237 ;;      Temps:          0       0       0
  1238 ;;      Totals:         0       0       0
  1239 ;;Total ram usage:        0 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; Hardware stack levels required when called:    4
  1242 ;; This function calls:
  1243 ;;		_Tx_deQ
  1244 ;;		_Tx_isEmpty
  1245 ;; This function is called by:
  1246 ;;		_main
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text13
  1251  0002D4                     __ptext13:
  1252                           	opt callstack 0
  1253  0002D4                     _EUSART1_Write_task:
  1254                           	opt callstack 26
  1255                           
  1256                           ;eusart1.c: 210: if(!Tx_isEmpty())
  1257                           
  1258                           ; BSR set to: 15
  1259                           ;incstack = 0
  1260  0002D4  EC7C  F001         	call	_Tx_isEmpty	;wreg free
  1261  0002D8  0900               	iorlw	0
  1262  0002DA  A4D8               	btfss	status,2,c
  1263  0002DC  0012               	return	
  1264                           
  1265                           ;eusart1.c: 211: TXREG1 = Tx_deQ();
  1266  0002DE  EC40  F001         	call	_Tx_deQ	;wreg free
  1267  0002E2  6EAD               	movwf	4013,c	;volatile
  1268  0002E4  0012               	return		;funcret
  1269  0002E6                     __end_of_EUSART1_Write_task:
  1270                           	opt callstack 0
  1271                           
  1272 ;; *************** function _Tx_isEmpty *****************
  1273 ;; Defined at:
  1274 ;;		line 338 in file "mcc_generated_files/eusart1.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      unsigned char 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2, status,0
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1
  1288 ;;      Params:         0       0       0
  1289 ;;      Locals:         0       0       0
  1290 ;;      Temps:          0       0       0
  1291 ;;      Totals:         0       0       0
  1292 ;;Total ram usage:        0 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    3
  1295 ;; This function calls:
  1296 ;;		Nothing
  1297 ;; This function is called by:
  1298 ;;		_EUSART1_Write_task
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text14
  1303  0002F8                     __ptext14:
  1304                           	opt callstack 0
  1305  0002F8                     _Tx_isEmpty:
  1306                           	opt callstack 26
  1307                           
  1308                           ;eusart1.c: 340: return Tx_Head==Tx_Tail;
  1309                           
  1310                           ;incstack = 0
  1311  0002F8  5028               	movf	_Tx_Tail,w,c
  1312  0002FA  182A               	xorwf	_Tx_Head,w,c
  1313  0002FC  A4D8               	btfss	status,2,c
  1314  0002FE  D002               	goto	u250
  1315  000300  0E01               	movlw	1
  1316  000302  0012               	return	
  1317  000304                     u250:
  1318  000304  0E00               	movlw	0
  1319  000306  0012               	return		;funcret
  1320  000308                     __end_of_Tx_isEmpty:
  1321                           	opt callstack 0
  1322                           
  1323 ;; *************** function _Tx_deQ *****************
  1324 ;; Defined at:
  1325 ;;		line 342 in file "mcc_generated_files/eusart1.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  data            1    6[COMRAM] unsigned char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      unsigned char 
  1332 ;; Registers used:
  1333 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1
  1339 ;;      Params:         0       0       0
  1340 ;;      Locals:         1       0       0
  1341 ;;      Temps:          0       0       0
  1342 ;;      Totals:         1       0       0
  1343 ;;Total ram usage:        1 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    3
  1346 ;; This function calls:
  1347 ;;		Nothing
  1348 ;; This function is called by:
  1349 ;;		_EUSART1_Write_task
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text15
  1354  000280                     __ptext15:
  1355                           	opt callstack 0
  1356  000280                     _Tx_deQ:
  1357                           	opt callstack 26
  1358                           
  1359                           ;eusart1.c: 343: uint8_t data;;eusart1.c: 344: data = Tx_CQ[Tx_Tail++];
  1360                           
  1361                           ;incstack = 0
  1362  000280  5028               	movf	_Tx_Tail,w,c
  1363  000282  0F60               	addlw	low _Tx_CQ
  1364  000284  6ED9               	movwf	fsr2l,c
  1365  000286  6ADA               	clrf	fsr2h,c
  1366  000288  50DF               	movf	indf2,w,c
  1367  00028A  6E39               	movwf	Tx_deQ@data,c
  1368  00028C  2A28               	incf	_Tx_Tail,f,c
  1369                           
  1370                           ;eusart1.c: 345: Tx_Tail&=0x0F;
  1371  00028E  0E0F               	movlw	15
  1372  000290  1628               	andwf	_Tx_Tail,f,c
  1373                           
  1374                           ;eusart1.c: 346: return data;
  1375  000292  5039               	movf	Tx_deQ@data,w,c
  1376  000294  0012               	return		;funcret
  1377  000296                     __end_of_Tx_deQ:
  1378                           	opt callstack 0
  1379                           
  1380 ;; *************** function _EUSART1_Write *****************
  1381 ;; Defined at:
  1382 ;;		line 183 in file "mcc_generated_files/eusart1.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  txData          1    wreg     unsigned char 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  txData          1    7[COMRAM] unsigned char 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1
  1396 ;;      Params:         0       0       0
  1397 ;;      Locals:         1       0       0
  1398 ;;      Temps:          0       0       0
  1399 ;;      Totals:         1       0       0
  1400 ;;Total ram usage:        1 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    4
  1403 ;; This function calls:
  1404 ;;		_Tx_enQ
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text16
  1411  00034C                     __ptext16:
  1412                           	opt callstack 0
  1413  00034C                     _EUSART1_Write:
  1414                           	opt callstack 26
  1415                           
  1416                           ;incstack = 0
  1417                           ;EUSART1_Write@txData stored from wreg
  1418  00034C  6E3A               	movwf	EUSART1_Write@txData,c
  1419                           
  1420                           ;eusart1.c: 207: Tx_enQ(txData);
  1421  00034E  503A               	movf	EUSART1_Write@txData,w,c
  1422  000350  EC4B  F001         	call	_Tx_enQ
  1423  000354  0012               	return		;funcret
  1424  000356                     __end_of_EUSART1_Write:
  1425                           	opt callstack 0
  1426                           
  1427 ;; *************** function _Tx_enQ *****************
  1428 ;; Defined at:
  1429 ;;		line 348 in file "mcc_generated_files/eusart1.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  data            1    wreg     unsigned char 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  data            1    6[COMRAM] unsigned char 
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1
  1443 ;;      Params:         0       0       0
  1444 ;;      Locals:         1       0       0
  1445 ;;      Temps:          0       0       0
  1446 ;;      Totals:         1       0       0
  1447 ;;Total ram usage:        1 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; Hardware stack levels required when called:    3
  1450 ;; This function calls:
  1451 ;;		Nothing
  1452 ;; This function is called by:
  1453 ;;		_EUSART1_Write
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text17
  1458  000296                     __ptext17:
  1459                           	opt callstack 0
  1460  000296                     _Tx_enQ:
  1461                           	opt callstack 26
  1462                           
  1463                           ;incstack = 0
  1464                           ;Tx_enQ@data stored from wreg
  1465  000296  6E39               	movwf	Tx_enQ@data,c
  1466                           
  1467                           ;eusart1.c: 350: Tx_CQ[Tx_Head++] = data;
  1468  000298  502A               	movf	_Tx_Head,w,c
  1469  00029A  0F60               	addlw	low _Tx_CQ
  1470  00029C  6ED9               	movwf	fsr2l,c
  1471  00029E  6ADA               	clrf	fsr2h,c
  1472  0002A0  C039  FFDF         	movff	Tx_enQ@data,indf2
  1473  0002A4  2A2A               	incf	_Tx_Head,f,c
  1474                           
  1475                           ;eusart1.c: 351: Tx_Head &= 0x0F;
  1476  0002A6  0E0F               	movlw	15
  1477  0002A8  162A               	andwf	_Tx_Head,f,c
  1478  0002AA  0012               	return		;funcret
  1479  0002AC                     __end_of_Tx_enQ:
  1480                           	opt callstack 0
  1481                           
  1482 ;; *************** function _CD4021Read *****************
  1483 ;; Defined at:
  1484 ;;		line 37 in file "mcc_generated_files/CD4021.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;		None
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      unsigned char 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1
  1498 ;;      Params:         0       0       0
  1499 ;;      Locals:         0       0       0
  1500 ;;      Temps:          0       0       0
  1501 ;;      Totals:         0       0       0
  1502 ;;Total ram usage:        0 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    3
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text18
  1513  00035A                     __ptext18:
  1514                           	opt callstack 0
  1515  00035A                     _CD4021Read:
  1516                           	opt callstack 27
  1517                           
  1518                           ;CD4021.c: 38: return CD4021Buffer;
  1519                           
  1520                           ;incstack = 0
  1521  00035A  5027               	movf	_CD4021Buffer,w,c
  1522  00035C  0012               	return		;funcret
  1523  00035E                     __end_of_CD4021Read:
  1524                           	opt callstack 0
  1525                           
  1526 ;; *************** function _CD4021Driver *****************
  1527 ;; Defined at:
  1528 ;;		line 13 in file "mcc_generated_files/CD4021.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;		None
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  i               2    7[COMRAM] int 
  1533 ;;  temp            1    6[COMRAM] unsigned char 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2, status,0
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1
  1543 ;;      Params:         0       0       0
  1544 ;;      Locals:         3       0       0
  1545 ;;      Temps:          0       0       0
  1546 ;;      Totals:         3       0       0
  1547 ;;Total ram usage:        3 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    3
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_main
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text19
  1558  0000D2                     __ptext19:
  1559                           	opt callstack 0
  1560  0000D2                     _CD4021Driver:
  1561                           	opt callstack 27
  1562                           
  1563                           ;CD4021.c: 14: uint8_t temp = 0;
  1564                           
  1565                           ;incstack = 0
  1566  0000D2  0E00               	movlw	0
  1567  0000D4  6E39               	movwf	CD4021Driver@temp,c
  1568                           
  1569                           ;CD4021.c: 15: LATAbits.LATA5 = 0;
  1570  0000D6  9A89               	bcf	3977,5,c	;volatile
  1571                           
  1572                           ;CD4021.c: 16: LATAbits.LATA3 = 0;
  1573  0000D8  9689               	bcf	3977,3,c	;volatile
  1574                           
  1575                           ;CD4021.c: 17: __nop();
  1576  0000DA  F000               	nop	
  1577                           
  1578                           ;CD4021.c: 18: __nop();
  1579  0000DC  F000               	nop	
  1580                           
  1581                           ;CD4021.c: 19: LATAbits.LATA3 = 1;
  1582  0000DE  8689               	bsf	3977,3,c	;volatile
  1583                           
  1584                           ;CD4021.c: 20: __nop();
  1585  0000E0  F000               	nop	
  1586                           
  1587                           ;CD4021.c: 21: __nop();
  1588  0000E2  F000               	nop	
  1589                           
  1590                           ;CD4021.c: 22: LATAbits.LATA3 = 0;
  1591  0000E4  9689               	bcf	3977,3,c	;volatile
  1592                           
  1593                           ;CD4021.c: 23: for(int i=0;i<8;i++){
  1594  0000E6  0E00               	movlw	0
  1595  0000E8  6E3B               	movwf	CD4021Driver@i+1,c
  1596  0000EA  0E00               	movlw	0
  1597  0000EC  6E3A               	movwf	CD4021Driver@i,c
  1598  0000EE                     l1497:
  1599                           
  1600                           ;CD4021.c: 24: temp =temp|(PORTAbits.RA4);
  1601  0000EE  A880               	btfss	3968,4,c	;volatile
  1602  0000F0  D002               	goto	u340
  1603  0000F2  0E01               	movlw	1
  1604  0000F4  D001               	goto	u346
  1605  0000F6                     u340:
  1606  0000F6  0E00               	movlw	0
  1607  0000F8                     u346:
  1608  0000F8  1039               	iorwf	CD4021Driver@temp,w,c
  1609  0000FA  6E39               	movwf	CD4021Driver@temp,c
  1610                           
  1611                           ;CD4021.c: 25: __nop();
  1612  0000FC  F000               	nop	
  1613                           
  1614                           ;CD4021.c: 26: __nop();
  1615  0000FE  F000               	nop	
  1616                           
  1617                           ;CD4021.c: 27: LATAbits.LATA5 = 1;
  1618  000100  8A89               	bsf	3977,5,c	;volatile
  1619                           
  1620                           ;CD4021.c: 28: __nop();
  1621  000102  F000               	nop	
  1622                           
  1623                           ;CD4021.c: 29: __nop();
  1624  000104  F000               	nop	
  1625                           
  1626                           ;CD4021.c: 30: LATAbits.LATA5 = 0;
  1627  000106  9A89               	bcf	3977,5,c	;volatile
  1628                           
  1629                           ;CD4021.c: 31: if(i<7)
  1630  000108  BE3B               	btfsc	CD4021Driver@i+1,7,c
  1631  00010A  D006               	goto	u350
  1632  00010C  503B               	movf	CD4021Driver@i+1,w,c
  1633  00010E  E106               	bnz	l1513
  1634  000110  0E07               	movlw	7
  1635  000112  5C3A               	subwf	CD4021Driver@i,w,c
  1636  000114  B0D8               	btfsc	status,0,c
  1637  000116  D002               	goto	l1513
  1638  000118                     u350:
  1639                           
  1640                           ;CD4021.c: 32: temp<<=1;
  1641  000118  90D8               	bcf	status,0,c
  1642  00011A  3639               	rlcf	CD4021Driver@temp,f,c
  1643  00011C                     l1513:
  1644  00011C  4A3A               	infsnz	CD4021Driver@i,f,c
  1645  00011E  2A3B               	incf	CD4021Driver@i+1,f,c
  1646  000120  BE3B               	btfsc	CD4021Driver@i+1,7,c
  1647  000122  D7E5               	goto	l1497
  1648  000124  503B               	movf	CD4021Driver@i+1,w,c
  1649  000126  E104               	bnz	u360
  1650  000128  0E08               	movlw	8
  1651  00012A  5C3A               	subwf	CD4021Driver@i,w,c
  1652  00012C  A0D8               	btfss	status,0,c
  1653  00012E  D7DF               	goto	l1497
  1654  000130                     u360:
  1655                           
  1656                           ;CD4021.c: 33: };CD4021.c: 34: CD4021Buffer = temp;
  1657  000130  C039  F027         	movff	CD4021Driver@temp,_CD4021Buffer
  1658                           
  1659                           ;CD4021.c: 35: return;
  1660  000134  0012               	return		;funcret
  1661  000136                     __end_of_CD4021Driver:
  1662                           	opt callstack 0
  1663                           
  1664 ;; *************** function _INTERRUPT_InterruptManager *****************
  1665 ;; Defined at:
  1666 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;		None
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;		None
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1
  1680 ;;      Params:         0       0       0
  1681 ;;      Locals:         0       0       0
  1682 ;;      Temps:          4       0       0
  1683 ;;      Totals:         4       0       0
  1684 ;;Total ram usage:        4 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; Hardware stack levels required when called:    2
  1687 ;; This function calls:
  1688 ;;		_EUSART1_Receive_ISR
  1689 ;;		_TMR0_ISR
  1690 ;; This function is called by:
  1691 ;;		Interrupt level 2
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           	psect	intcode
  1696  000008                     __pintcode:
  1697                           	opt callstack 0
  1698  000008                     _INTERRUPT_InterruptManager:
  1699                           	opt callstack 25
  1700                           
  1701                           ;incstack = 0
  1702  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1703  00000A  CFFA F035          	movff	pclath,??_INTERRUPT_InterruptManager
  1704  00000E  CFFB F036          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1705  000012  CFD9 F037          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  1706  000016  CFDA F038          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  1707                           
  1708                           ;interrupt_manager.c: 61: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  1709  00001A  BAF2               	btfsc	4082,5,c	;volatile
  1710  00001C  A4F2               	btfss	4082,2,c	;volatile
  1711  00001E  D003               	goto	i2l270
  1712                           
  1713                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR0_ISR();
  1714  000020  EC00  F001         	call	_TMR0_ISR	;wreg free
  1715                           
  1716                           ;interrupt_manager.c: 64: }
  1717  000024  D00B               	goto	i2l277
  1718  000026                     i2l270:
  1719                           
  1720                           ;interrupt_manager.c: 65: else if(INTCONbits.PEIE == 1)
  1721  000026  ACF2               	btfss	4082,6,c	;volatile
  1722  000028  D009               	goto	i2l277
  1723                           
  1724                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: if(PIE1bits.TX1IE == 1 && PIR1bits.
      +                          TX1IF == 1)
  1725  00002A  A89D               	btfss	3997,4,c	;volatile
  1726  00002C  D002               	goto	i2l273
  1727  00002E  B89E               	btfsc	3998,4,c	;volatile
  1728  000030  D005               	goto	i2l277
  1729  000032                     i2l273:
  1730                           
  1731                           ;interrupt_manager.c: 71: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  1732  000032  BA9D               	btfsc	3997,5,c	;volatile
  1733  000034  AA9E               	btfss	3998,5,c	;volatile
  1734  000036  D002               	goto	i2l277
  1735                           
  1736                           ;interrupt_manager.c: 72: {;interrupt_manager.c: 73: EUSART1_Receive_ISR();
  1737  000038  EC24  F001         	call	_EUSART1_Receive_ISR	;wreg free
  1738  00003C                     i2l277:
  1739  00003C  C038  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  1740  000040  C037  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  1741  000044  C036  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1742  000048  C035  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1743  00004C  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1744  00004E  0011               	retfie		f
  1745  000050                     __end_of_INTERRUPT_InterruptManager:
  1746                           	opt callstack 0
  1747                           
  1748 ;; *************** function _TMR0_ISR *****************
  1749 ;; Defined at:
  1750 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;		None
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMRAM   BANK0   BANK1
  1764 ;;      Params:         0       0       0
  1765 ;;      Locals:         0       0       0
  1766 ;;      Temps:          0       0       0
  1767 ;;      Totals:         0       0       0
  1768 ;;Total ram usage:        0 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:    1
  1771 ;; This function calls:
  1772 ;;		Absolute function
  1773 ;;		_TMR0_DefaultInterruptHandler
  1774 ;; This function is called by:
  1775 ;;		_INTERRUPT_InterruptManager
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text21
  1780  000200                     __ptext21:
  1781                           	opt callstack 0
  1782  000200                     _TMR0_ISR:
  1783                           	opt callstack 25
  1784                           
  1785                           ;tmr0.c: 133: INTCONbits.TMR0IF = 0;
  1786                           
  1787                           ;incstack = 0
  1788  000200  94F2               	bcf	4082,2,c	;volatile
  1789                           
  1790                           ;tmr0.c: 136: TMR0L = timer0ReloadVal;
  1791  000202  C052  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  1792                           
  1793                           ;tmr0.c: 138: if(TMR0_InterruptHandler)
  1794  000206  504A               	movf	_TMR0_InterruptHandler,w,c
  1795  000208  104B               	iorwf	_TMR0_InterruptHandler+1,w,c
  1796  00020A  B4D8               	btfsc	status,2,c
  1797  00020C  0012               	return	
  1798                           
  1799                           ;tmr0.c: 139: {;tmr0.c: 140: TMR0_InterruptHandler();
  1800  00020E  D801               	call	i2u33_48
  1801  000210  0012               	return	
  1802  000212                     i2u33_48:
  1803  000212  0005               	push	
  1804  000214  6EFA               	movwf	pclath,c
  1805  000216  504A               	movf	_TMR0_InterruptHandler,w,c
  1806  000218  6EFD               	movwf	tosl,c
  1807  00021A  504B               	movf	_TMR0_InterruptHandler+1,w,c
  1808  00021C  6EFE               	movwf	tosh,c
  1809  00021E  50F8               	movf	tblptru,w,c
  1810  000220  6EFF               	movwf	tosu,c
  1811  000222  50FA               	movf	pclath,w,c
  1812  000224  0012               	return		;indir
  1813  000226                     __end_of_TMR0_ISR:
  1814                           	opt callstack 0
  1815                           
  1816 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  1817 ;; Defined at:
  1818 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;		None
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;		None
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      void 
  1825 ;; Registers used:
  1826 ;;		wreg, status,2, status,0
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1
  1832 ;;      Params:         0       0       0
  1833 ;;      Locals:         0       0       0
  1834 ;;      Temps:          0       0       0
  1835 ;;      Totals:         0       0       0
  1836 ;;Total ram usage:        0 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_TMR0_Initialize
  1842 ;;		_TMR0_ISR
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	text22
  1847  000316                     __ptext22:
  1848                           	opt callstack 0
  1849  000316                     _TMR0_DefaultInterruptHandler:
  1850                           	opt callstack 25
  1851                           
  1852                           ;tmr0.c: 152: timeCounter++;
  1853                           
  1854                           ;incstack = 0
  1855  000316  0E01               	movlw	1
  1856  000318  2619               	addwf	_timeCounter,f,c
  1857  00031A  0E00               	movlw	0
  1858  00031C  221A               	addwfc	_timeCounter+1,f,c
  1859  00031E  221B               	addwfc	_timeCounter+2,f,c
  1860  000320  221C               	addwfc	_timeCounter+3,f,c
  1861  000322  0012               	return		;funcret
  1862  000324                     __end_of_TMR0_DefaultInterruptHandler:
  1863                           	opt callstack 0
  1864                           
  1865 ;; *************** function _EUSART1_Receive_ISR *****************
  1866 ;; Defined at:
  1867 ;;		line 233 in file "mcc_generated_files/eusart1.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;		None
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  c               1    1[COMRAM] unsigned char 
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      void 
  1874 ;; Registers used:
  1875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMRAM   BANK0   BANK1
  1881 ;;      Params:         0       0       0
  1882 ;;      Locals:         1       0       0
  1883 ;;      Temps:          0       0       0
  1884 ;;      Totals:         1       0       0
  1885 ;;Total ram usage:        1 bytes
  1886 ;; Hardware stack levels used:    1
  1887 ;; Hardware stack levels required when called:    1
  1888 ;; This function calls:
  1889 ;;		_Rx_enQ
  1890 ;;		_Rx_isFull
  1891 ;; This function is called by:
  1892 ;;		_INTERRUPT_InterruptManager
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text23
  1897  000248                     __ptext23:
  1898                           	opt callstack 0
  1899  000248                     _EUSART1_Receive_ISR:
  1900                           	opt callstack 25
  1901                           
  1902                           ;eusart1.c: 255: if(1==RCSTA1bits.OERR){
  1903                           
  1904                           ;incstack = 0
  1905  000248  A2AB               	btfss	4011,1,c	;volatile
  1906  00024A  D002               	goto	i2l196
  1907                           
  1908                           ;eusart1.c: 256: RCSTA1bits.CREN = 0;
  1909  00024C  98AB               	bcf	4011,4,c	;volatile
  1910                           
  1911                           ;eusart1.c: 257: RCSTA1bits.CREN = 1;
  1912  00024E  88AB               	bsf	4011,4,c	;volatile
  1913  000250                     i2l196:
  1914                           
  1915                           ;eusart1.c: 258: };eusart1.c: 259: uint8_t c = RCREG1;
  1916  000250  CFAE F034          	movff	4014,EUSART1_Receive_ISR@c	;volatile
  1917                           
  1918                           ;eusart1.c: 260: if(!Rx_isFull()){
  1919  000254  EC73  F001         	call	_Rx_isFull	;wreg free
  1920  000258  0900               	iorlw	0
  1921  00025A  A4D8               	btfss	status,2,c
  1922  00025C  0012               	return	
  1923                           
  1924                           ;eusart1.c: 261: Rx_enQ(c);
  1925  00025E  5034               	movf	EUSART1_Receive_ISR@c,w,c
  1926  000260  EC56  F001         	call	_Rx_enQ
  1927  000264  0012               	return		;funcret
  1928  000266                     __end_of_EUSART1_Receive_ISR:
  1929                           	opt callstack 0
  1930                           
  1931 ;; *************** function _Rx_isFull *****************
  1932 ;; Defined at:
  1933 ;;		line 315 in file "mcc_generated_files/eusart1.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;		None
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;		None
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      unsigned char 
  1940 ;; Registers used:
  1941 ;;		wreg, status,2, status,0
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1
  1947 ;;      Params:         0       0       0
  1948 ;;      Locals:         0       0       0
  1949 ;;      Temps:          0       0       0
  1950 ;;      Totals:         0       0       0
  1951 ;;Total ram usage:        0 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; This function calls:
  1954 ;;		Nothing
  1955 ;; This function is called by:
  1956 ;;		_EUSART1_Receive_ISR
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text24
  1961  0002E6                     __ptext24:
  1962                           	opt callstack 0
  1963  0002E6                     _Rx_isFull:
  1964                           	opt callstack 25
  1965                           
  1966                           ;eusart1.c: 317: return ((Rx_Head+1)&0x0F)==Rx_Tail;
  1967                           
  1968                           ;incstack = 0
  1969  0002E6  282B               	incf	_Rx_Head,w,c
  1970  0002E8  0B0F               	andlw	15
  1971  0002EA  1829               	xorwf	_Rx_Tail,w,c
  1972  0002EC  A4D8               	btfss	status,2,c
  1973  0002EE  D002               	goto	i2u3_40
  1974  0002F0  0E01               	movlw	1
  1975  0002F2  0012               	return	
  1976  0002F4                     i2u3_40:
  1977  0002F4  0E00               	movlw	0
  1978  0002F6  0012               	return		;funcret
  1979  0002F8                     __end_of_Rx_isFull:
  1980                           	opt callstack 0
  1981                           
  1982 ;; *************** function _Rx_enQ *****************
  1983 ;; Defined at:
  1984 ;;		line 329 in file "mcc_generated_files/eusart1.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  data            1    wreg     unsigned char 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  data            1    0[COMRAM] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1
  1998 ;;      Params:         0       0       0
  1999 ;;      Locals:         1       0       0
  2000 ;;      Temps:          0       0       0
  2001 ;;      Totals:         1       0       0
  2002 ;;Total ram usage:        1 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_EUSART1_Receive_ISR
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text25
  2012  0002AC                     __ptext25:
  2013                           	opt callstack 0
  2014  0002AC                     _Rx_enQ:
  2015                           	opt callstack 25
  2016                           
  2017                           ;incstack = 0
  2018                           ;Rx_enQ@data stored from wreg
  2019  0002AC  6E33               	movwf	Rx_enQ@data,c
  2020                           
  2021                           ;eusart1.c: 331: Rx_CQ[Rx_Head++] = data;
  2022  0002AE  502B               	movf	_Rx_Head,w,c
  2023  0002B0  0F70               	addlw	low _Rx_CQ
  2024  0002B2  6ED9               	movwf	fsr2l,c
  2025  0002B4  6ADA               	clrf	fsr2h,c
  2026  0002B6  C033  FFDF         	movff	Rx_enQ@data,indf2
  2027  0002BA  2A2B               	incf	_Rx_Head,f,c
  2028                           
  2029                           ;eusart1.c: 332: Rx_Head &= 0x0F;
  2030  0002BC  0E0F               	movlw	15
  2031  0002BE  162B               	andwf	_Rx_Head,f,c
  2032  0002C0  0012               	return		;funcret
  2033  0002C2                     __end_of_Rx_enQ:
  2034                           	opt callstack 0
  2035  0000                     
  2036                           	psect	text26
  2037  000000                     __ptext26:
  2038                           	opt callstack 0
  2039                           
  2040                           	psect	rparam
  2041  0000                     
  2042                           	psect	temp
  2043  000054                     btemp:
  2044                           	opt callstack 0
  2045  000054                     	ds	1
  2046  0000                     int$flags	set	btemp
  2047  0000                     wtemp8	set	btemp+1
  2048  0000                     ttemp5	set	btemp+1
  2049  0000                     ttemp6	set	btemp+4
  2050  0000                     ttemp7	set	btemp+8
  2051                           tosu	equ	0xFFF
  2052                           tosh	equ	0xFFE
  2053                           tosl	equ	0xFFD
  2054                           stkptr	equ	0xFFC
  2055                           pclatu	equ	0xFFB
  2056                           pclath	equ	0xFFA
  2057                           pcl	equ	0xFF9
  2058                           tblptru	equ	0xFF8
  2059                           tblptrh	equ	0xFF7
  2060                           tblptrl	equ	0xFF6
  2061                           tablat	equ	0xFF5
  2062                           prodh	equ	0xFF4
  2063                           prodl	equ	0xFF3
  2064                           indf0	equ	0xFEF
  2065                           postinc0	equ	0xFEE
  2066                           postdec0	equ	0xFED
  2067                           preinc0	equ	0xFEC
  2068                           plusw0	equ	0xFEB
  2069                           fsr0h	equ	0xFEA
  2070                           fsr0l	equ	0xFE9
  2071                           wreg	equ	0xFE8
  2072                           indf1	equ	0xFE7
  2073                           postinc1	equ	0xFE6
  2074                           postdec1	equ	0xFE5
  2075                           preinc1	equ	0xFE4
  2076                           plusw1	equ	0xFE3
  2077                           fsr1h	equ	0xFE2
  2078                           fsr1l	equ	0xFE1
  2079                           bsr	equ	0xFE0
  2080                           indf2	equ	0xFDF
  2081                           postinc2	equ	0xFDE
  2082                           postdec2	equ	0xFDD
  2083                           preinc2	equ	0xFDC
  2084                           plusw2	equ	0xFDB
  2085                           fsr2h	equ	0xFDA
  2086                           fsr2l	equ	0xFD9
  2087                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         82
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     23      83
    BANK0           160      0      32
    BANK1           256      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_CD4021Driver
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART1_Write_task->_Tx_deQ
    _EUSART1_Write->_Tx_enQ

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _EUSART1_Receive_ISR->_Rx_enQ

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0     689
                                              9 COMRAM    14    14      0
                       _CD4021Driver
                         _CD4021Read
                      _EUSART1_Write
                 _EUSART1_Write_task
                  _SYSTEM_Initialize
                          _Tx_isFull
 ---------------------------------------------------------------------------------
 (1) _Tx_isFull                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     392
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     294
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write_task                                   0     0      0      23
                             _Tx_deQ
                         _Tx_isEmpty
 ---------------------------------------------------------------------------------
 (2) _Tx_isEmpty                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Tx_deQ                                               1     1      0      23
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      44
                                              7 COMRAM     1     1      0
                             _Tx_enQ
 ---------------------------------------------------------------------------------
 (2) _Tx_enQ                                               1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CD4021Read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CD4021Driver                                         3     3      0     115
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0      45
                                              2 COMRAM     4     4      0
                _EUSART1_Receive_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  1     1      0      45
                                              1 COMRAM     1     1      0
                             _Rx_enQ
                          _Rx_isFull
 ---------------------------------------------------------------------------------
 (6) _Rx_isFull                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Rx_enQ                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CD4021Driver
   _CD4021Read
   _EUSART1_Write
     _Tx_enQ
   _EUSART1_Write_task
     _Tx_deQ
     _Tx_isEmpty
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _Tx_isFull

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     _Rx_enQ
     _Rx_isFull
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      20       4       20.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     17      53       1       88.3%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      73       6        0.0%
DATA                 0      0      73       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Apr 26 21:55:51 2020

                      _eusart1TxBufferRemaining 0053                                 _timer0ReloadVal 0052  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                   __CFG_LVP$ON 000000                                             l420 00C8  
                                  __CFG_CPB$OFF 000000                                             u300 02D0  
                                           u250 0304                                             u340 00F6  
                                           u350 0118                                             u360 0130  
                                           u440 0096                                             u346 00F8  
                                  __CFG_CPD$OFF 000000          __end_of_EUSART2_SetFramingErrorHandler 0342  
       __size_of_EUSART2_SetFramingErrorHandler 000A                  _EUSART2_SetFramingErrorHandler 0338  
                                           tosl 000FFD                                             wreg 000FE8  
                    main@CD4021DriveTimeCounter 0044                                     main@data_be 0048  
                                          l1513 011C                                            l1553 00AA  
                                          l1547 006C                                            l1497 00EE  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _WPUB 000F61  
                                 _EUSART1_Write 034C                                            _main 0054  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr2l 000FD9                                            btemp 0054  
                                 __CFG_BORV$190 000000                                            start 0050  
                                 __CFG_IESO$OFF 000000                                    ___param_bank 000000  
                              CD4021Driver@temp 0039                         __end_of_TMR0_Initialize 0248  
                ??_TMR0_DefaultInterruptHandler 0033                  __size_of_OSCILLATOR_Initialize 000E  
                 __end_of_OSCILLATOR_Initialize 0316                           _eusart1RxStatusBuffer 0001  
                                  ??_CD4021Read 0039                                           ?_main 0033  
                                         _T0CON 000FD5                                  __CFG_DEBUG$OFF 000000  
                                         i2l270 0026                                           i2l273 0032  
                                         i2l196 0250                                           i2l277 003C  
                                         _TMR0H 000FD7                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94               __size_of_TMR0_SetInterruptHandler 000A  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                     ?_TMR0_SetInterruptHandler 0039                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                         _Rx_CQ 0070                                           _Tx_CQ 0060  
                              __end_of_TMR0_ISR 0226                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                __CFG_EBTRB$OFF 000000                            EUSART1_Receive_ISR@c 0034  
                            __CFG_MCLRE$EXTMCLR 000000                                  ?_EUSART1_Write 0033  
                                         pclath 000FFA                                           ttemp5 0055  
                                         ttemp6 0058                                           ttemp7 005C  
                                         status 000FD8                                           wtemp8 0055  
                                __CFG_HFOFST$ON 000000                                  __CFG_PBADEN$ON 000000  
                            __end_of_CD4021Read 035E                                 __initialization 01DA  
                    __end_of_EUSART1_Initialize 01AC                                    __end_of_main 00D2  
                   ?_INTERRUPT_InterruptManager 0033                                          ??_main 003C  
                                 __activetblptr 000002                     _EUSART2_DefaultErrorHandler 000000  
                    __end_of_EUSART2_Initialize 0174                                          _ANSELA 000F38  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                __CFG_WDTEN$OFF 000000                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _RCSTA2 000F71  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                        _SPBRG2 000F75                                          i2u3_40 02F4  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                        _TXSTA2 000F72                                  __CFG_XINST$OFF 000000  
                                        _Rx_enQ 02AC                                          _Tx_deQ 0280  
                                        _Tx_enQ 0296                                  __CFG_STVREN$ON 000000  
                              ?_TMR0_Initialize 0033                                          clear_0 01E0  
                                        clear_1 01EC                     _EUSART2_FramingErrorHandler 0050  
                                    Rx_enQ@data 0033                                          tblptru 000FF8  
                            __size_of_Rx_isFull 0012                                 ??_EUSART1_Write 003A  
      TMR0_SetInterruptHandler@InterruptHandler 0039                                 _eusart1RxBuffer 0009  
                            __size_of_Tx_isFull 0012                                      Tx_deQ@data 0039  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart1TxBuffer 0011  
                                    _Tx_isEmpty 02F8                               _SYSTEM_Initialize 0266  
                                    __accesstop 0060                         __end_of__initialization 01F2  
                                    Tx_enQ@data 0039                              ?_SYSTEM_Initialize 0033  
                                 ___rparam_used 000001                                   CD4021Driver@i 003A  
                                __pcstackCOMRAM 0033                      __end_of_EUSART1_Write_task 02E6  
                           ??_SYSTEM_Initialize 003B                                       ?_TMR0_ISR 0033  
                                 ?_CD4021Driver 0033                        ?_EUSART2_SetErrorHandler 0039  
                   __end_of_EUSART1_Receive_ISR 0266                       __end_of_SYSTEM_Initialize 0280  
                                 _eusart1RxHead 002F                                   _eusart1TxHead 0031  
                                 _eusart1RxTail 002E                                      __pbssBANK0 0060  
                                 _eusart1TxTail 0030               _EUSART1_TxDefaultInterruptHandler 0025  
                               __CFG_PLLCFG$OFF 000000                ??_EUSART2_SetFramingErrorHandler 003B  
               ?_EUSART2_SetFramingErrorHandler 0039                                      __pnvCOMRAM 004A  
                            __CFG_CCP2MX$PORTC1 000000                                         ?_Rx_enQ 0033  
                                       ?_Tx_deQ 0033                                         ?_Tx_enQ 0033  
                             __end_of_Rx_isFull 02F8                __end_of_TMR0_SetInterruptHandler 032E  
                                    ??_TMR0_ISR 0033                              __CFG_CCP3MX$PORTB5 000000  
                                ??_CD4021Driver 0039                               __end_of_Tx_isFull 02D4  
                                       _OSCCON2 000FD2                                         i2u33_48 0212  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                       _SPBRGH2 000F76                                     ?_Tx_isEmpty 0033  
                               __CFG_PWRTEN$OFF 000000                                         __Hparam 0000  
                                       __Lparam 0000                                         _Rx_Head 002B  
                                       _Rx_Tail 0029                                         _Tx_Head 002A  
                                       _Tx_Tail 0028                                 __size_of_Rx_enQ 0016  
                               __size_of_Tx_deQ 0016                                 __size_of_Tx_enQ 0016  
                                       __pcinit 01DA                 __end_of_EUSART2_SetErrorHandler 034C  
                                       __ramtop 0200                                         __ptext0 0054  
                                       __ptext1 02C2                                         __ptext2 0266  
                                       __ptext3 0226                                         __ptext4 0324  
                                       __ptext5 01AC                                         __ptext6 0308  
                                       __ptext7 0356                                         __ptext8 0136  
                                       __ptext9 032E              _EUSART2_DefaultOverrunErrorHandler 000000  
                         _OSCILLATOR_Initialize 0308                              _EUSART1_Initialize 0174  
                      ??_PIN_MANAGER_Initialize 0039                      __size_of_SYSTEM_Initialize 001A  
                          end_of_initialization 01F2                             ?_EUSART1_Initialize 0033  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 001F  
                            _EUSART2_Initialize 0136                                         postinc0 000FEE  
                          ??_EUSART1_Initialize 0039                             ?_EUSART2_Initialize 0033  
                           __size_of_Tx_isEmpty 0010                        _TMR0_SetInterruptHandler 0324  
                                     _PORTAbits 000F80                             EUSART1_Write@txData 003A  
                          __end_of_CD4021Driver 0136                            ??_EUSART2_Initialize 003B  
                  __end_of_INTERRUPT_Initialize 035A                                  __end_of_Rx_enQ 02C2  
                                __end_of_Tx_deQ 0296                                  __end_of_Tx_enQ 02AC  
                             __size_of_TMR0_ISR 0026                          ?_OSCILLATOR_Initialize 0033  
                           start_initialization 01DA                              _EUSART1_Write_task 02D4  
                      __size_of_TMR0_Initialize 0022                 __size_of_PIN_MANAGER_Initialize 002E  
                         __end_of_EUSART1_Write 0356                             ?_EUSART1_Write_task 0033  
              __size_of_EUSART2_SetErrorHandler 000A          __end_of_EUSART2_SetOverrunErrorHandler 0338  
       __size_of_EUSART2_SetOverrunErrorHandler 000A                  _EUSART2_SetOverrunErrorHandler 032E  
                                      ??_Rx_enQ 0033                                        ??_Tx_deQ 0039  
                                      ??_Tx_enQ 0039                            ??_EUSART1_Write_task 003A  
                                     _Rx_isFull 02E6                                  _eusart1RxCount 002D  
                                     _Tx_isFull 02C2                                     __pbssCOMRAM 0001  
             _EUSART1_RxDefaultInterruptHandler 0023                                    ??_Tx_isEmpty 0039  
                  __size_of_EUSART1_Receive_ISR 001E                           _TMR0_InterruptHandler 004A  
                        _PIN_MANAGER_Initialize 01AC                                       __pintcode 0008  
                                    ?_Rx_isFull 0033                    ??_INTERRUPT_InterruptManager 0035  
                              __CFG_PRICLKEN$ON 000000                                      _CD4021Read 035A  
                            __end_of_Tx_isEmpty 0308                                      ?_Tx_isFull 0033  
                                      _BAUDCON1 000FB8                                        _BAUDCON2 000F70  
                          _EUSART1_ErrorHandler 001D                           __size_of_CD4021Driver 0064  
                          _INTERRUPT_Initialize 0356                               ??_TMR0_Initialize 003B  
                                      _LATAbits 000F89         EUSART2_SetErrorHandler@interruptHandler 0039  
                                      _PIE1bits 000F9D             __size_of_INTERRUPT_InterruptManager 0048  
                    ??_TMR0_SetInterruptHandler 003B                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                __CFG_WDTPS$32768 000000  
                                      _TMR0_ISR 0200                                    _CD4021Buffer 0027  
                                  _CD4021Driver 00D2                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0033                         _EUSART2_SetErrorHandler 0342  
                   _EUSART2_OverrunErrorHandler 004E                                        __Hrparam 0000  
                                      __Lrparam 0000                              __CFG_BOREN$SBORDIS 000000  
                             __CFG_P2BMX$PORTB5 000000                         ??_OSCILLATOR_Initialize 0039  
                   __size_of_EUSART1_Initialize 0038                                     ??_Rx_isFull 0033  
                                   ?_CD4021Read 0033                                     ??_Tx_isFull 0039  
                          _EUSART2_ErrorHandler 004C                                        __ptext10 0338  
                                      __ptext11 0342                                        __ptext12 0174  
                                      __ptext21 0200                                        __ptext13 02D4  
                                      __ptext22 0316                                        __ptext14 02F8  
                                      __ptext23 0248                                        __ptext15 0280  
                                      __ptext24 02E6                                        __ptext16 034C  
                                      __ptext25 02AC                                        __ptext17 0296  
                                      __ptext26 0000                                        __ptext18 035A  
                                      __ptext19 00D2                     __size_of_EUSART2_Initialize 003E  
                                 __size_of_main 007E              _EUSART2_DefaultFramingErrorHandler 000000  
          __end_of_TMR0_DefaultInterruptHandler 0324           __size_of_TMR0_DefaultInterruptHandler 000E  
                  _TMR0_DefaultInterruptHandler 0316  EUSART2_SetOverrunErrorHandler@interruptHandler 0039  
                                      int$flags 0054              __end_of_INTERRUPT_InterruptManager 0050  
                    _INTERRUPT_InterruptManager 0008                                        main@data 0049  
                   _EUSART1_FramingErrorHandler 0021                             _EUSART1_Receive_ISR 0248  
              ??_EUSART2_SetOverrunErrorHandler 003B                 ?_EUSART2_SetOverrunErrorHandler 0039  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 0039  
                     ??_EUSART2_SetErrorHandler 003B                                        intlevel2 0000  
                          ?_EUSART1_Receive_ISR 0033                         ?_PIN_MANAGER_Initialize 0033  
                                    _RCSTA1bits 000FAB                             __size_of_CD4021Read 0004  
                 ?_TMR0_DefaultInterruptHandler 0033                                     _timeCounter 0019  
EUSART2_SetFramingErrorHandler@interruptHandler 0039                     __size_of_EUSART1_Write_task 0012  
                        __size_of_EUSART1_Write 000A                              _eusart1RxLastError 002C  
                               _TMR0_Initialize 0226                               __CFG_T3CMX$PORTC0 000000  
                         ??_EUSART1_Receive_ISR 0034                  __end_of_PIN_MANAGER_Initialize 01DA  
                            _eusart2RxLastError 0032                               __CFG_FOSC$INTIO67 000000  
